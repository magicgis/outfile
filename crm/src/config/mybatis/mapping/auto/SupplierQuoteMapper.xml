<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.naswork.dao.SupplierQuoteDao" >
  <resultMap id="BaseResultMap" type="com.naswork.model.SupplierQuote" >
    <result column="ID" property="id" jdbcType="INTEGER" />
    <result column="SUPPLIER_INQUIRY_ID" property="supplierInquiryId" jdbcType="INTEGER" />
    <result column="CURRENCY_ID" property="currencyId" jdbcType="INTEGER" />
    <result column="EXCHANGE_RATE" property="exchangeRate" jdbcType="DOUBLE" />
    <result column="QUOTE_DATE" property="quoteDate" jdbcType="DATE" />
    <result column="UPDATE_TIMESTAMP" property="updateTimestamp" jdbcType="TIMESTAMP" />
    <result column="value" property="value" jdbcType="VARCHAR" />
    <result column="quote_status_value" property="quoteStatusValue" jdbcType="VARCHAR" />
    <result column="quote_status_id" property="quoteStatusId" jdbcType="VARCHAR" />
    <result column="quote_number" property="quoteNumber" jdbcType="VARCHAR" />
    <result column="supplier_inquiry_quote_number" property="supplierInquiryQuoteNumber" jdbcType="VARCHAR" />
    <result column="SOURCE_NUMBER" property="sourceNumber" jdbcType="VARCHAR" />
    <result column="FEE_FOR_EXCHANGE_BILL" property="feeForExchangeBill" jdbcType="DOUBLE" />
    <result column="BANK_COST" property="bankCost" jdbcType="DOUBLE" />
  </resultMap>
  
  <resultMap type="com.naswork.module.purchase.controller.supplierinquirystatistic.SupplierInquiryStatistic" id="SupplierInquiryStattistic">
   <result column="quote_amount" property="quoteAmount" jdbcType="INTEGER"/>
  <result column="supplier_id" property="supplierId" jdbcType="INTEGER"/>
  <result column="air_type_id" property="airTypeId" jdbcType="INTEGER"/>
   <result column="biz_type_id" property="bizTypeId" jdbcType="INTEGER"/>
  <result column="supplier_code" property="supplierCode" jdbcType="VARCHAR"/>
  <result column="air_type_code" property="airTypeCode" jdbcType="VARCHAR"/>
  <result column="biz_type_code" property="bizTypeCode" jdbcType="VARCHAR"/>
  <result column="supplier_inquiry_count" property="supplierInquiryCount" jdbcType="INTEGER"/>
  <result column="supplier_quote_count" property="supplierQuoteCount" jdbcType="INTEGER"/>
  <result column="supplier_quote_sum" property="supplierQuoteSum" jdbcType="DOUBLE"/>
  <result column="supplier_order_count" property="supplierOrderCount" jdbcType="INTEGER"/>
  <result column="supplier_order_sum" property="supplierOrderSum" jdbcType="DOUBLE"/>
  <result column="supplier_import_count" property="supplierImportCount" jdbcType="INTEGER"/>
  <result column="supplier_import_sum" property="supplierImportSum" jdbcType="DOUBLE"/>
  </resultMap>
  
  <resultMap id="ListDateMap" type="com.naswork.module.purchase.controller.supplierquote.SupplierQuoteVo" >
   <result column="counter_fee" property="counterFee" jdbcType="DOUBLE" />
     <result column="warranty" property="warranty" jdbcType="VARCHAR" />
     <result column="serial_number" property="serialNumber" jdbcType="VARCHAR" />
     <result column="tag_src" property="tagSrc" jdbcType="VARCHAR" />
     <result column="tag_date" property="tagDate" jdbcType="VARCHAR" />
     <result column="trace" property="trace" jdbcType="VARCHAR" />
   <result column="client_inquiry_id" property="clientInquiryId" jdbcType="INTEGER" />
   <result column="is_main" property="isMain" jdbcType="INTEGER" />
    <result column="main_part_number" property="mainPartNumber" jdbcType="VARCHAR" />
    <result column="moq" property="moq" jdbcType="INTEGER" />
  	<result column="location" property="location" jdbcType="VARCHAR" />
    <result column="quote_status_value" property="quoteStatusValue" jdbcType="VARCHAR" />
    <result column="SUPPLIER_ID" property="supplierId" jdbcType="INTEGER" />
    <result column="CLIENT_INQUIRY_ID" property="clientInquiryId" jdbcType="INTEGER" />
    <result column="cie_client_inquiry_id" property="cieClientInquiryId" jdbcType="INTEGER" />
    <result column="supplier_inquiry_quote_number" property="supplierInquiryQuoteNumber" jdbcType="VARCHAR" />
    <result column="supplier_inquiry_date" property="supplierInquiryDate" jdbcType="DATE" />
    <result column="supplier_deadline" property="supplierDeadline" jdbcType="DATE" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="UPDATE_TIMESTAMP" property="updateTimestamp" jdbcType="TIMESTAMP" />
 	<result column="ID" property="id" jdbcType="INTEGER" />
    <result column="SUPPLIER_INQUIRY_ID" property="supplierInquiryId" jdbcType="INTEGER" />
    <result column="CURRENCY_ID" property="currencyId" jdbcType="INTEGER" />
    <result column="EXCHANGE_RATE" property="exchangeRate" jdbcType="DOUBLE" />
    <result column="QUOTE_DATE" property="quoteDate" jdbcType="DATE" />
 	<result column="supplier_code" property="supplierCode" jdbcType="VARCHAR" />
    <result column="supplier_name" property="supplierName" jdbcType="VARCHAR" />
    <result column="supplier_contact_name" property="supplierContactName" jdbcType="VARCHAR" />
    <result column="supplier_fax" property="supplierFax" jdbcType="VARCHAR" />
 	<result column="client_inquiry_quote_number" property="clientInquiryQuoteNumber" jdbcType="VARCHAR" />
 	<result column="INQUIRY_STATUS_ID" property="inquiryStatusId" jdbcType="INTEGER" />
 	<result column="CLIENT_ID" property="clientId" jdbcType="INTEGER" />
 	<result column="AIR_TYPE_ID" property="airTypeId" jdbcType="INTEGER" />
 	<result column="client_code" property="clientCode" jdbcType="VARCHAR" />
 	<result column="air_type_code" property="airTypeCode" jdbcType="VARCHAR" />
 	<result column="currency_code" property="currencyCode" jdbcType="VARCHAR" />
 	<result column="currency_value" property="currencyValue" jdbcType="VARCHAR" />
 	<result column="rate" property="rate" jdbcType="DOUBLE" />
 	<result column="item" property="item" jdbcType="INTEGER" />
 	<result column="csn" property="csn" jdbcType="INTEGER" />
 	<result column="quote_part_number" property="quotePartNumber" jdbcType="VARCHAR" />
 	<result column="quote_alter_part_number" property="quoteAlterPartNumber" jdbcType="VARCHAR" />
 	<result column="quote_description" property="quoteDescription" jdbcType="VARCHAR" />
 	<result column="quote_amount" property="quoteAmount" jdbcType="DOUBLE" />
 	<result column="quote_unit" property="quoteUnit" jdbcType="VARCHAR" />
 	<result column="price" property="price" jdbcType="DOUBLE" />
 	<result column="LEAD_TIME" property="leadTime" jdbcType="VARCHAR" />
 	<result column="condition_code" property="conditionCode" jdbcType="VARCHAR" />
 	<result column="certification_code" property="certificationCode" jdbcType="VARCHAR" />
 	<result column="supplier_quote_status_value" property="supplierQuoteStatusValue" jdbcType="VARCHAR" />
 	<result column="quote_remark" property="quoteRemark" jdbcType="VARCHAR" />
 	<result column="condition_value" property="conditionValue" jdbcType="VARCHAR" />
 	<result column="certification_value" property="certificationValue" jdbcType="VARCHAR" />
 	<result column="supplier_quote_status_code" property="supplierQuoteStatusCode" jdbcType="VARCHAR" />
 	<result column="supplier_quote_status_id" property="supplierQuoteStatusId" jdbcType="INTEGER" />
 	<result column="certification_id" property="certificationId" jdbcType="INTEGER" />
 	<result column="condition_id" property="conditionId" jdbcType="INTEGER" />
 	<result column="supplier_quote_quote_number" property="supplierQuoteQuoteNumber" jdbcType="VARCHAR" />
 	<result column="validity" property="validity" jdbcType="DATE" />
 	<result column="SOURCE_NUMBER" property="sourceNumber" jdbcType="VARCHAR" />
 	<result column="AVAILABLE_QTY" property="availableQty" jdbcType="DOUBLE" />
 	<result column="CORE_CHARGE" property="coreCharge" jdbcType="VARCHAR" />
 	<result column="FEE_FOR_EXCHANGE_BILL" property="feeForExchangeBill" jdbcType="VARCHAR" />
 	<result column="BANK_COST" property="bankCost" jdbcType="DOUBLE" />
 	<result column="HAZMAT_FEE" property="hazmatFee" jdbcType="DOUBLE" />
 	<result column="QUOTE_FEE_FOR_EXCHANGE_BILL" property="quoteFeeForExchangeBill" jdbcType="VARCHAR" />
 	<result column="QUOTE_BANK_COST" property="quoteBankCost" jdbcType="VARCHAR" />
 	<result column="QUOTE_HAZMAT_FEE" property="quoteHazmatFee" jdbcType="VARCHAR" />
 	<result column="OTHER_FEE" property="otherFee" jdbcType="DOUBLE" />
 	<result column="QUOTE_OTHER_FEE" property="quoteOtherFee" jdbcType="VARCHAR" />
 	<result column="user_name" property="userName" jdbcType="VARCHAR" />
  </resultMap>
  
   <!-- <resultMap id="ElementListDateMap" type="com.naswork.module.home.controller.supplierquote.SupplierQuoteVo" >
   
   </resultMap> -->
  
  <resultMap id="SelectListDateMap" type="com.naswork.module.purchase.controller.supplierquote.ListDateVo" >
   <result column="ID" property="id" jdbcType="INTEGER" />
    <result column="CODE" property="code" jdbcType="VARCHAR" />
    <result column="value" property="value" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="CURRENCY_ID" property="currencyId" jdbcType="INTEGER" />
    <result column="CONTACT_NAME" property="contactName" jdbcType="VARCHAR" />
    <result column="POST_CODE" property="postCode" jdbcType="VARCHAR" />
    <result column="ADDRESS" property="address" jdbcType="VARCHAR" />
    <result column="PHONE" property="phone" jdbcType="VARCHAR" />
    <result column="MOBILE" property="mobile" jdbcType="VARCHAR" />
    <result column="FAX" property="fax" jdbcType="VARCHAR" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="BANK" property="bank" jdbcType="VARCHAR" />
    <result column="BANK_ACCOUNT_NUMBER" property="bankAccountNumber" jdbcType="VARCHAR" />
    <result column="TAX_PAYER_NUMBER" property="taxPayerNumber" jdbcType="VARCHAR" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="UPDATE_TIMESTAMP" property="updateTimestamp" jdbcType="TIMESTAMP" />
     <result column="currency_value" property="currencyValue" jdbcType="VARCHAR" />
   <result column="currency_code" property="currencyCode" jdbcType="VARCHAR" />
  	<result column="rate" property="rate" jdbcType="DOUBLE" />
  </resultMap>
  
   <resultMap type="com.naswork.model.SystemCode" id="systemCode">
  	<result column="ID" property="id" jdbcType="INTEGER" />
    <result column="TYPE" property="type" jdbcType="VARCHAR" />
    <result column="CODE" property="code" jdbcType="VARCHAR" />
    <result column="VALUE" property="value" jdbcType="VARCHAR" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="UPDATE_TIMESTAMP" property="updateTimestamp" jdbcType="TIMESTAMP" />
  </resultMap>
  
   <resultMap id="ClientInquiryMap" type="com.naswork.model.ClientInquiry" >
      <result column="supplier_quote_element_id" property="supplierQuoteElementId" jdbcType="INTEGER" />
     <result column="supplier_quote_id" property="supplierQuoteId" jdbcType="INTEGER" />
    <result column="supplier_inquiry_quote_number" property="supplierInquiryQuoteNumber" jdbcType="VARCHAR" />
   <result column="quote_remark" property="quoteRemark" jdbcType="VARCHAR" />
    	<result column="quote_price" property="quotePrice" jdbcType="DOUBLE" />
    <result column="item" property="item" jdbcType="INTEGER" />
       <result column="csn" property="csn" jdbcType="INTEGER" />
     <result column="ID" property="id" jdbcType="INTEGER" />
     <result column="ELEMENT_ID" property="elementId" jdbcType="INTEGER" />
    <result column="CLIENT_CONTACT_ID" property="clientContactId" jdbcType="INTEGER" />
    <result column="CLIENT_ID" property="clientId" jdbcType="INTEGER" />
    <result column="BIZ_TYPE_ID" property="bizTypeId" jdbcType="INTEGER" />
    <result column="AIR_TYPE_ID" property="airTypeId" jdbcType="INTEGER" />
    <result column="INQUIRY_DATE" property="inquiryDate" jdbcType="DATE" />
    <result column="DEADLINE" property="deadline" jdbcType="DATE" />
    <result column="SOURCE_NUMBER" property="sourceNumber" jdbcType="VARCHAR" />
    <result column="PART_NUMBER" property="partNumber" jdbcType="VARCHAR" />
     <result column="SUPPLIER_CODE" property="supplierCode" jdbcType="VARCHAR" />
    <result column="QUOTE_NUMBER" property="quoteNumber" jdbcType="VARCHAR" />
    <result column="QUOTE_NUMBER_SEQ" property="quoteNumberSeq" jdbcType="INTEGER" />
    <result column="TERMS" property="terms" jdbcType="VARCHAR" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="INQUIRY_STATUS_ID" property="inquiryStatusId" jdbcType="INTEGER" />
    <result column="UPDATE_TIMESTAMP" property="updateTimestamp" jdbcType="TIMESTAMP" />
    <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
 	<result column="AMOUNT" property="amount" jdbcType="DOUBLE" />
 	<result column="price" property="price" jdbcType="DOUBLE" />
 	<result column="UNIT" property="unit" jdbcType="VARCHAR" />
 	<result column="AIR_TYPE" property="airType" jdbcType="VARCHAR" />
 	<result column="COUNTER_FEE" property="counterFee" jdbcType="DOUBLE" />
 	<result column="exchange_rate" property="exchangeRate" jdbcType="DOUBLE" />
  </resultMap>
   
  <!-- 查询飞机类型 -->
  <select id="findAirType" resultMap="systemCode" parameterType="page" >
  		select id,CONCAT(CODE,'-',VALUE) AS CODE from system_code where type='AIR_TYPE'  	
  				<where>
			   ${where}
			   </where> 
			   order by code
  </select>
  
    <!-- 查询客户询价资料 -->
  <select id="findClientInquirypage" resultMap="ClientInquiryMap" parameterType="page" >
  		select SOURCE_NUMBER,ID,QUOTE_NUMBER,CLIENT_ID from client_inquiry 
  				<where>
			   ${where}
			   </where> 
  </select>
  
  <select id="findClientInquiry" resultMap="ClientInquiryMap" parameterType="com.naswork.module.purchase.controller.supplierquote.ListDateVo" >
  		select DISTINCT ci.ID,ci.SOURCE_NUMBER,cie.item
		from client_inquiry_element cie  INNER JOIN
		 client_inquiry ci on (ci.ID=cie.CLIENT_INQUIRY_ID)
		where 1=1
		<if test="airTypeId!='null'">
		 and ci.AIR_TYPE_ID in (${airTypeId})
		</if>
		
		and ci.CLIENT_ID =#{clientId}
		
		<if test="clientinquiryId!='null'">
		and ci.ID in (${clientinquiryId})
		</if>
		order by cie.csn
  </select>
  
    
  <select id="findClientInquiryPage" resultMap="ClientInquiryMap" parameterType="page" >
  		select cie.ELEMENT_ID,ci.ID,ci.SOURCE_NUMBER,cie.PART_NUMBER,cie.AMOUNT,cie.UNIT,cie.DESCRIPTION ,cie.item,sy.`VALUE` as air_type,ci.quote_number
		from client_inquiry_element cie  INNER JOIN
		 client_inquiry ci on (ci.ID=cie.CLIENT_INQUIRY_ID)
		 INNER JOIN element e on
			(e.ID=cie.ELEMENT_ID) 
			INNER JOIN system_code sy on 
(sy.ID=ci.AIR_TYPE_ID)
		where 1=1
		<if test="airTypeId!='null'">
		 and ci.AIR_TYPE_ID in (${airTypeId})
		</if>
		
		and ci.CLIENT_ID =#{clientId}
		
		<if test="clientinquiryId!='null'">
		and ci.ID in (${clientinquiryId})
		</if>
		
		<if test="partNumber!=''">
		and	${partNumber}
		</if>
		
  </select>
  
  
   <select id="findSupplierQuote" resultMap="ClientInquiryMap" parameterType="Integer" >
			  	SELECT cie.id,cie.csn,s.`CODE` as supplier_code,sqe.PRICE,sqe.remark,si.SUPPLIER_ID,ci.quote_number,
			  	si.quote_number AS supplier_inquiry_quote_number,sqe.element_id,
			  	ci.SOURCE_NUMBER,cie.PART_NUMBER,cie.AMOUNT,cie.UNIT,cie.DESCRIPTION,cie.item,sy.`VALUE` as air_type,
			  	sqe.id supplier_quote_element_id,sqe.supplier_quote_id,sqe.remark quote_remark,sqe.price quote_price
			FROM
				supplier_quote_element sqe
				LEFT JOIN  client_quote_element cqe on cqe.SUPPLIER_QUOTE_ELEMENT_ID=sqe.ID
				
			LEFT JOIN supplier_inquiry_element sie ON (
				sie.ID = sqe.SUPPLIER_INQUIRY_ELEMENT_ID
			)
			LEFT JOIN supplier_inquiry si ON (
				si.id = sie.SUPPLIER_INQUIRY_ID
			)
			RIGHT JOIN client_inquiry_element cie ON (
				cie.ID = sie.CLIENT_INQUIRY_ELEMENT_ID
			)
			LEFT JOIN client_inquiry ci ON (
				ci.ID = cie.CLIENT_INQUIRY_ID
			)
			LEFT JOIN supplier s ON (s.ID = si.SUPPLIER_ID)
			LEFT JOIN supplier_quote sq ON (
				sq.ID = sqe.SUPPLIER_QUOTE_ID
			)
			INNER JOIN system_code sy on 
			(sy.ID=ci.AIR_TYPE_ID)
			WHERE
				ci.ID=#{0}
			AND cie.item=#{1}
			AND	sqe.supplier_quote_status_id = '70'
						and sq.quote_status_id=90
			
  </select>
  
  <select id="findSupplierQuoteForCom" resultMap="ClientInquiryMap" parameterType="Integer" >
		SELECT
			cie.id,
			cie.csn,
			s.`CODE` AS supplier_code,
			sqe.PRICE,
			sqe.remark,
			si.SUPPLIER_ID,
			ci.quote_number,
			si.quote_number AS supplier_inquiry_quote_number,
			sqe.element_id,
			ci.SOURCE_NUMBER,
			cie.PART_NUMBER,
			cie.AMOUNT,
			cie.UNIT,
			cie.DESCRIPTION,
			cie.item,
			sy.`VALUE` AS air_type,
			sqe.id supplier_quote_element_id,
			sqe.supplier_quote_id,
			sqe.remark quote_remark,
			sqe.price quote_price
		FROM
			client_inquiry_element cie
		LEFT JOIN supplier_inquiry_element sie ON (
			sie.CLIENT_INQUIRY_ELEMENT_ID = cie.ID
		)
		LEFT JOIN supplier_quote_element sqe ON (
			sie.ID = sqe.SUPPLIER_INQUIRY_ELEMENT_ID
		)
		LEFT JOIN client_quote_element cqe ON cqe.SUPPLIER_QUOTE_ELEMENT_ID = sqe.ID
		LEFT JOIN supplier_inquiry si ON (
			si.id = sie.SUPPLIER_INQUIRY_ID
		)
		LEFT JOIN client_inquiry ci ON (
			ci.ID = cie.CLIENT_INQUIRY_ID
		)
		LEFT JOIN supplier s ON (s.ID = si.SUPPLIER_ID)
		LEFT JOIN supplier_quote sq ON (
			sq.ID = sqe.SUPPLIER_QUOTE_ID
		)
		INNER JOIN system_code sy ON (sy.ID = ci.AIR_TYPE_ID)
		WHERE
			ci.ID=#{0}
		AND cie.item=#{1}
		AND ((sqe.supplier_quote_status_id = '70'
		AND sq.quote_status_id = 90) or sqe.ID IS NULL)

			
  </select>
  
  
     <select id="findWeatherQuote" resultMap="ClientInquiryMap" parameterType="page" >
			  	SELECT cie.id,s.`CODE` as supplier_code,sqe.PRICE,sqe.remark,si.SUPPLIER_ID,ci.quote_number,s.COUNTER_FEE,
			  	ci.SOURCE_NUMBER,cie.PART_NUMBER,cie.AMOUNT,cie.UNIT,cie.DESCRIPTION,cie.item,sy.`VALUE` as air_type,sq.exchange_rate
			FROM
				supplier_quote_element sqe
				LEFT JOIN  client_quote_element cqe on cqe.SUPPLIER_QUOTE_ELEMENT_ID=sqe.ID
			LEFT JOIN supplier_inquiry_element sie ON (
				sie.ID = sqe.SUPPLIER_INQUIRY_ELEMENT_ID
			)
			LEFT JOIN supplier_inquiry si ON (
				si.id = sie.SUPPLIER_INQUIRY_ID
			)
			RIGHT JOIN client_inquiry_element cie ON (
				cie.ID = sie.CLIENT_INQUIRY_ELEMENT_ID
			)
			LEFT JOIN client_inquiry ci ON (
				ci.ID = cie.CLIENT_INQUIRY_ID
			)
			
			LEFT JOIN supplier s ON (s.ID = si.SUPPLIER_ID)
			LEFT JOIN supplier_quote sq ON (
				sq.ID = sqe.SUPPLIER_QUOTE_ID
			)
			INNER JOIN system_code sy on (sy.ID=ci.AIR_TYPE_ID)
			WHERE
				ci.ID=${id}
			AND cie.item=${item}
  </select>
  
   <select id="findSupplierQuotePage" resultMap="ListDateMap" parameterType="page" >
    SELECT sq.id, sq.supplier_inquiry_id, sq.quote_date,sc.value as quote_status_value,
			   si.client_inquiry_id, ci.quote_number AS client_inquiry_quote_number, ci.inquiry_status_id,  
			   ci.client_id, c.code AS client_code,sq.validity,
			   ci.air_type_id, at.code AS air_type_code,sq.BANK_COST as counter_fee,
			   si.supplier_id, s.code AS supplier_code, s.name AS supplier_name,  
			   s.contact_name AS supplier_contact_name, s.fax AS supplier_fax,  
			   si.quote_number AS supplier_inquiry_quote_number, 
			   sq.quote_number AS supplier_quote_quote_number,
			   si.inquiry_date AS supplier_inquiry_date, si.deadline AS supplier_deadline,  
			   sq.currency_id, cu.code AS currency_code, cu.value AS currency_value, cu.rate,  sq.FEE_FOR_EXCHANGE_BILL,
			   sq.exchange_rate, si.remark, sq.update_timestamp,sq.SOURCE_NUMBER,
			   IFNULL(tuu.login_name,tu.login_name) as user_name
			   FROM supplier_inquiry si  
			   INNER JOIN supplier_quote sq ON (si.id=sq.supplier_inquiry_id)  
			   INNER JOIN supplier s ON (si.supplier_id=s.id)  
			   INNER JOIN client_inquiry ci ON (si.client_inquiry_id=ci.id)  
			   INNER JOIN client c ON (ci.client_id=c.id)  
			   INNER JOIN system_code at ON (ci.air_type_id=at.id)  
			   INNER JOIN system_code bt ON (ci.biz_type_id=bt.id)  
			   INNER JOIN v_currency cu ON (sq.currency_id=cu.id)  
			   INNER JOIN system_code sc ON (sc.id=sq.quote_status_id)
			   LEFT JOIN t_user tu on (tu.user_id = sq.CREATE_USER)
			   LEFT JOIN t_user tuu on (tuu.user_id = sq.LAST_UPDATE_USER)
			   	<if test="userId != null">
			   INNER JOIN authority_relation ar on (ar.SUPPLIER_ID=s.ID)
			   </if>
			   <where>
			   ${where}
			   </where>
			   <if test="orderby != null">
						${orderby}
					</if>
			   <!-- ORDER BY sq.quote_date DESC -->
  </select>
  
  <select id="findSupplierQuoteElementPage" resultMap="ListDateMap" parameterType="page">
   SELECT sqe.id, si.client_inquiry_id,sqe.location,sqe.moq,cie.is_main,cc.part_number as main_part_number,
			   sqe.supplier_quote_id, sq.quote_date, ci.quote_number AS client_inquiry_quote_number,  
			   s.id AS supplier_id, s.code AS supplier_code, s.name AS supplier_name, 
			   sq.currency_id, cu.code AS currency_code, cu.value AS currency_value, sq.exchange_rate,  
			   si.quote_number AS supplier_inquiry_quote_number,  sqe.validity,
			   sqe.supplier_inquiry_element_id, sie.client_inquiry_element_id, cie.item,cie.csn,
			   sqe.lead_time, cie.client_inquiry_id AS cie_client_inquiry_id, sqe.price,  
			   sqe.price*sq.exchange_rate AS base_price,  
			   sqe.condition_id, cond.code AS condition_code, cond.value AS condition_value,sqe.AVAILABLE_QTY,  
			   sqe.certification_id, cert.code AS certification_code, cert.value AS certification_value,  
			   sqe.supplier_quote_status_id, sqs.code AS supplier_quote_status_code, sqs.value AS supplier_quote_status_value,  
			   cie.element_id AS inquiry_element_id, sqe.element_id AS quote_element_id,  
			   cie.part_number AS inquiry_part_number, sqe.part_number AS quote_part_number, 
			   sqe.alter_part_number AS quote_alter_part_number, 
			   cie.unit AS inquiry_unit, sqe.unit AS quote_unit,sqe.FEE_FOR_EXCHANGE_BILL as QUOTE_FEE_FOR_EXCHANGE_BILL,
			   cie.amount AS inquiry_amount, sqe.amount AS quote_amount,  
			   cie.description AS inquiry_description, sqe.description AS quote_description,  
			   cie.remark AS inquiry_remark, sqe.remark AS quote_remark,sqe.CORE_CHARGE,
			   sqe.update_timestamp,sqe.warranty,sqe.serial_number,sqe.tag_src,sqe.tag_date,sqe.trace,sqe.BANK_COST as QUOTE_BANK_COST,sqe.HAZMAT_FEE as QUOTE_HAZMAT_FEE,sqe.OTHER_FEE as QUOTE_OTHER_FEE
			   FROM supplier_quote_element sqe  
			   INNER JOIN supplier_quote sq ON (sqe.supplier_quote_id=sq.id)  
			   INNER JOIN supplier_inquiry si ON (sq.supplier_inquiry_id=si.id)  
			   INNER JOIN client_inquiry ci ON (si.client_inquiry_id=ci.id)  
			   INNER JOIN supplier s ON (si.supplier_id=s.id)  
			   INNER JOIN supplier_inquiry_element sie ON (sqe.supplier_inquiry_element_id=sie.id)  
			   INNER JOIN client_inquiry_element cie ON (sie.client_inquiry_element_id=cie.id)  
			   INNER JOIN element e ON (sqe.element_id=e.id)  
			   INNER JOIN system_code cu ON (sq.currency_id=cu.id)  
			   INNER JOIN system_code cond ON (sqe.condition_id=cond.id)  
			   INNER JOIN system_code cert ON (sqe.certification_id=cert.id)  
			   INNER JOIN system_code sqs ON (sqe.supplier_quote_status_id=sqs.id) 
			   LEFT JOIN  client_inquiry_element cc ON(cc.id = cie.main_id)
			 WHERE sq.id='${Id}'
			 <if test="orderby != null">
			${orderby}
		</if>
  </select>
  
   <select id="findSupplierQuoteElement" resultMap="ListDateMap" parameterType="Integer">
   SELECT sqe.id, si.client_inquiry_id,  
			   sqe.supplier_quote_id, sq.quote_date, ci.quote_number AS client_inquiry_quote_number,  
			   s.id AS supplier_id, s.code AS supplier_code, s.name AS supplier_name,  
			   sq.currency_id, cu.code AS currency_code, cu.value AS currency_value, sq.exchange_rate,  
			   si.quote_number AS supplier_inquiry_quote_number,  
			   sqe.supplier_inquiry_element_id, sie.client_inquiry_element_id, cie.item,  
			   sqe.lead_time, cie.client_inquiry_id AS cie_client_inquiry_id, sqe.price,  
			   sqe.price*sq.exchange_rate AS base_price,  
			   sqe.condition_id, cond.code AS condition_code, cond.value AS condition_value,  
			   sqe.certification_id, cert.code AS certification_code, cert.value AS certification_value,  
			   sqe.supplier_quote_status_id, sqs.code AS supplier_quote_status_code, sqs.value AS supplier_quote_status_value,  
			   cie.element_id AS inquiry_element_id, sqe.element_id AS quote_element_id,  
			   cie.part_number AS inquiry_part_number, sqe.part_number AS quote_part_number, 
			   sqe.alter_part_number AS quote_alter_part_number, 
			   cie.unit AS inquiry_unit, sqe.unit AS quote_unit,  
			   cie.amount AS inquiry_amount, sqe.amount AS quote_amount,  
			   cie.description AS inquiry_description, sqe.description AS quote_description,  
			   cie.remark AS inquiry_remark, sqe.remark AS quote_remark,  
			   sqe.update_timestamp  
			   FROM supplier_quote_element sqe  
			   INNER JOIN supplier_quote sq ON (sqe.supplier_quote_id=sq.id)  
			   INNER JOIN supplier_inquiry si ON (sq.supplier_inquiry_id=si.id)  
			   INNER JOIN client_inquiry ci ON (si.client_inquiry_id=ci.id)  
			   INNER JOIN supplier s ON (si.supplier_id=s.id)  
			   INNER JOIN supplier_inquiry_element sie ON (sqe.supplier_inquiry_element_id=sie.id)  
			   INNER JOIN client_inquiry_element cie ON (sie.client_inquiry_element_id=cie.id)  
			   INNER JOIN element e ON (sqe.element_id=e.id)  
			   INNER JOIN system_code cu ON (sq.currency_id=cu.id)  
			   INNER JOIN system_code cond ON (sqe.condition_id=cond.id)  
			   INNER JOIN system_code cert ON (sqe.certification_id=cert.id)  
			   INNER JOIN system_code sqs ON (sqe.supplier_quote_status_id=sqs.id) 
			 WHERE sq.id=#{id}
  </select>
  
   <select id="findSupplierInquiry" resultMap="BaseResultMap" parameterType="Integer" >
   SELECT sq.id, sq.supplier_inquiry_id, sq.quote_date,  
			   si.client_inquiry_id, ci.quote_number AS client_inquiry_quote_number, ci.inquiry_status_id,  
			   ci.client_id, c.code AS client_code,  
			   ci.air_type_id, at.code AS air_type_code,  
			   si.supplier_id, s.code AS supplier_code, s.name AS supplier_name,  
			   s.contact_name AS supplier_contact_name, s.fax AS supplier_fax,  
			   si.quote_number AS supplier_inquiry_quote_number,  
			   si.inquiry_date AS supplier_inquiry_date, si.deadline AS supplier_deadline,  
			   sq.currency_id, cu.code AS currency_code, cu.value AS currency_value, cu.rate,  
			   sq.exchange_rate, si.remark, si.update_timestamp  
			   FROM supplier_inquiry si  
			   INNER JOIN supplier_quote sq ON (si.id=sq.supplier_inquiry_id)  
			   INNER JOIN supplier s ON (si.supplier_id=s.id)  
			   INNER JOIN client_inquiry ci ON (si.client_inquiry_id=ci.id)  
			   INNER JOIN client c ON (ci.client_id=c.id)  
			   INNER JOIN system_code at ON (ci.air_type_id=at.id)  
			   INNER JOIN system_code bt ON (ci.biz_type_id=bt.id)  
			   INNER JOIN v_currency cu ON (sq.currency_id=cu.id)  
			  WHERE sq.supplier_inquiry_id=#{supplierinquiryid}
			  </select>
  
  <select id="findsupplier" resultType="INTEGER" parameterType="INTEGER">
  SELECT max(cie.ITEM) FROM client_inquiry_element cie where cie.CLIENT_INQUIRY_ID=#{clientinquiryid} 
  </select>
  
   <!-- 供应商id -->
  <select id="findsid" resultMap="SelectListDateMap" parameterType="com.naswork.model.AuthorityRelation">
  SELECT s.id, s.code<!-- , s.name, s.contact_name, s.currency_id, cu.code AS currency_code, cu.value AS currency_value, cu.rate, s.post_code, s.address, s.phone, s.mobile, s.fax, s.email, s.remark, s.bank, s.bank_account_number, s.tax_payer_number, s.update_timestamp --> FROM supplier s 
  INNER JOIN v_currency cu ON (s.currency_id=cu.id) 
  <if test="userId != null">
	 INNER JOIN authority_relation ar on (ar.SUPPLIER_ID=s.ID)
	where ar.USER_ID=${userId}
	</if>
 ORDER BY code ASC
  </select>
  
   <!-- 客户id -->
  <select id="findcid" resultMap="SelectListDateMap">
  SELECT c.id, c.code, c.name, c.currency_id, cu.code AS currency_code, cu.value AS currency_value, cu.rate, c.post_code, c.address, c.ship_address, c.phone, c.fax, c.email, c.remark, c.update_timestamp FROM client c INNER JOIN v_currency cu ON (c.currency_id=cu.id) WHERE 1=1 ORDER BY code ASC
  </select>
  
   <!-- 商业类型id -->
  <select id="findbizid" resultMap="SelectListDateMap">
	SELECT id,code,value FROM system_code WHERE type='BIZ_TYPE' ORDER BY code ASC  
	</select>
	
	<!-- 机型id -->
  <select id="findairid" resultMap="SelectListDateMap">
	SELECT id,code,value FROM system_code WHERE type='AIR_TYPE' ORDER BY code ASC  
	</select>
	
	<!-- 状态 -->
	 <select id="findcond" resultMap="SelectListDateMap">
  SELECT id,code,value FROM system_code WHERE type='COND' ORDER BY id ASC
  </select>
  
  <!-- 证书 -->
	 <select id="findcert" resultMap="SelectListDateMap">
  SELECT id,code,value FROM system_code WHERE type='CERT' ORDER BY id ASC
  </select>
  
  <!-- 状态 -->
	 <select id="findsqstauts" resultMap="SelectListDateMap">
	SELECT * FROM system_code WHERE type='SQ_STATUS' ORDER BY code ASC
  </select>
  
  <sql id="Base_Column_List" >
    sq.*,cu.value,s.value as quote_status_value,SOURCE_NUMBER,BANK_COST,FEE_FOR_EXCHANGE_BILL
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
   from supplier_quote sq 
  INNER JOIN v_currency cu ON (sq.currency_id=cu.id)
   INNER JOIN system_code s ON (s.id=sq.quote_status_id)
where sq.ID= #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from supplier_quote
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.naswork.model.SupplierQuote" >
   <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
		SELECT LAST_INSERT_ID() AS id
	</selectKey>
    insert into supplier_quote (ID, SUPPLIER_INQUIRY_ID, CURRENCY_ID, 
      EXCHANGE_RATE, QUOTE_DATE, UPDATE_TIMESTAMP,SOURCE_NUMBER,CREATE_USER
      )
    values (#{id,jdbcType=INTEGER}, #{supplierInquiryId,jdbcType=INTEGER}, #{currencyId,jdbcType=INTEGER}, 
      #{exchangeRate,jdbcType=DOUBLE}, #{quoteDate,jdbcType=DATE}, #{updateTimestamp,jdbcType=TIMESTAMP}, #{sourceNumber,jdbcType=VARCHAR}, #{createUser,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.naswork.model.SupplierQuote" >
   <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
		SELECT LAST_INSERT_ID() AS id
	</selectKey>
    insert into supplier_quote
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="supplierInquiryId != null" >
        SUPPLIER_INQUIRY_ID,
      </if>
      <if test="currencyId != null" >
        CURRENCY_ID,
      </if>
      <if test="exchangeRate != null" >
        EXCHANGE_RATE,
      </if>
      <if test="quoteDate != null" >
        QUOTE_DATE,
      </if>
      <if test="updateTimestamp != null" >
        UPDATE_TIMESTAMP,
      </if>
      <if test="quoteNumber != null" >
        QUOTE_NUMBER,
      </if>
      <if test="validity != null" >
        VALIDITY,
      </if>
      <if test="createUser != null" >
        CREATE_USER,
      </if>
      <if test="sourceNumber != null" >
        SOURCE_NUMBER,
      </if>
      <if test="feeForExchangeBill != null" >
        FEE_FOR_EXCHANGE_BILL,
      </if>
      <if test="bankCost != null" >
        BANK_COST,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="supplierInquiryId != null" >
        #{supplierInquiryId,jdbcType=INTEGER},
      </if>
      <if test="currencyId != null" >
        #{currencyId,jdbcType=INTEGER},
      </if>
      <if test="exchangeRate != null" >
        #{exchangeRate,jdbcType=DOUBLE},
      </if>
      <if test="quoteDate != null" >
        #{quoteDate,jdbcType=DATE},
      </if>
      <if test="updateTimestamp != null" >
        #{updateTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="quoteNumber != null" >
        #{quoteNumber,jdbcType=VARCHAR},
      </if>
      <if test="validity != null" >
        #{validity,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="sourceNumber != null" >
        #{sourceNumber,jdbcType=VARCHAR},
      </if>
      <if test="feeForExchangeBill != null" >
        #{feeForExchangeBill,jdbcType=DOUBLE},
      </if>
      <if test="bankCost != null" >
        #{bankCost,jdbcType=DOUBLE}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.naswork.model.SupplierQuote" >
    update supplier_quote
    <set >
      <if test="supplierInquiryId != null" >
        SUPPLIER_INQUIRY_ID = #{supplierInquiryId,jdbcType=INTEGER},
      </if>
      <if test="currencyId != null" >
        CURRENCY_ID = #{currencyId,jdbcType=INTEGER},
      </if>
      <if test="exchangeRate != null" >
        EXCHANGE_RATE = #{exchangeRate,jdbcType=DOUBLE},
      </if>
      <if test="quoteDate != null" >
        QUOTE_DATE = #{quoteDate,jdbcType=DATE},
      </if>
      <if test="updateTimestamp != null" >
        UPDATE_TIMESTAMP = #{updateTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="sourceNumber != null" >
        SOURCE_NUMBER = #{sourceNumber,jdbcType=VARCHAR},
      </if>
      <if test="quoteStatusId != null" >
        QUOTE_STATUS_ID = #{quoteStatusId,jdbcType=INTEGER},
      </if>
      <if test="feeForExchangeBill != null" >
        FEE_FOR_EXCHANGE_BILL = #{feeForExchangeBill,jdbcType=DOUBLE},
      </if>
      <if test="bankCost != null" >
        BANK_COST = #{bankCost,jdbcType=DOUBLE},
      </if>
      <if test="lastUpdateUser != null" >
        LAST_UPDATE_USER = #{lastUpdateUser,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.naswork.model.SupplierQuote" >
    update supplier_quote
    set 
      CURRENCY_ID = #{currencyId,jdbcType=INTEGER},
      EXCHANGE_RATE = #{exchangeRate,jdbcType=DOUBLE},
      QUOTE_DATE = #{quoteDate,jdbcType=DATE},
      QUOTE_STATUS_ID=#{quoteStatusId},
      VALIDITY=#{validity},
      SOURCE_NUMBER=#{sourceNumber},
      FEE_FOR_EXCHANGE_BILL = #{feeForExchangeBill},
      BANK_COST = #{bankCost},
      LAST_UPDATE_USER = #{lastUpdateUser},
      UPDATE_TIMESTAMP =  CURRENT_TIMESTAMP
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="findBySupplierInquiryId" parameterType="Integer" resultType="Integer">
  	select COUNT(*) from supplier_quote sq where sq.SUPPLIER_INQUIRY_ID=#{supplierInquiryId} 
  </select>
  
  <select id="getCurrencyId" parameterType="Integer" resultType="Integer">
  		SELECT DISTINCT sq.CURRENCY_ID from supplier_quote sq
			LEFT JOIN supplier_inquiry si on (si.ID = sq.SUPPLIER_INQUIRY_ID)
			where si.id = #{id}
  </select>
  
  <select id="selectBySupplierInquiryId" parameterType="Integer" resultMap="BaseResultMap">
  	select * from supplier_quote sq where sq.SUPPLIER_INQUIRY_ID=#{supplierInquiryId} 
  </select>
  
  <select id="supplierQuoteStat" resultMap="SupplierInquiryStattistic">
  		 SELECT s.id AS supplier_id, s.code AS s, s.name AS supplier_name,  
			   at.id AS air_type_id, at.code AS a, at.value AS air_type_value,  
			   bt.id AS biz_type_id, bt.code AS b, bt.value AS biz_type_value,  
			   COUNT(DISTINCT sq.id) AS supplier_quote_count,  
			   SUM(sqb.supplier_quote_price*sq.exchange_rate/er_usd.rate) AS supplier_quote_sum,
			   (select COUNT(sqe.ID) from supplier_quote sq LEFT JOIN supplier_quote_element sqe on sqe.SUPPLIER_QUOTE_ID=sq.ID
				INNER JOIN supplier_inquiry si ON (
					sq.supplier_inquiry_id = si.id
				)
				INNER JOIN client_inquiry ci ON (si.client_inquiry_id = ci.id)
				INNER JOIN supplier s ON (si.supplier_id = s.id)
				INNER JOIN system_code AT ON (ci.air_type_id = AT .id)
				INNER JOIN system_code bt ON (ci.biz_type_id = bt.id)
				where 1 = 1
				AND  AT.`CODE`=a AND s.`CODE`=s AND bt.`CODE`=b 
				)quote_amount
			   FROM supplier_quote sq  
			   INNER JOIN supplier_inquiry si ON (sq.supplier_inquiry_id=si.id)  
			   INNER JOIN client_inquiry ci ON (si.client_inquiry_id=ci.id)  
			   INNER JOIN supplier s ON (si.supplier_id=s.id)  
			   INNER JOIN system_code at ON (ci.air_type_id=at.id)  
			   INNER JOIN system_code bt ON (ci.biz_type_id=bt.id)  
			   INNER JOIN exchange_rate er_usd ON (er_usd.currency_id=11)  
			   LEFT OUTER JOIN v_supplier_quote_bill sqb ON (sq.id=sqb.supplier_quote_id)  
			    INNER JOIN authority_relation ar on (ar.SUPPLIER_ID=s.ID)
			   WHERE
				1 = 1
				 <if test="userId != null">
				AND ar.USER_ID=${userId}
				</if>
				
					<if test="supplierId!=null">
				AND s.id=${supplierId}					
				</if>
				<if test="airTypeId!=null">
				AND AT.id=${airTypeId}
				</if>
				<if test="bizTypeId!=null">
				AND  BT.id=${bizTypeId}
				</if>
				<if test="startDate!=null">
			AND ci.inquiry_date >=#{startDate}
				</if>
				<if test="endDate!=null">
		<![CDATA[	AND ci.inquiry_date <=#{endDate}]]>
				</if>
				
			GROUP BY
				s.id,
				s. CODE,
				s. NAME,
				AT .id,
				AT . CODE,
				AT .
			VALUE
				,
				bt.id,
				bt. CODE,
				bt.
			VALUE
  </select>
  
   <select id="findSupplierquote" resultMap="BaseResultMap" parameterType="com.naswork.model.SupplierQuote" >
    select 
   sq.id
   from supplier_quote sq 
	where    SUPPLIER_INQUIRY_ID = #{supplierInquiryId} AND 
        QUOTE_DATE = #{quoteDate}
  </select>
  
  <select id="getBySupplierInquiryId" parameterType="com.naswork.model.SupplierQuote" resultMap="BaseResultMap">
  		SELECT
			*
		FROM
			supplier_quote sq
		WHERE
			sq.SUPPLIER_INQUIRY_ID = #{supplierInquiryId}
		AND sq.QUOTE_DATE = #{quoteDate}
		<if test="sourceNumber != null">
		AND sq.SOURCE_NUMBER = #{sourceNumber}
		</if>
		AND sq.CURRENCY_ID = #{currencyId} AND sq.quote_status_id != 91
		ORDER BY
			sq.UPDATE_TIMESTAMP DESC
  </select>
  
  <select id="getByClientInquiryId" parameterType="Integer" resultType="Integer">
  		SELECT distinct
			sq.ID
		FROM
			supplier_quote sq
		LEFT JOIN supplier_inquiry si ON si.ID = sq.SUPPLIER_INQUIRY_ID
		LEFT JOIN client_inquiry ci ON ci.ID = si.CLIENT_INQUIRY_ID
		WHERE ci.ID = #{clientInquiryId};
  </select>
  
  <select id="getByInquiryIdAndCurrencyId" parameterType="Integer" resultMap="BaseResultMap">
  	SELECT * FROM supplier_quote sq WHERE sq.SUPPLIER_INQUIRY_ID = #{0} AND sq.CURRENCY_ID = #{1};
  </select>
  
</mapper>