<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.naswork.dao.ExchangeImportPackageDao" >
  <resultMap id="BaseResultMap" type="com.naswork.model.ExchangeImportPackage" >
    <result column="ID" property="id" jdbcType="INTEGER" />
    <result column="CLIENT_ORDER_ELEMENT_ID" property="clientOrderElementId" jdbcType="INTEGER" />
    <result column="LOCATION" property="location" jdbcType="VARCHAR" />
    <result column="IMPORT_DATE" property="importDate" jdbcType="DATE" />
    <result column="AMOUNT" property="amount" jdbcType="DOUBLE" />
    <result column="CERTIFICATION_ID" property="certificationId" jdbcType="INTEGER" />
    <result column="CONDITION_ID" property="conditionId" jdbcType="INTEGER" />
    <result column="SHIP_NUMBER" property="shipNumber" jdbcType="VARCHAR" />
    <result column="EXPORT_DATE" property="exportDate" jdbcType="DATE" />
    <result column="ORDER_NUMBER" property="orderNumber" jdbcType="VARCHAR" />
    <result column="ORDER_DATE" property="orderDate" jdbcType="DATE" />
    <result column="PART_NUMBER" property="partNumber" jdbcType="VARCHAR" />
    <result column="remain_amount" property="remainAmount" jdbcType="DOUBLE" />
    <result column="client_code" property="clientCode" jdbcType="VARCHAR" />
    <result column="con_id" property="conId" jdbcType="INTEGER" />
    <result column="con_code" property="conCode" jdbcType="VARCHAR" />
    <result column="con_value" property="conValue" jdbcType="VARCHAR" />
    <result column="cer_id" property="cerId" jdbcType="INTEGER" />
    <result column="cer_code" property="cerCode" jdbcType="VARCHAR" />
    <result column="cer_value" property="cerValue" jdbcType="VARCHAR" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
    <result column="UPDATE_TIMESTAMP" property="updateTimestamp" jdbcType="TIMESTAMP" />
    <result column="biz_value" property="bizValue" jdbcType="VARCHAR" />
    <result column="sn" property="sn" jdbcType="VARCHAR" />
    <result column="REPAIR_TYPE" property="repairType" jdbcType="INTEGER" />
    <result column="repair_type_value" property="repairTypeValue" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, CLIENT_ORDER_ELEMENT_ID, LOCATION, IMPORT_DATE, AMOUNT, CERTIFICATION_ID, CONDITION_ID,SHIP_NUMBER,SN,REPAIR_TYPE
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from exchange_import_package
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from exchange_import_package
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.naswork.model.ExchangeImportPackage" >
    insert into exchange_import_package (ID, CLIENT_ORDER_ELEMENT_ID, LOCATION, 
      IMPORT_DATE, AMOUNT, CERTIFICATION_ID, 
      CONDITION_ID, SHIP_NUMBER, EXPORT_DATE
      )
    values (#{id,jdbcType=INTEGER}, #{clientOrderElementId,jdbcType=INTEGER}, #{location,jdbcType=VARCHAR}, 
      #{importDate,jdbcType=DATE}, #{amount,jdbcType=DOUBLE}, #{certificationId,jdbcType=INTEGER}, 
      #{conditionId,jdbcType=INTEGER}, #{shipNumber,jdbcType=VARCHAR}, #{exportDate,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.naswork.model.ExchangeImportPackage" >
    insert into exchange_import_package
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="clientOrderElementId != null" >
        CLIENT_ORDER_ELEMENT_ID,
      </if>
      <if test="location != null" >
        LOCATION,
      </if>
      <if test="importDate != null" >
        IMPORT_DATE,
      </if>
      <if test="amount != null" >
        AMOUNT,
      </if>
      <if test="certificationId != null" >
        CERTIFICATION_ID,
      </if>
      <if test="conditionId != null" >
        CONDITION_ID,
      </if>
      <if test="shipNumber != null" >
        SHIP_NUMBER,
      </if>
      <if test="exportDate != null" >
        EXPORT_DATE,
      </if>
      <if test="description != null" >
        DESCRIPTION,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="sn != null" >
        SN,
      </if>
      <if test="partNumber != null" >
        part_number,
      </if>
      <if test="repairType != null" >
        REPAIR_TYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="clientOrderElementId != null" >
        #{clientOrderElementId,jdbcType=INTEGER},
      </if>
      <if test="location != null" >
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="importDate != null" >
        #{importDate,jdbcType=DATE},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="certificationId != null" >
        #{certificationId,jdbcType=INTEGER},
      </if>
      <if test="conditionId != null" >
        #{conditionId,jdbcType=INTEGER},
      </if>
      <if test="shipNumber != null" >
        #{shipNumber,jdbcType=VARCHAR},
      </if>
      <if test="exportDate != null" >
        #{exportDate,jdbcType=DATE},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sn != null" >
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="partNumber != null" >
        #{partNumber,jdbcType=VARCHAR},
      </if>
      <if test="repairType != null" >
        #{repairType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.naswork.model.ExchangeImportPackage" >
    update exchange_import_package
    <set >
      <if test="clientOrderElementId != null" >
        CLIENT_ORDER_ELEMENT_ID = #{clientOrderElementId,jdbcType=INTEGER},
      </if>
      <if test="location != null" >
        LOCATION = #{location,jdbcType=VARCHAR},
      </if>
      <if test="importDate != null" >
        IMPORT_DATE = #{importDate,jdbcType=DATE},
      </if>
      <if test="amount != null" >
        AMOUNT = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="certificationId != null" >
        CERTIFICATION_ID = #{certificationId,jdbcType=INTEGER},
      </if>
      <if test="conditionId != null" >
        CONDITION_ID = #{conditionId,jdbcType=INTEGER},
      </if>
      <if test="shipNumber != null" >
        SHIP_NUMBER = #{shipNumber,jdbcType=VARCHAR},
      </if>
      <if test="exportDate != null" >
        EXPORT_DATE = #{exportDate,jdbcType=DATE},
      </if>
      <if test="description != null" >
        DESCRIPTION = #{description,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sn != null" >
        SN = #{sn,jdbcType=VARCHAR},
      </if>
      <if test="partNumber != null" >
        part_number = #{partNumber,jdbcType=VARCHAR},
      </if>
      <if test="emailStatus != null" >
        email_status = #{emailStatus,jdbcType=INTEGER},
      </if>
      <if test="repairType != null" >
        REPAIR_TYPE = #{repairType,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.naswork.model.ExchangeImportPackage" >
    update exchange_import_package
    set CLIENT_ORDER_ELEMENT_ID = #{clientOrderElementId,jdbcType=INTEGER},
      LOCATION = #{location,jdbcType=VARCHAR},
      IMPORT_DATE = #{importDate,jdbcType=DATE},
      AMOUNT = #{amount,jdbcType=DOUBLE},
      CERTIFICATION_ID = #{certificationId,jdbcType=INTEGER},
      CONDITION_ID = #{conditionId,jdbcType=INTEGER},
      SHIP_NUMBER = #{shipNumber,jdbcType=VARCHAR},
      EXPORT_DATE = #{exportDate,jdbcType=DATE}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="warnListPage" parameterType="page" resultMap="BaseResultMap">
  		SELECT DISTINCT
			eip.ID,
			co.ORDER_NUMBER,
			co.ORDER_DATE,
			cie.PART_NUMBER,
			cie.description,
			(coe.AMOUNT - IFNULL(eip.AMOUNT,0)) AS amount,
			c.`CODE` AS client_code,
			coe.id as client_order_element_id
		FROM
			client_order_element coe
		LEFT JOIN client_order co ON co.ID = coe.CLIENT_ORDER_ID
		LEFT JOIN client_quote_element cqe ON cqe.ID = coe.CLIENT_QUOTE_ELEMENT_ID
		LEFT JOIN client_inquiry_element cie ON cie.ID = cqe.CLIENT_INQUIRY_ELEMENT_ID
		LEFT JOIN client_inquiry ci ON ci.ID = cie.CLIENT_INQUIRY_ID
		LEFT JOIN system_code biz ON biz.ID = ci.BIZ_TYPE_ID
		LEFT JOIN client c ON c.ID = ci.CLIENT_ID
		LEFT JOIN exchange_import_package eip ON eip.CLIENT_ORDER_ELEMENT_ID = coe.ID
		<if test="userId != null">
			LEFT JOIN authority_relation ar on ar.CLIENT_ID = c.ID
		</if>
		WHERE
		<if test="exchange != null">
			biz.`CODE` = 4
		</if>
		<if test="notexchange != null">
			(biz.`CODE` = 4 or biz.`CODE` = 2)
		</if>
		AND (coe.AMOUNT - eip.AMOUNT) > 0
		AND eip.ID IS NOT NULL
		<if test="userId != null">
			and ar.USER_ID = #{userId}
		</if>
		<if test="where != null">
			and ${where}
		</if>
		UNION
		(SELECT
			eip.ID,
			co.ORDER_NUMBER,
			co.ORDER_DATE,
			cie.PART_NUMBER,
			cie.description,
			(coe.AMOUNT - IFNULL(eip.AMOUNT,0)) AS remain_amount,
			c.`CODE` AS client_code,
			coe.id as client_order_element_id
		FROM
			client_order_element coe
		LEFT JOIN client_order co ON co.ID = coe.CLIENT_ORDER_ID
		LEFT JOIN client_quote_element cqe ON cqe.ID = coe.CLIENT_QUOTE_ELEMENT_ID
		LEFT JOIN client_inquiry_element cie ON cie.ID = cqe.CLIENT_INQUIRY_ELEMENT_ID
		LEFT JOIN client_inquiry ci ON ci.ID = cie.CLIENT_INQUIRY_ID
		LEFT JOIN system_code biz ON biz.ID = ci.BIZ_TYPE_ID
		LEFT JOIN client c ON c.ID = ci.CLIENT_ID
		LEFT JOIN exchange_import_package eip ON eip.CLIENT_ORDER_ELEMENT_ID = coe.ID
		<if test="userId != null">
			LEFT JOIN authority_relation ar on ar.CLIENT_ID = c.ID
		</if>
		WHERE
		<if test="exchange != null">
			biz.`CODE` = 4
		</if>
		<if test="notexchange != null">
			(biz.`CODE` = 4 or biz.`CODE` = 2)
		</if>
		AND eip.ID IS NULL
		<if test="userId != null">
			and ar.USER_ID = #{userId}
		</if>
		<if test="where != null">
			and ${where}
		</if>)
  </select>
  
  <select id="listPage" parameterType="page" resultMap="BaseResultMap">
  		SELECT
			eip.ID,
			co.ORDER_NUMBER,
			eip.PART_NUMBER,
			eip.AMOUNT,
			c.`CODE` AS client_code,
			eip.IMPORT_DATE,
			eip.LOCATION,
			cer.ID AS cer_id,
			cer.`VALUE` AS cer_value,
			cer.`CODE` AS cer_code,
			con.ID AS con_id,
			con.`VALUE` AS con_value,
			con.`CODE` AS con_code,
			eip.UPDATE_TIMESTAMP,
			eip.DESCRIPTION,
			eip.REMARK,
			biz.`VALUE` AS biz_value,
			eip.ship_number,
			eip.SN,
			repairtype.`VALUE` AS repair_type_value
		FROM
			exchange_import_package eip
		LEFT JOIN client_order_element coe ON coe.ID = eip.CLIENT_ORDER_ELEMENT_ID
		LEFT JOIN client_order co ON co.ID = coe.CLIENT_ORDER_ID
		LEFT JOIN client_quote_element cqe ON cqe.ID = coe.CLIENT_QUOTE_ELEMENT_ID
		LEFT JOIN client_inquiry_element cie ON cie.ID = cqe.CLIENT_INQUIRY_ELEMENT_ID
		LEFT JOIN client_inquiry ci ON ci.ID = cie.CLIENT_INQUIRY_ID
		LEFT JOIN system_code biz ON biz.ID = ci.BIZ_TYPE_ID
		LEFT JOIN client c ON c.ID = ci.CLIENT_ID
		LEFT JOIN system_code cer ON cer.ID = eip.CERTIFICATION_ID
		LEFT JOIN system_code con ON con.ID = eip.CONDITION_ID
		LEFT JOIN system_code repairtype ON repairtype.ID = eip.REPAIR_TYPE
		<if test="userId != null">
			LEFT JOIN authority_relation ar on ar.CLIENT_ID = c.ID
		</if>
		<if test="shipNumber != null">
			LEFT JOIN exchange_export_package eep ON eip.id = eep.EXCHANGE_IMPORT_PACKAGE_ID
		</if>
		where 1=1
		<if test="where != null">
			and ${where}
		</if>
		<if test="userId != null">
			and ar.USER_ID = #{userId}
		</if>
		<if test="orderby != null">
			${orderby}
		</if>
  </select>
  
  <select id="getEmailList" parameterType="Integer" resultMap="BaseResultMap">
  		SELECT DISTINCT
			eip.ID,
			co.ORDER_NUMBER,
			eip.part_number,
			eip.AMOUNT,
			c.`CODE` as client_code,
			eip.IMPORT_DATE
		FROM
			exchange_import_package eip
		LEFT JOIN client_order_element coe ON coe.ID = eip.CLIENT_ORDER_ELEMENT_ID
		LEFT JOIN client_order co ON co.ID = coe.CLIENT_ORDER_ID
		LEFT JOIN client_quote cq ON cq.ID = co.CLIENT_QUOTE_ID
		LEFT JOIN client_inquiry ci ON ci.ID = cq.CLIENT_INQUIRY_ID
		LEFT JOIN client c ON c.ID = ci.CLIENT_ID
		LEFT JOIN authority_relation ar ON ar.CLIENT_ID = c.ID
		LEFT JOIN r_role_user rru ON rru.USER_ID = ar.USER_ID
		LEFT JOIN t_role tr ON tr.role_id = rru.ROLE_ID
		WHERE
			eip.email_status = 0 and ar.USER_ID = #{userId}
  </select>
  
  <select id="getEmailUserId" resultType="Integer">
  		SELECT DISTINCT
			ar.USER_ID
		FROM
			exchange_import_package eip
		LEFT JOIN client_order_element coe ON coe.ID = eip.CLIENT_ORDER_ELEMENT_ID
		LEFT JOIN client_order co ON co.ID = coe.CLIENT_ORDER_ID
		LEFT JOIN client_quote cq ON cq.ID = co.CLIENT_QUOTE_ID
		LEFT JOIN client_inquiry ci ON ci.ID = cq.CLIENT_INQUIRY_ID
		LEFT JOIN client c ON c.ID = ci.CLIENT_ID
		LEFT JOIN authority_relation ar ON ar.CLIENT_ID = c.ID
		LEFT JOIN r_role_user rru ON rru.USER_ID = ar.USER_ID
		LEFT JOIN t_role tr ON tr.role_id = rru.ROLE_ID
		WHERE
			eip.email_status = 0 and tr.role_name LIKE '%销售%'
  </select>
  
</mapper>