<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.naswork.dao.CompetitorDao" >
  <resultMap id="BaseResultMap" type="com.naswork.model.Competitor" >
    <result column="ID" property="id" jdbcType="INTEGER" />
    <result column="CODE" property="code" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="CURRENCY_ID" property="currencyId" jdbcType="INTEGER" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="UPDATE_TIMESTAMP" property="updateTimestamp" jdbcType="TIMESTAMP" />
    <result column="currency_value" property="currencyValue" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap type="com.naswork.module.marketing.controller.clientinquiry.CompetitorVo" id="competitorVo">
  	<result column="count" property="count" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="currency_id" property="currencyId" jdbcType="INTEGER" />
    <result column="exchange_rate" property="exchangeRate" jdbcType="DOUBLE" />
    <result column="id" property="id" jdbcType="INTEGER" />
  </resultMap>
  
 <resultMap id="competitorQuoteElement" type="com.naswork.model.CompetitorQuoteElement" >
    <result column="ID" property="id" jdbcType="INTEGER" />
    <result column="COMPETITOR_QUOTE_ID" property="competitorQuoteId" jdbcType="INTEGER" />
    <result column="CLIENT_INQUIRY_ELEMENT_ID" property="clientInquiryElementId" jdbcType="INTEGER" />
    <result column="PRICE" property="price" jdbcType="DOUBLE" />
    <result column="UPDATE_TIMESTAMP" property="updateTimestamp" jdbcType="TIMESTAMP" />
    <result column="CURRENCY_VALUE" property="currencyValue" jdbcType="VARCHAR" />
  </resultMap>
  
   <resultMap id="competitorQuote" type="com.naswork.model.CompetitorQuote" >
    <result column="ID" property="id" jdbcType="INTEGER" />
    <result column="CLIENT_INQUIRY_ID" property="clientInquiryId" jdbcType="INTEGER" />
    <result column="COMPETITOR_ID" property="competitorId" jdbcType="INTEGER" />
    <result column="CURRENCY_ID" property="currencyId" jdbcType="INTEGER" />
    <result column="EXCHANGE_RATE" property="exchangeRate" jdbcType="DOUBLE" />
    <result column="QUOTE_DATE" property="quoteDate" jdbcType="DATE" />
    <result column="FREIGHT" property="freight" jdbcType="DOUBLE" />
    <result column="UPDATE_TIMESTAMP" property="updateTimestamp" jdbcType="TIMESTAMP" />
    <result column="CURRENCY_VALUE" property="currencyValue" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    ID, CODE, NAME, CURRENCY_ID, REMARK, UPDATE_TIMESTAMP
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from competitor
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from competitor
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.naswork.model.Competitor" >
    insert into competitor (ID, CODE, NAME, 
      CURRENCY_ID, REMARK, UPDATE_TIMESTAMP
      )
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{currencyId,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{updateTimestamp,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.naswork.model.Competitor" >
  	<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
		SELECT LAST_INSERT_ID() AS id
	</selectKey>
    insert into competitor
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="code != null" >
        CODE,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="currencyId != null" >
        CURRENCY_ID,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="updateTimestamp != null" >
        UPDATE_TIMESTAMP,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="currencyId != null" >
        #{currencyId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updateTimestamp != null" >
        #{updateTimestamp,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.naswork.model.Competitor" >
    update competitor
    <set >
      <if test="code != null" >
        CODE = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="currencyId != null" >
        CURRENCY_ID = #{currencyId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updateTimestamp != null" >
        UPDATE_TIMESTAMP = #{updateTimestamp,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.naswork.model.Competitor" >
    update competitor
    set CODE = #{code,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      CURRENCY_ID = #{currencyId,jdbcType=INTEGER},
      REMARK = #{remark,jdbcType=VARCHAR},
      UPDATE_TIMESTAMP = #{updateTimestamp,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getElementId" parameterType="Integer" resultType="Integer">
  	select distinct cqe.CLIENT_INQUIRY_ELEMENT_ID from competitor_quote_element cqe 
  	left join competitor_quote cq on cqe.COMPETITOR_QUOTE_ID=cq.ID
	  		where cq.CLIENT_INQUIRY_ID=#{clientInquiryId}
  </select>
  
  <select id="getCode" parameterType="Integer" resultMap="competitorVo">
  		select distinct c.code,c.ID from competitor_quote cq
			LEFT JOIN competitor c on c.ID = cq.COMPETITOR_ID
	  		where cq.CLIENT_INQUIRY_ID=#{clientInquiryId} ORDER BY c.CODE
  </select> 
  
  <select id="getPrice" parameterType="com.naswork.model.ClientInquiryElement" resultMap="competitorQuoteElement">
  		SELECT
			cqe.PRICE,
			cq.COMPETITOR_ID AS id,
			sc.`VALUE` AS CURRENCY_VALUE
		FROM
			client_inquiry_element cie
		LEFT JOIN competitor_quote_element cqe ON cie.id = cqe.CLIENT_INQUIRY_ELEMENT_ID
		LEFT JOIN competitor_quote cq ON cq.ID = cqe.COMPETITOR_QUOTE_ID
		LEFT JOIN competitor c ON c.ID = cq.COMPETITOR_ID
		LEFT JOIN system_code sc ON sc.ID = c.CURRENCY_ID
			where cie.CLIENT_INQUIRY_ID=#{clientInquiryId} and cie.id=#{id} ORDER BY c.CODE
  </select>
  
  <select id="findByCode" parameterType="String" resultMap="competitorVo">
  		select c.CURRENCY_ID,c.ID,er.RATE as exchange_rate from competitor c LEFT JOIN exchange_rate er 
			on c.CURRENCY_ID=er.CURRENCY_ID where c.code=#{code}
  </select>
  
  <select id="getfreight" parameterType="Integer" resultMap="competitorQuote">
  		SELECT DISTINCT
			cq.FREIGHT,
			cq.COMPETITOR_ID AS id,
			sc.`VALUE` AS CURRENCY_VALUE
		FROM
			competitor_quote cq
		LEFT JOIN competitor c ON c.ID = cq.COMPETITOR_ID
		LEFT JOIN system_code sc ON sc.ID = c.CURRENCY_ID
  		where cq.CLIENT_INQUIRY_ID=#{clientInquiryId} ORDER BY c.`CODE`
  </select>
  
  <select id="competitorPage" parameterType="page" resultMap="BaseResultMap">
  		select c.*,sc.`VALUE` as currency_value from competitor c 
			LEFT JOIN system_code sc 
			on (c.CURRENCY_ID = sc.ID)
			<where>
				${where}
			</where>
			<if test="orderby != null">
				${orderby}
			</if>
  </select>
  
  <select id="selectByCode" parameterType="String" resultMap="BaseResultMap">
  		select * from competitor c where c.code = #{code}
  </select>
  
  <select id="getMaxId" resultType="Integer">
  		select max(id) from competitor
  </select>
</mapper>