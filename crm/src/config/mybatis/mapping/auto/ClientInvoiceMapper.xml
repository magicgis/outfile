<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.naswork.dao.ClientInvoiceDao" >
  <resultMap id="BaseResultMap" type="com.naswork.model.ClientInvoice" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="INVOICE_NUMBER" property="invoiceNumber" jdbcType="VARCHAR" />
    <result column="CLIENT_ORDER_ID" property="clientOrderId" jdbcType="INTEGER" />
    <result column="INVOICE_DATE" property="invoiceDate" jdbcType="DATE" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="UPDATE_TIMESTAMP" property="updateTimestamp" jdbcType="TIMESTAMP" />
    <result column="TERMS" property="terms" jdbcType="INTEGER" />
    <result column="INVOICE_TYPE" property="invoiceType" jdbcType="INTEGER" />
  </resultMap>
  

  <resultMap type="com.naswork.module.finance.controller.clientinvoice.ClientInvoiceExcelVo" id="clientInvoiceExcelVo">
  	<result column="id" property="id" jdbcType="INTEGER" />
    <result column="contact_ship_address" property="contactShipAddress" jdbcType="VARCHAR" />
    <result column="contact_address" property="contactAddress" jdbcType="VARCHAR" />
    <result column="invoice_date" property="invoiceDate" jdbcType="DATE" />
    <result column="source_order_number" property="sourceOrderNumber" jdbcType="VARCHAR" />
    <result column="invoice_number" property="invoiceNumber" jdbcType="VARCHAR" />
    <result column="terms" property="terms" jdbcType="INTEGER" />
    <result column="terms_1" property="terms_1" jdbcType="INTEGER" />
    <result column="quote_part_number" property="quotePartNumber" jdbcType="VARCHAR" />
    <result column="quote_description" property="quoteDescription" jdbcType="VARCHAR" />
    <result column="quote_unit" property="quoteUnit" jdbcType="VARCHAR" />
    <result column="invoice_amount" property="invoiceAmount" jdbcType="DOUBLE" />
    <result column="client_order_price" property="clientOrderPrice" jdbcType="DOUBLE" />
    <result column="INVOICE_TEMPLET" property="invoiceTemplet" jdbcType="VARCHAR" />
    <result column="contact_name" property="contactName" jdbcType="VARCHAR" />
    <result column="ship_way" property="shipWay" jdbcType="VARCHAR" />
    <result column="INVOICE_TEMPLET_VALUE" property="invoiceTempletValue" jdbcType="VARCHAR" />
    <result column="invoice_terms" property="invoiceTerms" jdbcType="VARCHAR" />
    <result column="PREPAY_RATE" property="prepayRate" jdbcType="DOUBLE" />
    <result column="SHIP_PAY_RATE" property="shipPayRate" jdbcType="DOUBLE" />
    <result column="RECEIVE_PAY_RATE" property="receivePayRate" jdbcType="DOUBLE" />
    <result column="client_quote_id" property="clientQuoteId" jdbcType="INTEGER" />
    <result column="client_order_id" property="clientOrderId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="ORDER_DATE" property="orderDate" jdbcType="DATE" />
    <result column="LC" property="lc" jdbcType="VARCHAR" />
    <result column="IMPORTERS_REGISTRATION" property="importersRegistration" jdbcType="VARCHAR" />
    <result column="ship_address" property="shipAddress" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="currency_value" property="currencyValue" jdbcType="VARCHAR" />
    <result column="client_code" property="clientCode" jdbcType="VARCHAR" />
  </resultMap>
  

   <resultMap id="ListDataMap" type="com.naswork.module.finance.controller.clientinvoice.ListDataVo" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <id column="INVOICE_STATUS_ID" property="invoiceStatusId" jdbcType="INTEGER" />
    <result column="invoice_type" property="invoiceType" jdbcType="INTEGER" />
    <result column="INVOICE_NUMBER" property="invoiceNumber" jdbcType="VARCHAR" />
    <result column="CLIENT_ORDER_ID" property="clientOrderId" jdbcType="INTEGER" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="UPDATE_TIMESTAMP" property="updateTimestamp" jdbcType="TIMESTAMP" />
    <result column="INVOICE_TERMS" property="invoiceTerms" jdbcType="INTEGER" />
    <result column="INVOICE_DATE" property="invoiceDate" jdbcType="DATE" />
    <result column="ORDER_DATE" property="orderDate" jdbcType="DATE" />
    <result column="SOURCE_ORDER_NUMBER" property="sourceOrderNumber" jdbcType="VARCHAR" />
    <result column="ORDER_NUMBER" property="orderNumber" jdbcType="VARCHAR" />
    <result column="TERMS" property="terms" jdbcType="INTEGER" />
    <result column="INVOICE_TERMS" property="invoiceTerms" jdbcType="INTEGER" />
    <result column="CLIENT_ID" property="clientId" jdbcType="INTEGER" />
    <result column="CLIENT_CODE" property="clientCode" jdbcType="VARCHAR" />
    <result column="CLIENT_NAME" property="clientName" jdbcType="VARCHAR" />
    <result column="ADDRESS" property="address" jdbcType="VARCHAR" />
    <result column="SHIP_ADDRESS" property="shipAddress" jdbcType="VARCHAR" />
    <result column="CONTACT_ADDRESS" property="contactAddress" jdbcType="VARCHAR" />
    <result column="CONTACT_SHIP_ADDRESS" property="contactShipAddress" jdbcType="VARCHAR" />
    <result column="CURRENCY_ID" property="currencyId" jdbcType="INTEGER" />
    <result column="CURRENCY_CODE" property="currencyCode" jdbcType="VARCHAR" />
    <result column="CURRENCY_VALUE" property="currencyValue" jdbcType="VARCHAR" />
    <result column="CLIENT_INVOICE_PRICE" property="clientInvoicePrice" jdbcType="DOUBLE" />
    <result column="total_price" property="totalPrice" jdbcType="DOUBLE" />
    <result column="CLIENT_ORDER_PRICE" property="clientOrderPrice" jdbcType="DOUBLE" />
    <result column="EXPORT_NUMBER" property="exportNumber" jdbcType="VARCHAR" />
    <result column="EXPORT_PACKAGE_INSTRUCTIONS_NUMBER" property="exportPackageInstructionsNumber" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    ID, INVOICE_NUMBER, CLIENT_ORDER_ID, INVOICE_DATE, REMARK, UPDATE_TIMESTAMP, TERMS,INVOICE_TYPE
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from client_invoice
    where ID = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectByCode" resultMap="BaseResultMap" parameterType="String" >
    select 
    <include refid="Base_Column_List" />
    from client_invoice
    where INVOICE_NUMBER = #{invoiceNumber,jdbcType=VARCHAR}
  </select>
  
  <select id="selectByclientOrderId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from client_invoice
    where CLIENT_ORDER_ID = #{0} AND INVOICE_TYPE=#{1}
  </select>
  
  <select id="selectByclientOrderIdAndShipId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from client_invoice
    where CLIENT_ORDER_ID = #{0} AND INVOICE_TYPE=#{1} and CLIENT_SHIP_ID = #{2}
  </select>
  
     <select id="selectByclientOrderElementId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
		  SELECT
			*
		FROM
			client_invoice ci
		INNER JOIN client_invoice_element cie ON (
			ci.ID = cie.CLIENT_INVOICE_ID
		)
		WHERE
			cie.CLIENT_ORDER_ELEMENT_ID = #{clientOrderElementId}
		AND ci.INVOICE_TYPE = 1
		</select>
  
  <select id="listDataPage" parameterType="page" resultMap="ListDataMap">
   SELECT IFNULL(sum(ib.TOTAL),0) total_price,inv.id, inv.invoice_number, inv.invoice_date, inv.terms AS invoice_terms,  
			   co.id AS client_order_id,inv.invoice_type,inv.INVOICE_STATUS_ID,
			   c.id AS client_id, c.code AS client_code, c.name AS client_name,  
			   c.address, c.ship_address,  
			   cc.address AS contact_address, cc.ship_address AS contact_ship_address,  
			   cu.id AS currency_id, cu.code AS currency_code, cu.value AS currency_value,  
			   co.order_date, co.source_number AS source_order_number, co.order_number,  
			   IFNULL( cib.client_invoice_price,0) client_invoice_price, cob.client_order_price,  
			   IF(cib.client_invoice_price IS NULL,  
			   0, cib.client_invoice_price) AS invoice_sum,  
			   co.terms, 100-co.terms AS terms_1, inv.remark, inv.update_timestamp  
			   FROM client_invoice inv  
			   INNER JOIN client_order co ON (inv.client_order_id=co.id)  
			   INNER JOIN client_quote cq ON (co.client_quote_id=cq.id)  
			   INNER JOIN client_inquiry ci ON (cq.client_inquiry_id=ci.id)  
			   INNER JOIN client c ON (ci.client_id=c.id)  
			   INNER JOIN client_contact cc ON (ci.client_contact_id=cc.id)  
			   INNER JOIN system_code cu ON (co.currency_id=cu.id)  
			   LEFT OUTER JOIN v_client_invoice_bill cib ON (cib.client_invoice_id=inv.id)  
			   LEFT JOIN v_client_order_bill cob ON (co.id=cob.client_order_id)  
			     LEFT JOIN v_income_bill ib on (ib.CLIENT_INVOICE_ID=inv.ID)
			   	<if test="userId != null">
				INNER JOIN authority_relation ar on (ar.CLIENT_ID=c.ID)
				</if>
				<where>
				${where}
				</where>
				
				<if test="clientInvoiceId != null">
				and inv.id in (${clientInvoiceId})
				</if>
				
				 GROUP BY inv.ID
			   <if test="orderby!=null">
			   ${orderby}
			   </if>
  </select>
  
  <select id="findById" parameterType="String" resultMap="ListDataMap">
   SELECT inv.id, inv.invoice_number, inv.invoice_date, inv.terms AS invoice_terms,  
			   co.id AS client_order_id,
			   c.id AS client_id, c.code AS client_code, c.name AS client_name,  
			   c.address, c.ship_address,  
			   cc.address AS contact_address, cc.ship_address AS contact_ship_address,  
			   cu.id AS currency_id, cu.code AS currency_code, cu.value AS currency_value,  
			   co.order_date, co.source_number AS source_order_number, co.order_number,  
			   cib.client_invoice_price, cob.client_order_price,  
			   IF(cib.client_invoice_price IS NULL,  
			   0, cib.client_invoice_price) AS invoice_sum,  
			   co.terms, 100-co.terms AS terms_1, inv.remark, inv.update_timestamp  
			   FROM client_invoice inv  
			   INNER JOIN client_order co ON (inv.client_order_id=co.id)  
			   INNER JOIN client_quote cq ON (co.client_quote_id=cq.id)  
			   INNER JOIN client_inquiry ci ON (cq.client_inquiry_id=ci.id)  
			   INNER JOIN client c ON (ci.client_id=c.id)  
			   INNER JOIN client_contact cc ON (ci.client_contact_id=cc.id)  
			   INNER JOIN system_code cu ON (co.currency_id=cu.id)  
			   LEFT OUTER JOIN v_client_invoice_bill cib ON (cib.client_invoice_id=inv.id)  
			   LEFT JOIN v_client_order_bill cob ON (co.id=cob.client_order_id)  
			   WHERE inv.id=#{id} 
			   </select>
  
  <select id="findByOrderNumberPage" parameterType="page" resultMap="ListDataMap">
   SELECT IFNULL(sum(ib.TOTAL),0) total_price,inv.id, inv.invoice_number, inv.invoice_date, inv.terms AS invoice_terms,  
			   co.id AS client_order_id,inv.invoice_type,inv.INVOICE_STATUS_ID,
			   c.id AS client_id, c.code AS client_code, c.name AS client_name,  
			   c.address, c.ship_address,  
			   cc.address AS contact_address, cc.ship_address AS contact_ship_address,  
			   cu.id AS currency_id, cu.code AS currency_code, cu.value AS currency_value,  
			   co.order_date, co.source_number AS source_order_number, co.order_number,  
			  IFNULL( cib.client_invoice_price,0) client_invoice_price, cob.client_order_price,  
			   IF(cib.client_invoice_price IS NULL,  
			   0, cib.client_invoice_price) AS invoice_sum,  
			   co.terms, 100-co.terms AS terms_1, inv.remark, inv.update_timestamp  
			   FROM client_invoice inv  
			   INNER JOIN client_order co ON (inv.client_order_id=co.id)  
			   INNER JOIN client_quote cq ON (co.client_quote_id=cq.id)  
			   INNER JOIN client_inquiry ci ON (cq.client_inquiry_id=ci.id)  
			   INNER JOIN client c ON (ci.client_id=c.id)  
			   INNER JOIN client_contact cc ON (ci.client_contact_id=cc.id)  
			   INNER JOIN system_code cu ON (co.currency_id=cu.id)  
			   LEFT OUTER JOIN v_client_invoice_bill cib ON (cib.client_invoice_id=inv.id)  
			   LEFT JOIN v_client_order_bill cob ON (co.id=cob.client_order_id)  
			   LEFT JOIN v_income_bill ib on (ib.CLIENT_INVOICE_ID=inv.ID)
			   WHERE co.ORDER_NUMBER=#{orderNumber}
			   GROUP BY inv.ID
			   ORDER BY inv.invoice_date DESC
			   </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from client_invoice
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.naswork.model.ClientInvoice" >
   <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
		SELECT LAST_INSERT_ID() AS id
		</selectKey>
    insert into client_invoice (ID, INVOICE_NUMBER, CLIENT_ORDER_ID, 
      INVOICE_DATE, REMARK, UPDATE_TIMESTAMP, 
      TERMS,INVOICE_TYPE,CLIENT_SHIP_ID)
    values (#{id,jdbcType=INTEGER}, #{invoiceNumber,jdbcType=VARCHAR}, #{clientOrderId,jdbcType=INTEGER}, 
      #{invoiceDate,jdbcType=DATE}, #{remark,jdbcType=VARCHAR}, CURRENT_TIMESTAMP, 
      #{terms,jdbcType=INTEGER},#{invoiceType,jdbcType=INTEGER},#{clientShipId,jdbcType=INTEGER})
  </insert>
  
  <insert id="autoinsert" parameterType="com.naswork.model.ClientInvoice" >
   <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
		SELECT LAST_INSERT_ID() AS id
	</selectKey>
    insert into client_invoice (ID, INVOICE_NUMBER, CLIENT_ORDER_ID, 
      INVOICE_DATE, REMARK, UPDATE_TIMESTAMP, 
      TERMS,INVOICE_TYPE)
    values (#{id,jdbcType=INTEGER}, #{invoiceNumber,jdbcType=VARCHAR}, #{clientOrderId,jdbcType=INTEGER}, 
      #{invoiceDate,jdbcType=DATE}, #{remark,jdbcType=VARCHAR}, CURRENT_TIMESTAMP, 
      #{terms,jdbcType=INTEGER},#{invoiceType,jdbcType=INTEGER})
  </insert>
  
  <insert id="insertSelective" parameterType="com.naswork.model.ClientInvoice" >
  	<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
		SELECT LAST_INSERT_ID() AS id
	</selectKey>
    insert into client_invoice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="invoiceNumber != null" >
        INVOICE_NUMBER,
      </if>
      <if test="clientOrderId != null" >
        CLIENT_ORDER_ID,
      </if>
      <if test="invoiceDate != null" >
        INVOICE_DATE,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="updateTimestamp != null" >
        UPDATE_TIMESTAMP,
      </if>
      <if test="terms != null" >
        TERMS,
      </if>
      <if test="invoiceType != null" >
        INVOICE_TYPE,
      </if>
      <if test="clientShipId != null" >
        CLIENT_SHIP_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="invoiceNumber != null" >
        #{invoiceNumber,jdbcType=VARCHAR},
      </if>
      <if test="clientOrderId != null" >
        #{clientOrderId,jdbcType=INTEGER},
      </if>
      <if test="invoiceDate != null" >
        #{invoiceDate,jdbcType=DATE},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updateTimestamp != null" >
        #{updateTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="terms != null" >
        #{terms,jdbcType=INTEGER},
      </if>
      <if test="invoiceType != null" >
        #{invoiceType,jdbcType=INTEGER},
      </if>
      <if test="clientShipId != null" >
        #{clientShipId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.naswork.model.ClientInvoice" >
    update client_invoice
    <set >
      <if test="invoiceNumber != null" >
        INVOICE_NUMBER = #{invoiceNumber,jdbcType=VARCHAR},
      </if>
      <if test="clientOrderId != null" >
        CLIENT_ORDER_ID = #{clientOrderId,jdbcType=INTEGER},
      </if>
      <if test="invoiceDate != null" >
        INVOICE_DATE = #{invoiceDate,jdbcType=DATE},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updateTimestamp != null" >
        UPDATE_TIMESTAMP = CURRENT_TIMESTAMP,
      </if>
      <if test="terms != null" >
        TERMS = #{terms,jdbcType=INTEGER},
      </if>
        <if test="invoiceStatusId != null" >
        INVOICE_STATUS_ID = #{invoiceStatusId,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.naswork.model.ClientInvoice" >
    update client_invoice
    set INVOICE_NUMBER = #{invoiceNumber,jdbcType=VARCHAR},
      CLIENT_ORDER_ID = #{clientOrderId,jdbcType=INTEGER},
      INVOICE_DATE = #{invoiceDate,jdbcType=DATE},
      REMARK = #{remark,jdbcType=VARCHAR},
      UPDATE_TIMESTAMP = CURRENT_TIMESTAMP,
      TERMS = #{terms,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getMessage" parameterType="Integer" resultMap="clientInvoiceExcelVo">
	SELECT
		inv.id,
		inv.invoice_number,
		inv.invoice_date,
		inv.terms AS invoice_terms,
		co.id AS client_order_id,
		co.order_date,
		co.source_number AS source_order_number,
		co.order_number,
		c.id AS client_id,
		c. CODE AS client_code,
		c. NAME AS client_name ,
		c.address,
		c.ship_address,
		cc.address AS contact_address,
		cc.ship_address AS contact_ship_address,
		cc.name AS contact_name,
		sw.VALUE AS ship_way,
		cu.id AS currency_id,
		cu. CODE AS currency_code,
		cu.
	VALUE
		AS currency_value,
		co.order_date,
		co.source_number AS source_order_number,
		co.order_number,
		cib.client_invoice_price,
		cob.client_order_price,
	
	IF (
		cib.client_invoice_price IS NULL,
		0,
		cib.client_invoice_price
	) AS invoice_sum,
	 co.terms,
	 100 - co.terms AS terms_1,
	 inv.remark,
	 inv.update_timestamp,
	 temp.`VALUE` AS INVOICE_TEMPLET_VALUE,
	 co.PREPAY_RATE,
	 co.SHIP_PAY_RATE,
	 co.RECEIVE_PAY_RATE,
	 cq.id AS client_quote_id,
	 tu.user_name,
	 co.ORDER_DATE,
	 co.LC,
	 co.IMPORTERS_REGISTRATION,
	 currency.`CODE` AS currency_value
	FROM
		client_invoice inv
	INNER JOIN client_order co ON (inv.client_order_id = co.id)
	LEFT JOIN t_user tu ON (tu.user_id = co.CREATE_USER_ID)
	INNER JOIN client_quote cq ON (co.client_quote_id = cq.id)
	INNER JOIN client_inquiry ci ON (cq.client_inquiry_id = ci.id)
	INNER JOIN client c ON (ci.client_id = c.id)
	LEFT JOIN system_code sw ON (
		sw.ID = c.CLIENT_SHIP_WAY
	)
	LEFT JOIN system_code temp ON (
		temp.ID = c.INVOICE_TEMPLET
	)
	INNER JOIN client_contact cc ON (ci.client_contact_id = cc.id)
	INNER JOIN system_code cu ON (co.currency_id = cu.id)
	LEFT OUTER JOIN v_client_invoice_bill cib ON (
		cib.client_invoice_id = inv.id
	)
	INNER JOIN v_client_order_bill cob ON (co.id = cob.client_order_id)
	INNER JOIN system_code currency ON (currency.ID = co.CURRENCY_ID)
	WHERE
		inv.id =#{invocieId}
  </select>
  
  <select id="getInvoiceCount" resultType="Integer" parameterType="Integer">
		SELECT COUNT(*) FROM client_invoice ci where ci.CLIENT_ORDER_ID = #{clientOrderId}  
  </select>  
  
  <select id="getFinishedTerm" parameterType="Integer" resultType="Double">
  		SELECT SUM(ci.TERMS) FROM client_invoice ci WHERE ci.CLIENT_ORDER_ID = #{clientOrderId} and ci.INVOICE_TYPE != 0
				GROUP BY ci.CLIENT_ORDER_ID  
  </select>
  
  <select id="findExportNumber" parameterType="Integer" resultMap="ListDataMap">
		  select ep.EXPORT_NUMBER,epi.EXPORT_PACKAGE_INSTRUCTIONS_NUMBER from client_invoice ci INNER JOIN client_invoice_element cie on cie.CLIENT_INVOICE_ID=ci.ID
		INNER JOIN supplier_order_element soe on soe.CLIENT_ORDER_ELEMENT_ID=cie.CLIENT_ORDER_ELEMENT_ID
		INNER JOIN supplier_import_element sie on sie.SUPPLIER_ORDER_ELEMENT_ID=soe.ID
		INNER JOIN export_package_element epe on epe.IMPORT_PACKAGE_ELEMENT_ID=sie.IMPORT_PACKAGE_ELEMENT_ID
		INNER JOIN export_package ep on ep.ID=epe.EXPORT_PACKAGE_ID
		LEFT JOIN export_package_instructions epi on epi.id=ep.EXPORT_PACKAGE_INSTRUCTIONS_ID
		where ci.ID=#{clientInvoiceId}
		</select>
		
		  <select id="findByexportMunber" resultMap="BaseResultMap" parameterType="com.naswork.module.finance.controller.clientinvoice.ListDataVo" >
		SELECT
			ep.EXPORT_NUMBER,
			epi.EXPORT_PACKAGE_INSTRUCTIONS_NUMBER,ci.INVOICE_NUMBER,ci.id
		FROM
			client_invoice ci
		INNER JOIN client_invoice_element cie ON cie.CLIENT_INVOICE_ID = ci.ID
		INNER JOIN supplier_order_element soe ON soe.CLIENT_ORDER_ELEMENT_ID = cie.CLIENT_ORDER_ELEMENT_ID
		INNER JOIN supplier_import_element sie ON sie.SUPPLIER_ORDER_ELEMENT_ID = soe.ID
		INNER JOIN export_package_element epe ON epe.IMPORT_PACKAGE_ELEMENT_ID = sie.IMPORT_PACKAGE_ELEMENT_ID
		INNER JOIN export_package ep ON ep.ID = epe.EXPORT_PACKAGE_ID
		LEFT JOIN export_package_instructions epi ON epi.id = ep.EXPORT_PACKAGE_INSTRUCTIONS_ID
		WHERE
			ci.ID in(
		SELECT
			inv.ID
		FROM
			client_invoice inv
		INNER JOIN client_order co ON (inv.client_order_id = co.id)
		INNER JOIN client_quote cq ON (co.client_quote_id = cq.id)
		INNER JOIN client_inquiry ci ON (cq.client_inquiry_id = ci.id)
		INNER JOIN client c ON (ci.client_id = c.id)
		INNER JOIN client_contact cc ON (ci.client_contact_id = cc.id)
		INNER JOIN system_code cu ON (co.currency_id = cu.id)
		LEFT OUTER JOIN v_client_invoice_bill cib ON (
			cib.client_invoice_id = inv.id
		)
		LEFT JOIN v_client_order_bill cob ON (co.id = cob.client_order_id)
		LEFT JOIN v_income_bill ib ON (
			ib.CLIENT_INVOICE_ID = inv.ID
		)
		WHERE
			inv.invoice_type != 0
		GROUP BY
			inv.ID
		ORDER BY
			INV.UPDATE_TIMESTAMP DESC
		)
			<if test="exportNumber !=null">
			and  ep.EXPORT_NUMBER=${exportNumber}
			</if>
			<if test="exportPackageInstructionsNumber !=null">
			and epi.EXPORT_PACKAGE_INSTRUCTIONS_NUMBER=${exportPackageInstructionsNumber}
			</if>
			</select>
			
	<select id="getInvoiceIdByCoId" parameterType="Integer" resultType="Integer">
			SELECT
				ci.ID
			FROM
				client_invoice ci
			WHERE
				ci.UPDATE_TIMESTAMP = (
					SELECT
						MAX(ci.UPDATE_TIMESTAMP)
					FROM
						client_invoice ci
					WHERE
						ci.CLIENT_ORDER_ID = #{clientOrderId} and ci.INVOICE_TYPE != 0
				)
			AND ci.CLIENT_ORDER_ID =#{clientOrderId} and ci.INVOICE_TYPE != 0 ORDER BY ci.INVOICE_TYPE DESC LIMIT 0,1
	</select>

</mapper>