<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.naswork.dao.SatairQuoteElementDao" >
  <resultMap id="BaseResultMap" type="com.naswork.model.SatairQuoteElement" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="PART_NUMBER" property="partNumber" jdbcType="VARCHAR" />
    <result column="CAGE_CODE" property="cageCode" jdbcType="VARCHAR" />
    <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
    <result column="UNIT" property="unit" jdbcType="VARCHAR" />
    <result column="UNIT_PRICE" property="unitPrice" jdbcType="VARCHAR" />
    <result column="CURRENCY" property="currency" jdbcType="VARCHAR" />
    <result column="CERTIFICATION" property="certification" jdbcType="VARCHAR" />
    <result column="lead_time" property="leadTime" jdbcType="VARCHAR" />
    <result column="plant" property="plant" jdbcType="VARCHAR" />
    <result column="ENTER_PARTNUMBER" property="enterPartnumber" jdbcType="VARCHAR" />
    <result column="AMOUNT" property="amount" jdbcType="DOUBLE" />
    <result column="SATAIR_QUOTE_ID" property="satairQuoteId" jdbcType="INTEGER" />
    <result column="QUOTE_NUMBER" property="quoteNumber" jdbcType="VARCHAR" />
    <result column="if_danger" property="ifDanger" jdbcType="VARCHAR" />
    <result column="supplier_code" property="supplierCode" jdbcType="VARCHAR" />
    <result column="moq" property="moq" jdbcType="VARCHAR" /> 
    <result column="UPDATE_DATETIME" property="updateDatetime" jdbcType="TIMESTAMP" />
    <result column="STORAGE_AMOUNT" property="storageAmount" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, PART_NUMBER, CAGE_CODE, DESCRIPTION, UNIT, UNIT_PRICE, CURRENCY, CERTIFICATION, 
    lead_time, plant, ENTER_PARTNUMBER, AMOUNT, SATAIR_QUOTE_ID,STORAGE_AMOUNT
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from satair_quote_element
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from satair_quote_element
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.naswork.model.SatairQuoteElement" >
    insert into satair_quote_element (ID, PART_NUMBER, CAGE_CODE, 
      DESCRIPTION, UNIT, UNIT_PRICE, 
      CURRENCY, CERTIFICATION, lead_time, 
      plant, ENTER_PARTNUMBER, AMOUNT, 
      SATAIR_QUOTE_ID)
    values (#{id,jdbcType=INTEGER}, #{partNumber,jdbcType=VARCHAR}, #{cageCode,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, #{unitPrice,jdbcType=VARCHAR}, 
      #{currency,jdbcType=VARCHAR}, #{certification,jdbcType=VARCHAR}, #{leadTime,jdbcType=VARCHAR}, 
      #{plant,jdbcType=VARCHAR}, #{enterPartnumber,jdbcType=VARCHAR}, #{amount,jdbcType=DOUBLE}, 
      #{satairQuoteId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.naswork.model.SatairQuoteElement" >
    insert into satair_quote_element
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="partNumber != null" >
        PART_NUMBER,
      </if>
      <if test="cageCode != null" >
        CAGE_CODE,
      </if>
      <if test="description != null" >
        DESCRIPTION,
      </if>
      <if test="unit != null" >
        UNIT,
      </if>
      <if test="unitPrice != null" >
        UNIT_PRICE,
      </if>
      <if test="currency != null" >
        CURRENCY,
      </if>
      <if test="certification != null" >
        CERTIFICATION,
      </if>
      <if test="leadTime != null" >
        lead_time,
      </if>
      <if test="plant != null" >
        plant,
      </if>
      <if test="enterPartnumber != null" >
        ENTER_PARTNUMBER,
      </if>
      <if test="amount != null" >
        AMOUNT,
      </if>
      <if test="satairQuoteId != null" >
        SATAIR_QUOTE_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="partNumber != null" >
        #{partNumber,jdbcType=VARCHAR},
      </if>
      <if test="cageCode != null" >
        #{cageCode,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="unitPrice != null" >
        #{unitPrice,jdbcType=VARCHAR},
      </if>
      <if test="currency != null" >
        #{currency,jdbcType=VARCHAR},
      </if>
      <if test="certification != null" >
        #{certification,jdbcType=VARCHAR},
      </if>
      <if test="leadTime != null" >
        #{leadTime,jdbcType=VARCHAR},
      </if>
      <if test="plant != null" >
        #{plant,jdbcType=VARCHAR},
      </if>
      <if test="enterPartnumber != null" >
        #{enterPartnumber,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="satairQuoteId != null" >
        #{satairQuoteId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.naswork.model.SatairQuoteElement" >
    update satair_quote_element
    <set >
      <if test="partNumber != null" >
        PART_NUMBER = #{partNumber,jdbcType=VARCHAR},
      </if>
      <if test="cageCode != null" >
        CAGE_CODE = #{cageCode,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        DESCRIPTION = #{description,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        UNIT = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="unitPrice != null" >
        UNIT_PRICE = #{unitPrice,jdbcType=VARCHAR},
      </if>
      <if test="currency != null" >
        CURRENCY = #{currency,jdbcType=VARCHAR},
      </if>
      <if test="certification != null" >
        CERTIFICATION = #{certification,jdbcType=VARCHAR},
      </if>
      <if test="leadTime != null" >
        lead_time = #{leadTime,jdbcType=VARCHAR},
      </if>
      <if test="plant != null" >
        plant = #{plant,jdbcType=VARCHAR},
      </if>
      <if test="enterPartnumber != null" >
        ENTER_PARTNUMBER = #{enterPartnumber,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        AMOUNT = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="satairQuoteId != null" >
        SATAIR_QUOTE_ID = #{satairQuoteId,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.naswork.model.SatairQuoteElement" >
    update satair_quote_element
    set PART_NUMBER = #{partNumber,jdbcType=VARCHAR},
      CAGE_CODE = #{cageCode,jdbcType=VARCHAR},
      DESCRIPTION = #{description,jdbcType=VARCHAR},
      UNIT = #{unit,jdbcType=VARCHAR},
      UNIT_PRICE = #{unitPrice,jdbcType=VARCHAR},
      CURRENCY = #{currency,jdbcType=VARCHAR},
      CERTIFICATION = #{certification,jdbcType=VARCHAR},
      lead_time = #{leadTime,jdbcType=VARCHAR},
      plant = #{plant,jdbcType=VARCHAR},
      ENTER_PARTNUMBER = #{enterPartnumber,jdbcType=VARCHAR},
      AMOUNT = #{amount,jdbcType=DOUBLE},
      SATAIR_QUOTE_ID = #{satairQuoteId,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selecyBySatairQuoteId" parameterType="String" resultMap="BaseResultMap">
  		SELECT DISTINCT
			sqe.PART_NUMBER,
			sqe.CAGE_CODE,
			sqe.DESCRIPTION,
			sqe.UNIT,
			sqe.UNIT_PRICE,
			sqe.CURRENCY,
			sqe.CERTIFICATION,
			sqe.lead_time,
			sqe.plant,
			sqe.ENTER_PARTNUMBER,
			sqe.AMOUNT,
			sqe.SATAIR_QUOTE_ID,
			sqe.if_danger,
			sqe.STORAGE_AMOUNT
		FROM
			satair_quote_element sqe
		WHERE
			sqe.SATAIR_QUOTE_ID = #{0}
			AND (sqe.PART_NUMBER = #{1}
			OR sqe.ENTER_PARTNUMBER LIKE #{2})
			AND sqe.CAGE_CODE IS NOT NULL
		GROUP BY sqe.PART_NUMBER
  </select>
  
  <select id="selecyByNewSatairQuoteId" parameterType="String" resultMap="BaseResultMap">
  		SELECT 
  			sqe.id,
			sqe.PART_NUMBER,
			sqe.CAGE_CODE,
			sqe.DESCRIPTION,
			sqe.UNIT,
			sqe.UNIT_PRICE,
			sqe.CURRENCY,
			sqe.CERTIFICATION,
			sqe.lead_time,
			sqe.plant,
			sqe.ENTER_PARTNUMBER,
			sqe.AMOUNT,
			sqe.SATAIR_QUOTE_ID,
			sqe.if_danger,
			sqe.STORAGE_AMOUNT
		FROM
			satair_quote_element sqe
		WHERE
			sqe.SATAIR_QUOTE_ID = #{0}
			AND (sqe.PART_NUMBER = #{1}
			OR sqe.ENTER_PARTNUMBER LIKE #{2})
			AND sqe.CAGE_CODE IS NOT NULL
			AND sqe.CERTIFICATION != ""
			AND sqe.UNIT_PRICE > 0
			
  </select>
  
  <select id="getCerIdByCode" parameterType="String" resultType="Integer">
  		SELECT c.SYSTEM_CODE_ID FROM certifications c WHERE c.`CODE` = #{code};
  </select>
  
  <select id="getEmailList" resultMap="BaseResultMap">
  		SELECT
  			se.id,
			se.PART_NUMBER,
			ci.QUOTE_NUMBER
		FROM
			satair_email se
		LEFT JOIN client_inquiry ci ON ci.ID = se.CLIENT_INQUIRY_ID
		WHERE
			se.EMAIL_SEND = 0
  </select>
  
  <select id="updateEmailStatus" parameterType="com.naswork.model.SatairQuoteElement">
  		UPDATE satair_email SET EMAIL_SEND = 1 WHERE ID = #{id}
  </select>
  
  <select id="listPage" parameterType="page" resultMap="BaseResultMap">
  		SELECT
			*
		FROM
			(
				SELECT DISTINCT
					sqe.PART_NUMBER,
					sqe.DESCRIPTION,
					sqe.lead_time,
					sqe.UNIT_PRICE,
					sqe.AMOUNT AS moq,
					sqe.CERTIFICATION,
					sqe.CURRENCY,
					sqe.REMARK,
					ci.QUOTE_NUMBER,
					sqe.ENTER_PARTNUMBER,
					1077 AS supplier_code,
					sqe.UPDATE_DATETIME
				FROM
					satair_quote_element sqe
				LEFT JOIN satair_quote sq ON sq.ID = sqe.SATAIR_QUOTE_ID
				LEFT JOIN client_inquiry ci ON sq.CLIENT_INQUIRY_ID = ci.ID
				UNION
					SELECT DISTINCT
						aqe.PART_NUMBER,
						aqe.DESCRIPTION,
						aqe.LEAD_TIME,
						aqe.UNIT_PRICE,
						aqe.MOQ,
						aqe.CERTIFICATION,
						aqe.CURRENCY,
						aqe.REMARK,
						ci.QUOTE_NUMBER,
						cie.PART_NUMBER,
						1006 AS supplier_code,
						aqe.UPDATE_DATETIME
					FROM
						aviall_quote_element aqe
					LEFT JOIN aviall_quote aq ON aq.ID = aqe.AVIALL_QUOTE_ID
					LEFT JOIN client_inquiry ci ON aq.CLIENT_INQUIRY_ID = ci.ID
					LEFT JOIN client_inquiry_element cie ON cie.ID = aqe.CLIENT_INQUIRY_ELEMENT_ID
				UNION
					SELECT DISTINCT
						kqe.PART_NUMBER,
						kqe.DESCRIPTION,
						kqe.LEAD_TIME,
						kqe.UNIT_PRICE,
						kqe.AMOUNT AS moq,
						kqe.CERTIFICATION,
						kqe.CURRENCY,
						kqe.INFORMATION AS remark,
						ci.QUOTE_NUMBER,
						cie.PART_NUMBER,
						1003 AS supplier_code,
						kqe.UPDATE_DATETIME
					FROM
						klx_quote_element kqe
					LEFT JOIN klx_quote kq ON kq.ID = kqe.KLX_QUOTE_ID
					LEFT JOIN client_inquiry ci ON ci.ID = kq.CLIENT_INQUIRY_ID
					LEFT JOIN client_inquiry_element cie ON cie.ID = kqe.CLIENT_INQUIRY_ELEMENT_ID
				UNION
					SELECT DISTINCT
						kqe.PART_NUMBER,
						kqe.DESCRIPTION,
						kqe.LEAD_TIME,
						kqe.UNIT_PRICE,
						kqe.AMOUNT AS moq,
						kqe.CERTIFICATION,
						kqe.CURRENCY,
						kqe.INFORMATION AS remark,
						ci.QUOTE_NUMBER,
						cie.PART_NUMBER,
						1005 AS supplier_code,
						kqe.UPDATE_DATETIME
					FROM
						kapco_quote_element kqe
					LEFT JOIN kapco_quote kq ON kq.ID = kqe.KAPCO_QUOTE_ID
					LEFT JOIN client_inquiry ci ON ci.ID = kq.CLIENT_INQUIRY_ID
					LEFT JOIN client_inquiry_element cie ON cie.ID = kqe.CLIENT_INQUIRY_ELEMENT_ID
				UNION		
					SELECT DISTINCT
						tqe.PART_NUMBER,
						tqe.DESCRIPTION,
						tqe.LEAD_TIME,
						tqe.UNIT_PRICE,
						tqe.AMOUNT AS moq,
						tqe.CERTIFICATION,
						tqe.CURRENCY,
						tqe.INFORMATION AS remark,
						ci.QUOTE_NUMBER,
						cie.PART_NUMBER,
						6012 AS supplier_code,
						tqe.UPDATE_DATETIME
					FROM
						txtav_quote_element tqe
					LEFT JOIN txtav_quote tq ON tq.ID = tqe.TXTAV_QUOTE_ID
					LEFT JOIN client_inquiry ci ON ci.ID = tq.CLIENT_INQUIRY_ID
					LEFT JOIN client_inquiry_element cie ON cie.ID = tqe.CLIENT_INQUIRY_ELEMENT_ID
				
			) a
			<where>
				${where}
			</where>
			<if test="orderby != null">
				${orderby}
			</if>
  </select>
  
  <select id="list" parameterType="page" resultMap="BaseResultMap">
  		SELECT
			*
		FROM
			(
				SELECT DISTINCT
					sqe.PART_NUMBER,
					sqe.DESCRIPTION,
					sqe.lead_time,
					sqe.UNIT_PRICE,
					sqe.AMOUNT AS moq,
					sqe.CERTIFICATION,
					sqe.CURRENCY,
					sqe.REMARK,
					ci.QUOTE_NUMBER,
					sqe.ENTER_PARTNUMBER,
					1077 AS supplier_code,
					sqe.UPDATE_DATETIME
				FROM
					satair_quote_element sqe
				LEFT JOIN satair_quote sq ON sq.ID = sqe.SATAIR_QUOTE_ID
				LEFT JOIN client_inquiry ci ON sq.CLIENT_INQUIRY_ID = ci.ID
				UNION
					SELECT DISTINCT
						aqe.PART_NUMBER,
						aqe.DESCRIPTION,
						aqe.LEAD_TIME,
						aqe.UNIT_PRICE,
						aqe.MOQ,
						aqe.CERTIFICATION,
						aqe.CURRENCY,
						aqe.REMARK,
						ci.QUOTE_NUMBER,
						cie.PART_NUMBER,
						1006 AS supplier_code,
						aqe.UPDATE_DATETIME
					FROM
						aviall_quote_element aqe
					LEFT JOIN aviall_quote aq ON aq.ID = aqe.AVIALL_QUOTE_ID
					LEFT JOIN client_inquiry ci ON aq.CLIENT_INQUIRY_ID = ci.ID
					LEFT JOIN client_inquiry_element cie ON cie.ID = aqe.CLIENT_INQUIRY_ELEMENT_ID
				UNION
					SELECT DISTINCT
						kqe.PART_NUMBER,
						kqe.DESCRIPTION,
						kqe.LEAD_TIME,
						kqe.UNIT_PRICE,
						kqe.AMOUNT AS moq,
						kqe.CERTIFICATION,
						kqe.CURRENCY,
						kqe.INFORMATION AS remark,
						ci.QUOTE_NUMBER,
						cie.PART_NUMBER,
						1003 AS supplier_code,
						kqe.UPDATE_DATETIME
					FROM
						klx_quote_element kqe
					LEFT JOIN klx_quote kq ON kq.ID = kqe.KLX_QUOTE_ID
					LEFT JOIN client_inquiry ci ON ci.ID = kq.CLIENT_INQUIRY_ID
					LEFT JOIN client_inquiry_element cie ON cie.ID = kqe.CLIENT_INQUIRY_ELEMENT_ID
				UNION
					SELECT DISTINCT
						kqe.PART_NUMBER,
						kqe.DESCRIPTION,
						kqe.LEAD_TIME,
						kqe.UNIT_PRICE,
						kqe.AMOUNT AS moq,
						kqe.CERTIFICATION,
						kqe.CURRENCY,
						kqe.INFORMATION AS remark,
						ci.QUOTE_NUMBER,
						cie.PART_NUMBER,
						1005 AS supplier_code,
						kqe.UPDATE_DATETIME
					FROM
						kapco_quote_element kqe
					LEFT JOIN kapco_quote kq ON kq.ID = kqe.KAPCO_QUOTE_ID
					LEFT JOIN client_inquiry ci ON ci.ID = kq.CLIENT_INQUIRY_ID
					LEFT JOIN client_inquiry_element cie ON cie.ID = kqe.CLIENT_INQUIRY_ELEMENT_ID
				UNION		
					SELECT DISTINCT
						tqe.PART_NUMBER,
						tqe.DESCRIPTION,
						tqe.LEAD_TIME,
						tqe.UNIT_PRICE,
						tqe.AMOUNT AS moq,
						tqe.CERTIFICATION,
						tqe.CURRENCY,
						tqe.INFORMATION AS remark,
						ci.QUOTE_NUMBER,
						cie.PART_NUMBER,
						6012 AS supplier_code,
						tqe.UPDATE_DATETIME
					FROM
						txtav_quote_element tqe
					LEFT JOIN txtav_quote tq ON tq.ID = tqe.TXTAV_QUOTE_ID
					LEFT JOIN client_inquiry ci ON ci.ID = tq.CLIENT_INQUIRY_ID
					LEFT JOIN client_inquiry_element cie ON cie.ID = tqe.CLIENT_INQUIRY_ELEMENT_ID
				
			) a 
			<where>
				${where}
			</where>
			<if test="orderby != null">
				${orderby}
			</if>
			limit 0,500
  </select>
  
  <select id="getByClientInquiryId" parameterType="Integer" resultMap="BaseResultMap">
  	SELECT
		sqe.*
	FROM
		satair_quote_element sqe
	LEFT JOIN satair_quote sq ON sq.ID = sqe.SATAIR_QUOTE_ID
	WHERE
		sq.CLIENT_INQUIRY_ID = #{0} and sq.id = #{1} and sqe.UNIT_PRICE is not null
		and sqe.UNIT_PRICE != "" and sqe.UNIT_PRICE != 0 and sqe.UNIT_PRICE != 0.00
  </select>
  
</mapper>