<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.naswork.dao.SupplierOrderElementDao" >
  <resultMap id="BaseResultMap" type="com.naswork.model.SupplierOrderElement" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="SUPPLIER_ORDER_ID" property="supplierOrderId" jdbcType="INTEGER" />
    <result column="CLIENT_ORDER_ELEMENT_ID" property="clientOrderElementId" jdbcType="INTEGER" />
    <result column="SUPPLIER_QUOTE_ELEMENT_ID" property="supplierQuoteElementId" jdbcType="INTEGER" />
    <result column="AMOUNT" property="amount" jdbcType="DOUBLE" />
    <result column="PRICE" property="price" jdbcType="DOUBLE" />
    <result column="LEAD_TIME" property="leadTime" jdbcType="VARCHAR" />
    <result column="DEADLINE" property="deadline" jdbcType="DATE" />
    <result column="UPDATE_TIMESTAMP" property="updateTimestamp" jdbcType="TIMESTAMP" />
    <result column="IMPORT_STATUS" property="importStatus" jdbcType="INTEGER" />
    <result column="AWB" property="awb" jdbcType="VARCHAR" />
    <result column="part_number" property="partNumber" jdbcType="VARCHAR" />
    <result column="ORDER_NUMBER" property="orderNumber" jdbcType="VARCHAR" />
    <result column="DESTINATION" property="destination" jdbcType="VARCHAR" />
    <result column="SHIP_WAY_ID" property="shipWayId" jdbcType="INTEGER" />
    <result column="ship_way_value" property="shipWayValue" jdbcType="VARCHAR" />
    <result column="storage_amount" property="storageAmount" jdbcType="DOUBLE" />
    <result column="PAYMENT_DATE" property="paymentDate" jdbcType="DATE" />
    <result column="INVOICE_DATE" property="invoiceDate" jdbcType="DATE" />
    <result column="SHIP_LEAD_TIME" property="shipLeadTime" jdbcType="INTEGER" />
    <result column="TAX_REIMBURSEMENT_ID" property="taxReimbursementId" jdbcType="INTEGER" />
    <result column="supplier_order_amount" property="supplierOrderAmount" jdbcType="DOUBLE" />
    <result column="client_order_amount" property="clientOrderAmount" jdbcType="DOUBLE" />
    <result column="order_date" property="orderDate" jdbcType="DATE" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="bank_cost" property="bankCost" jdbcType="DOUBLE" />
    <result column="PROFIT_OTHER_FEE" property="profitOtherFee" jdbcType="DOUBLE" />
  </resultMap>
  
  <resultMap type="com.naswork.module.purchase.controller.supplierorder.AddSupplierOrderElementVo" id="addSupplierOrderElementVo">
   <result column="order_status_value" property="orderStatusValue" jdbcType="VARCHAR" />
  <result column="ORDER_STATUS_ID" property="orderStatusId" jdbcType="INTEGER" />
  	<result column="id" property="id" jdbcType="INTEGER" />
    <result column="lead_time" property="leadTime" jdbcType="VARCHAR" />
    <result column="deadline" property="deadline" jdbcType="DATE" />
    <result column="supplier_order_id" property="supplierOrderId" jdbcType="INTEGER" />
    <result column="client_order_element_id" property="clientOrderElementId" jdbcType="INTEGER" />
    <result column="supplier_quote_element_id" property="supplierQuoteElementId" jdbcType="INTEGER" />
    <result column="order_date" property="orderDate" jdbcType="DATE" />
    <result column="terms" property="terms" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="supplier_quote_number" property="supplierQuoteNumber" jdbcType="VARCHAR" />
    <result column="client_id" property="clientId" jdbcType="INTEGER" />
    <result column="client_code" property="clientCode" jdbcType="VARCHAR" />
    <result column="client_name" property="clientName" jdbcType="VARCHAR" />
    <result column="supplier_id" property="supplierId" jdbcType="INTEGER" />
    <result column="supplier_code" property="supplierCode" jdbcType="VARCHAR" />
    <result column="supplier_name" property="supplierName" jdbcType="VARCHAR" />
    <result column="currency_id" property="currencyId" jdbcType="INTEGER" />
    <result column="currency_code" property="currencyCode" jdbcType="VARCHAR" />
    <result column="currency_value" property="currencyValue" jdbcType="VARCHAR" />
    <result column="client_exchange_rate" property="clientExchangeRate" jdbcType="DOUBLE" />
    <result column="exchange_rate" property="exchangeRate" jdbcType="DOUBLE" />
    <result column="client_order_number" property="clientOrderNumber" jdbcType="VARCHAR" />
    <result column="supplier_order_number" property="supplierOrderNumber" jdbcType="VARCHAR" />
    <result column="condition_id" property="conditionId" jdbcType="INTEGER" />
    <result column="condition_code" property="conditionCode" jdbcType="VARCHAR" />
    <result column="condition_value" property="conditionValue" jdbcType="VARCHAR" />
    <result column="certification_id" property="certificationId" jdbcType="INTEGER" />
    <result column="certification_code" property="certificationCode" jdbcType="VARCHAR" />
    <result column="certification_value" property="certificationValue" jdbcType="VARCHAR" />
    <result column="detail" property="detail" jdbcType="VARCHAR" />
    <result column="element_id" property="elementId" jdbcType="INTEGER" />
    <result column="item" property="item" jdbcType="INTEGER" />
    <result column="quote_part_number" property="quotePartNumber" jdbcType="VARCHAR" />
    <result column="alter_part_number" property="alterPartNumber" jdbcType="VARCHAR" />
    <result column="quote_unit" property="quoteUnit" jdbcType="VARCHAR" />
    <result column="quote_amount" property="quoteAmount" jdbcType="DOUBLE" />
    <result column="quote_description" property="quoteDescription" jdbcType="VARCHAR" />
    <result column="quote_remark" property="quoteRemark" jdbcType="VARCHAR" />
    <result column="supplier_quote_price" property="supplierQuotePrice" jdbcType="DOUBLE" />
    <result column="client_quote_price" property="clientQuotePrice" jdbcType="DOUBLE" />
    <result column="client_order_amount" property="clientOrderAmount" jdbcType="DOUBLE" />
    <result column="client_order_price" property="clientOrderPrice" jdbcType="DOUBLE" />
    <result column="client_order_lead_time" property="clientOrderLeadTime" jdbcType="VARCHAR" />
    <result column="client_order_deadline" property="clientOrderDeadline" jdbcType="DATE" />
    <result column="supplier_order_amount" property="supplierOrderAmount" jdbcType="DOUBLE" />
    <result column="supplier_order_price" property="supplierOrderPrice" jdbcType="DOUBLE" />
    <result column="supplier_order_total_price" property="supplierOrderTotalPrice" jdbcType="DOUBLE" />
    <result column="import_amount" property="importAmount" jdbcType="DOUBLE" />
    <result column="update_timestamp" property="updateTimestamp" jdbcType="TIMESTAMP" />
    <result column="location" property="location" jdbcType="VARCHAR" />    
    <result column="awb" property="awb" jdbcType="VARCHAR" />  
    <result column="DESTINATION" property="destination" jdbcType="VARCHAR" />
    <result column="ship_way_value" property="shipWayValue" jdbcType="INTEGER" />
    <result column="invoice_date" property="invoiceDate" jdbcType="DATE" />
    <result column="ship_lead_time" property="shipLeadTime" jdbcType="INTEGER" />
    <result column="import_date" property="importDate" jdbcType="DATE" />
    <result column="TAX_REIMBURSEMENT_ID" property="taxReimbursementId" jdbcType="INTEGER" />
    <result column="tax_return_value" property="taxReturnValue" jdbcType="VARCHAR" />
    <result column="destination_id" property="destinationId" jdbcType="VARCHAR" />
    <result column="ship_way_id" property="shipWayId" jdbcType="VARCHAR" />
    <result column="BANK_COST" property="bankCost" jdbcType="DOUBLE" />
  </resultMap>
  
  <resultMap type="com.naswork.module.purchase.controller.supplierorder.ClientOrderElementVo" id="clientOrderElementVo">
   <result column="weather_amount" property="weatherAmount" jdbcType="DOUBLE" />
   <result column="weather_supplier_quote_element_id" property="weatherSupplierQuoteElementId" jdbcType="INTEGER" />
   <result column="weather_price" property="weatherPrice" jdbcType="DOUBLE" />
   <result column="storage_price" property="storagePrice" jdbcType="DOUBLE" />
   <result column="ORDER_NUMBER" property="orderNumber" jdbcType="VARCHAR" />
   <result column="IMPORT_NUMBER" property="importNumber" jdbcType="VARCHAR" />
   <result column="CLIENT_INQUIRY_ELEMENT_ID" property="clientInquiryElementId" jdbcType="INTEGER" />
   <result column="client_quote_element_id" property="clientQuoteElementId" jdbcType="INTEGER" />
   <result column="supplier_quote_element_id" property="supplierQuoteElementId" jdbcType="INTEGER" />
   <result column="soe_id" property="soeId" jdbcType="INTEGER" />
   <result column="import_package_element_id" property="importPackageElementId" jdbcType="INTEGER" />
   <result column="import_package_amount" property="importPackageAmount" jdbcType="DOUBLE" />
   <result column="IMPORT_DATE" property="importDate" jdbcType="DATE" />
   <result column="CURRENCY_ID" property="currencyId" jdbcType="INTEGER" />
   <result column="ELEMENT_ID" property="elementId" jdbcType="INTEGER" />
   <result column="EXCHANGE_RATE" property="exchangeRate" jdbcType="INTEGER" />
   <result column="SUPPLIER_ID" property="supplierId" jdbcType="INTEGER" />
   <result column="id" property="id" jdbcType="INTEGER" />
   <result column="PART_NUMBER" property="partNumber" jdbcType="VARCHAR" />
   <result column="UNIT" property="unit" jdbcType="VARCHAR" />
   <result column="PRICE" property="price" jdbcType="DOUBLE" />
   <result column="REMARK" property="remark" jdbcType="VARCHAR" />
   <result column="CERTIFICATION_ID" property="certificationId" jdbcType="INTEGER" />
   <result column="CONDITION_ID" property="conditionId" jdbcType="INTEGER" />
   <result column="SERIAL_NUMBER" property="serialNumber" jdbcType="VARCHAR" />
   <result column="CERTIFICATION_DATE" property="certificationDate" jdbcType="DATE" />
   <result column="BATCH_NUMBER" property="batchNumber" jdbcType="VARCHAR" />
   <result column="LOCATION" property="location" jdbcType="VARCHAR" />
   <result column="quote_part_number" property="quotePartNumber" jdbcType="VARCHAR" />
   <result column="alter_part_number" property="alterPartNumber" jdbcType="VARCHAR" />
   <result column="client_order_element_id" property="clientOrderElementId" jdbcType="INTEGER" />
   <result column="client_order_id" property="clientOrderId" jdbcType="INTEGER" />
   <result column="currency_id" property="currencyId" jdbcType="INTEGER" />
   <result column="exchange_rate" property="exchangeRate" jdbcType="DOUBLE" />
   <result column="quote_part_number" property="quotePartNumber" jdbcType="VARCHAR" />
   <result column="quote_description" property="quoteDescription" jdbcType="VARCHAR" />
   <result column="quote_unit" property="quoteUnit" jdbcType="VARCHAR" />
   <result column="client_order_amount" property="clientOrderAmount" jdbcType="DOUBLE" />
   <result column="storage_amount" property="storageAmount" jdbcType="DOUBLE" />
   <result column="client_order_lead_time" property="clientOrderLeadTime" jdbcType="VARCHAR" />
   <result column="client_order_deadline" property="clientOrderDeadline" jdbcType="DATE" />
   <result column="location" property="location" jdbcType="VARCHAR" />    
   <result column="quote_number" property="quoteNumber" jdbcType="VARCHAR" />
   <result column="item" property="item" jdbcType="INTEGER" />
   <result column="csn" property="csn" jdbcType="INTEGER" />
   <result column="supplier_code" property="supplierCode" jdbcType="VARCHAR" />
   <result column="client_quote_price" property="clientQuotePrice" jdbcType="DOUBLE" />
   <result column="supplier_quote_price" property="supplierQuotePrice" jdbcType="DOUBLE" />
   <result column="client_inquiry_id" property="clientInquiryId" jdbcType="INTEGER" />
   <result column="air_type_id" property="airTypeId" jdbcType="INTEGER" />
   <result column="air_type_code" property="airTypeCode" jdbcType="VARCHAR" />
   <result column="quote_amount" property="quoteAmount" jdbcType="DOUBLE" />
   <result column="fixed_cost" property="fixedCost" jdbcType="DOUBLE" />
   <result column="freight" property="freight" jdbcType="DOUBLE" />
   <result column="supplier_quote_exchange_rate" property="supplierQuoteExchangeRate" jdbcType="DOUBLE" />
   <result column="sq_currency_id" property="sqCurrencyId" jdbcType="INTEGER" />
   <result column="quote_remark" property="quoteRemark" jdbcType="VARCHAR" />
   <result column="weather_order_price" property="weatherOrderPrice" jdbcType="DOUBLE" />
   <result column="weather_order_supplier_quote_element_id" property="weatherOrderSupplierQuoteElementId" jdbcType="INTEGER" />
   <result column="weather_order_amount" property="weatherOrderAmount" jdbcType="DOUBLE" />
   <result column="weather_order_remark" property="weatherOrderRemark" jdbcType="VARCHAR" />
   <result column="client_order_price" property="clientOrderPrice" jdbcType="DOUBLE" />
   <result column="co_currency_id" property="coCurrencyId" jdbcType="INTEGER" />
   <result column="client_quote_exchange_rate" property="clientQuoteExchangeRate" jdbcType="DOUBLE" />
   <result column="storage_amount" property="storageAmount" jdbcType="DOUBLE" />
   <result column="oa_supplier_quote_element_id" property="oaSupplierQuoteElementId" jdbcType="INTEGER" />
   <result column="oa_import_package_element_id" property="oaImportPackageElementId" jdbcType="INTEGER" />
   <result column="oa_supplier_order_element_id" property="oaSupplierOrderElementId" jdbcType="INTEGER" />
   <result column="occupy" property="occupy" jdbcType="INTEGER" />
   <result column="storage_price" property="storagePrice" jdbcType="DOUBLE" />
   <result column="storage_type" property="storageType" jdbcType="INTEGER" />
   <result column="supplier_inquiry_quote_number" property="supplierInquiryQuoteNumber" jdbcType="VARCHAR" />
   <result column="bank_charges" property="bankCharges" jdbcType="DOUBLE" />
   <result column="cqe_bank_charges" property="cqeBankCharges" jdbcType="DOUBLE" />
   <result column="cqe_fixed_cost" property="cqeFixedCost" jdbcType="DOUBLE" />
   <result column="COUNTER_FEE" property="counterFee" jdbcType="DOUBLE" />
   <result column="description" property="description" jdbcType="VARCHAR" />
   <result column="supplier_order_amount" property="supplierOrderAmount" jdbcType="DOUBLE" />
   <result column="supplier_currency_id" property="supplierCurrencyId" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap type="com.naswork.module.purchase.controller.supplierorder.SupplierListVo" id="supplierListVo">
  <result column="warranty" property="warranty" jdbcType="VARCHAR" />
     <result column="serial_number" property="serialNumber" jdbcType="VARCHAR" />
     <result column="tag_src" property="tagSrc" jdbcType="VARCHAR" />
     <result column="tag_date" property="tagDate" jdbcType="VARCHAR" />
     <result column="trace" property="trace" jdbcType="VARCHAR" />
  	<result column="id" property="id" jdbcType="INTEGER" />
  	<result column="supplier_id" property="supplierId" jdbcType="INTEGER" />
    <result column="supplier_code" property="supplierCode" jdbcType="VARCHAR" />
    <result column="client_inquiry_quote_number" property="clientInquiryQuoteNumber" jdbcType="VARCHAR" />
    <result column="supplier_inquiry_quote_number" property="supplierInquiryQuoteNumber" jdbcType="VARCHAR" />
    <result column="quote_date" property="quoteDate" jdbcType="DATE" />
    <result column="quote_part_number" property="quotePartNumber" jdbcType="VARCHAR" />
    <result column="quote_description" property="quoteDescription" jdbcType="VARCHAR" />
    <result column="quote_amount" property="quoteAmount" jdbcType="DOUBLE" /> 
    <result column="quote_unit" property="quoteUnit" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="quote_remark" property="quoteRemark" jdbcType="VARCHAR" /> 
    <result column="update_timestamp" property="updateTimestamp" jdbcType="TIMESTAMP" />
    <result column="currency_id" property="currencyId" jdbcType="INTEGER" />
    <result column="exchange_rate" property="exchangeRate" jdbcType="DOUBLE" /> 
    <result column="condition_code" property="conditionCode" jdbcType="VARCHAR" /> 
    <result column="certification_code" property="certificationCode" jdbcType="VARCHAR" />
    <result column="lead_time" property="leadTime" jdbcType="VARCHAR" />
    <result column="client_order_element_id" property="clientOrderElementId" jdbcType="INTEGER" />
    <result column="inquiry_element_id" property="inquiryElementId" jdbcType="INTEGER" />
    <result column="quote_element_id" property="quoteElementId" jdbcType="INTEGER" />
  </resultMap>
  
  
  <sql id="Base_Column_List" >
    ID, SUPPLIER_ORDER_ID, CLIENT_ORDER_ELEMENT_ID, SUPPLIER_QUOTE_ELEMENT_ID, AMOUNT, 
    PRICE, LEAD_TIME, DEADLINE, UPDATE_TIMESTAMP,SHIP_WAY_ID,DESTINATION,INVOICE_DATE,SHIP_LEAD_TIME,TAX_REIMBURSEMENT_ID,BANK_COST
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from supplier_order_element
    where ID = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectBySqeIdAndSoId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from supplier_order_element
    where SUPPLIER_ORDER_ID = #{0} and SUPPLIER_QUOTE_ELEMENT_ID= #{1}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from supplier_order_element
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.naswork.model.SupplierOrderElement" >
    insert into supplier_order_element (ID, SUPPLIER_ORDER_ID, CLIENT_ORDER_ELEMENT_ID, 
      SUPPLIER_QUOTE_ELEMENT_ID, AMOUNT, PRICE, 
      LEAD_TIME, DEADLINE, UPDATE_TIMESTAMP
      )
    values (#{id,jdbcType=INTEGER}, #{supplierOrderId,jdbcType=INTEGER}, #{clientOrderElementId,jdbcType=INTEGER}, 
      #{supplierQuoteElementId,jdbcType=INTEGER}, #{amount,jdbcType=DOUBLE}, #{price,jdbcType=DOUBLE}, 
      #{leadTime,jdbcType=VARCHAR}, #{deadline,jdbcType=DATE}, #{updateTimestamp,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.naswork.model.SupplierOrderElement" >
    <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
		SELECT LAST_INSERT_ID() AS id
	</selectKey>
    insert into supplier_order_element
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="supplierOrderId != null" >
        SUPPLIER_ORDER_ID,
      </if>
      <if test="clientOrderElementId != null" >
        CLIENT_ORDER_ELEMENT_ID,
      </if>
      <if test="supplierQuoteElementId != null" >
        SUPPLIER_QUOTE_ELEMENT_ID,
      </if>
      <if test="amount != null" >
        AMOUNT,
      </if>
      <if test="price != null" >
        PRICE,
      </if>
      <if test="leadTime != null" >
        LEAD_TIME,
      </if>
      <if test="deadline != null" >
        DEADLINE,
      </if>
      <if test="updateTimestamp != null" >
        UPDATE_TIMESTAMP,
      </if>
      <if test="shipWayId != null" >
        SHIP_WAY_ID,
      </if>
      <if test="destination != null" >
        DESTINATION,
      </if>
      <if test="orderStatusId != null" >
        ORDER_STATUS_ID,
      </if>
      <if test="invoiceDate != null" >
        INVOICE_DATE,
      </if>
      <if test="shipLeadTime != null" >
        SHIP_LEAD_TIME,
      </if>
      <if test="taxReimbursementId != null" >
        TAX_REIMBURSEMENT_ID,
      </if>
      <if test="item != null" >
        item,
      </if>
      <if test="bankCost != null" >
        BANK_COST,
      </if>
      <if test="elementStatusId != null" >
        ELEMENT_STATUS_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="supplierOrderId != null" >
        #{supplierOrderId,jdbcType=INTEGER},
      </if>
      <if test="clientOrderElementId != null" >
        #{clientOrderElementId,jdbcType=INTEGER},
      </if>
      <if test="supplierQuoteElementId != null" >
        #{supplierQuoteElementId,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="leadTime != null" >
        #{leadTime,jdbcType=VARCHAR},
      </if>
      <if test="deadline != null" >
        #{deadline,jdbcType=DATE},
      </if>
      <if test="updateTimestamp != null" >
        #{updateTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="shipWayId != null" >
        #{shipWayId,jdbcType=INTEGER},
      </if>
      <if test="destination != null" >
        #{destination,jdbcType=VARCHAR},
      </if>
      <if test="orderStatusId != null" >
        #{orderStatusId,jdbcType=INTEGER},
      </if>
      <if test="invoiceDate != null" >
        #{invoiceDate,jdbcType=DATE},
      </if>
      <if test="shipLeadTime != null" >
        #{shipLeadTime,jdbcType=INTEGER},
      </if>
      <if test="taxReimbursementId != null" >
        #{taxReimbursementId,jdbcType=INTEGER},
      </if>
      <if test="item != null" >
        #{item,jdbcType=INTEGER},
      </if>
      <if test="bankCost != null" >
        #{bankCost,jdbcType=DOUBLE},
      </if>
      <if test="elementStatusId != null" >
        #{elementStatusId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.naswork.model.SupplierOrderElement" >
    update supplier_order_element
    <set >
      <if test="supplierOrderId != null" >
        SUPPLIER_ORDER_ID = #{supplierOrderId,jdbcType=INTEGER},
      </if>
      <if test="clientOrderElementId != null" >
        CLIENT_ORDER_ELEMENT_ID = #{clientOrderElementId,jdbcType=INTEGER},
      </if>
      <if test="supplierQuoteElementId != null" >
        SUPPLIER_QUOTE_ELEMENT_ID = #{supplierQuoteElementId,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        AMOUNT = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="price != null" >
        PRICE = #{price,jdbcType=DOUBLE},
      </if>
      <if test="leadTime != null" >
        LEAD_TIME = #{leadTime,jdbcType=VARCHAR},
      </if>
      <if test="deadline != null" >
        DEADLINE = #{deadline,jdbcType=DATE},
      </if>
      <if test="updateTimestamp != null" >
        UPDATE_TIMESTAMP = #{updateTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="awb != null" >
        AWB = #{awb,jdbcType=VARCHAR},
      </if>
      <if test="importStatus != null" >
        IMPORT_STATUS = #{importStatus,jdbcType=INTEGER},
      </if>
      <if test="shipWayId != null" >
        SHIP_WAY_ID = #{shipWayId,jdbcType=INTEGER},
      </if>
      <if test="destination != null" >
        DESTINATION = #{destination,jdbcType=VARCHAR},
      </if>
      <if test="orderStatusId != null" >
        ORDER_STATUS_ID = #{orderStatusId,jdbcType=INTEGER},
      </if>
      <if test="invoiceDate != null" >
        INVOICE_DATE = #{invoiceDate,jdbcType=DATE},
      </if>
      <if test="shipLeadTime != null" >
        SHIP_LEAD_TIME = #{shipLeadTime,jdbcType=INTEGER},
      </if>
      <if test="taxReimbursementId != null" >
        TAX_REIMBURSEMENT_ID = #{taxReimbursementId,jdbcType=INTEGER},
      </if>
      <if test="profitOtherFee != null" >
        PROFIT_OTHER_FEE = #{profitOtherFee,jdbcType=DOUBLE},
      </if>
      <if test="elementStatusId != null" >
        ELEMENT_STATUS_ID = #{elementStatusId,jdbcType=INTEGER},
      </if>
      <if test="unit != null" >
        UNIT = #{unit,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.naswork.model.SupplierOrderElement" >
    update supplier_order_element
    set SUPPLIER_ORDER_ID = #{supplierOrderId,jdbcType=INTEGER},
      CLIENT_ORDER_ELEMENT_ID = #{clientOrderElementId,jdbcType=INTEGER},
      SUPPLIER_QUOTE_ELEMENT_ID = #{supplierQuoteElementId,jdbcType=INTEGER},
      AMOUNT = #{amount,jdbcType=DOUBLE},
      PRICE = #{price,jdbcType=DOUBLE},
      LEAD_TIME = #{leadTime,jdbcType=VARCHAR},
      DEADLINE = #{deadline,jdbcType=DATE},
      UPDATE_TIMESTAMP = #{updateTimestamp,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 新增供应商订单明细-供应商订单模块 -->
  <select id="AddSupplierOrderPage" parameterType="page" resultMap="addSupplierOrderElementVo">
  	SELECT DISTINCT
		soe.id,
		soe.lead_time,
		soe.deadline,
		soe.supplier_order_id,
		soe.client_order_element_id,
		soe.supplier_quote_element_id,
		so.order_date,
		so.terms,
		so.remark,
		si.quote_number AS supplier_quote_number,
		c.id AS client_id,
		c. CODE AS client_code,
		c. NAME AS client_name,
		so.supplier_id,
		s. CODE AS supplier_code,
		s. NAME AS supplier_name,
		cu.id AS currency_id,
		cu. CODE AS currency_code,
		cu.VALUE AS currency_value,
		co.exchange_rate AS client_exchange_rate,
		so.exchange_rate,
		co.order_number AS client_order_number,
		so.order_number AS supplier_order_number,
		sqe.condition_id,
		cond. CODE AS condition_code,
		cond.VALUE AS condition_value,
		sqe.certification_id,
		cert. CODE AS certification_code,
		cert.VALUE AS certification_value,
		CONCAT(
			sqe.part_number,
			'
	',
			sqe.description,
			'
			',
			cert. CODE
		) AS detail,
		sqe.element_id,
		sqe.part_number AS quote_part_number,
		e.part_number_code,
		sqe.unit AS quote_unit,
		cqe.amount AS quote_amount,
		sqe.description AS quote_description,
		cqe.remark AS quote_remark,
		sqe.price AS supplier_quote_price,
		cqe.price AS client_quote_price,
		coe.amount AS client_order_amount,
		coe.price AS client_order_price,
		coe.lead_time AS client_order_lead_time,
		coe.deadline AS client_order_deadline,
		soe.amount AS supplier_order_amount,
		soe.price AS supplier_order_price,
		soe.amount * soe.price AS supplier_order_total_price,
		IFNULL(vsie.import_amount, 0) AS import_amount,
		soe.lead_time AS supplier_order_lead_time,
		soe.deadline AS supplier_order_deadline,
		soe.update_timestamp
	FROM
		supplier_order_element soe
	LEFT JOIN v_supplier_import_element vsie ON (
		soe.id = vsie.supplier_order_element_id
	)
	INNER JOIN supplier_order so ON (
		soe.supplier_order_id = so.id
	)
	INNER JOIN client_order co ON (so.client_order_id = co.id)
	INNER JOIN client_quote cq ON (co.client_quote_id = cq.id)
	INNER JOIN client_inquiry ci ON (cq.client_inquiry_id = ci.id)
	INNER JOIN client c ON (ci.client_id = c.id)
	INNER JOIN supplier s ON (so.supplier_id = s.id)
	INNER JOIN client_order_element coe ON (
		soe.client_order_element_id = coe.id
	)
	INNER JOIN client_quote_element cqe ON (
		coe.client_quote_element_id = cqe.id
	)
	INNER JOIN supplier_quote_element sqe ON (
		soe.supplier_quote_element_id = sqe.id
	)
	INNER JOIN supplier_quote sq ON (
		sqe.supplier_quote_id = sq.id
	)
	INNER JOIN supplier_inquiry si ON (
		sq.supplier_inquiry_id = si.id
	)
	INNER JOIN element e ON (sqe.element_id = e.id)
	INNER JOIN system_code cu ON (so.currency_id = cu.id)
	INNER JOIN system_code cond ON (sqe.condition_id = cond.id)
	INNER JOIN system_code cert ON (
		sqe.certification_id = cert.id
	)
	INNER JOIN system_code bt ON (ci.biz_type_id = bt.id)
	INNER JOIN system_code AT ON (ci.air_type_id = AT .id)
	INNER JOIN authority_relation ar ON ar.SUPPLIER_ID = so.SUPPLIER_ID
	WHERE
		coe.id =#{id} and soe.ORDER_STATUS_ID != 64
		<if test="userId != null">
			AND ar.USER_ID = #{userId}
		</if>
		
	ORDER BY
		so.order_date ASC
  </select>
  
  <!-- 新增供应商订单明细-客户订单模块 -->
  <select id="ClientOrderPage" parameterType="page" resultMap="clientOrderElementVo">
  		SELECT
			coe.id,
			coe.client_order_id,
			coe.client_quote_element_id,
			cqe.supplier_quote_element_id,
			co.order_date,
			co.source_number AS source_order_number,
			co.order_number,
			co.terms,
			cu.id AS currency_id,
			cu. CODE AS currency_code,
			cu.
		VALUE
			AS currency_value,
			co.exchange_rate,
			sqe.condition_id,
			cond. CODE AS condition_code,
			cond.
		VALUE
			AS condition_value,
			sqe.certification_id,
			cert. CODE AS certification_code,
			cert.
		VALUE
			AS certification_value,
			CONCAT(
				sqe.part_number,
				'
		',
				sqe.description,
				'
				',
				cert. CODE
			) AS detail,
			IFNULL(vcee.export_amount, 0) AS export_amount,
			IFNULL(vcos.storage_amount, 0) AS storage_amount,
			sqe.part_number AS quote_part_number,
			sqe.alter_part_number,
			e.part_number_code,
			sqe.unit AS quote_unit,
			cqe.amount AS quote_amount,
			sqe.description AS quote_description,
			IFNULL(coe.DESCRIPTION,cie.DESCRIPTION) as description,
			sqe.location,
			cqe.remark AS quote_remark,
			sqe.price AS supplier_quote_price,
			cqe.price AS client_quote_price,
			coe.amount AS client_order_amount,
			coe.price AS client_order_price,
			coe.lead_time AS client_order_lead_time,
			coe.deadline AS client_order_deadline,
			cq.quote_number,
			coe.update_timestamp,
			cie.ITEM,
			cie.CSN,
			s.`CODE` AS supplier_code,coe.remark
		FROM
			client_order_element coe
		INNER JOIN client_order co ON (coe.client_order_id = co.id)
		INNER JOIN client_quote cq ON (co.client_quote_id = cq.id)
		INNER JOIN client_quote_element cqe ON (
			coe.client_quote_element_id = cqe.id
		)
		LEFT JOIN client_inquiry_element cie ON (
			cie.id = cqe.CLIENT_INQUIRY_ELEMENT_ID
		)
		INNER JOIN supplier_quote_element sqe ON (
			cqe.supplier_quote_element_id = sqe.id
		)
		LEFT JOIN supplier_quote sq on (
			sq.ID = sqe.SUPPLIER_QUOTE_ID
		)
		LEFT JOIN supplier_inquiry si ON (
			si.ID = sq.SUPPLIER_INQUIRY_ID
		)
		LEFT JOIN supplier s on (s.ID = si.SUPPLIER_ID)
		INNER JOIN element e ON (sqe.element_id = e.id)
		INNER JOIN system_code cond ON (sqe.condition_id = cond.id)
		INNER JOIN system_code cert ON (
			sqe.certification_id = cert.id
		)
		INNER JOIN system_code cu ON (cq.currency_id = cu.id)
		LEFT JOIN v_client_export_element vcee ON (
			vcee.client_order_element_id = coe.id
		)
		LEFT JOIN v_client_order_storage vcos ON (
			vcos.client_order_element_id = coe.id
		)
		WHERE
			co.id =#{id} and coe.order_status_id!='64' and coe.order_status_id!='62' AND (coe.STORAGE_STATUS != 1 or coe.STORAGE_STATUS is null)
  		<if test="where != null">
  			and ${where}
  		</if>
  </select>
  
  
  <select id="ClientOrderData" parameterType="com.naswork.model.ClientQuote" resultMap="clientOrderElementVo">
  		SELECT
			cwoe.id,
			cwoe.client_weather_order_id,
			cwoe.client_quote_element_id,
			cqe.supplier_quote_element_id,
			cwo.order_date,
			cwo.source_number AS source_order_number,
			cwo.order_number,
			cwo.terms,
			cu.id AS currency_id,
			cu. CODE AS currency_code,
			cu.
		VALUE
			AS currency_value,
			cwo.exchange_rate,
			sqe.condition_id,
			cond. CODE AS condition_code,
			cond.
		VALUE
			AS condition_value,
			sqe.certification_id,
			cert. CODE AS certification_code,
			cert.
		VALUE
			AS certification_value,
			sqe.part_number AS quote_part_number,
			sqe.alter_part_number,	si.quote_number AS supplier_inquiry_quote_number,
			e.part_number_code,	sqe.id supplier_quote_element_id,
			sqe.unit AS quote_unit,
			cqe.amount AS quote_amount,
			sqe.description AS quote_description,
			sqe.location,
			cqe.remark AS quote_remark,
			sqe.price AS supplier_quote_price,
			cqe.price AS client_quote_price,
			cwoe.amount AS client_order_amount,
			cwoe.price AS client_order_price,
			cwoe.lead_time AS client_order_lead_time,
			cwoe.deadline AS client_order_deadline,
			cq.quote_number,
			cwoe.update_timestamp,
			cie.ITEM,
			cie.client_inquiry_id,
			cie.CSN,
			s.`CODE` AS supplier_code,
			cie.id client_inquiry_element_id,cwoe.remark,
			sq.CURRENCY_ID AS supplier_currency_id
		FROM
			client_weather_order_element cwoe
		INNER JOIN order_approval oa ON (oa.client_order_element_id=cwoe.id)
		INNER JOIN client_weather_order cwo ON (cwoe.client_weather_order_id = cwo.id)
		INNER JOIN client_quote cq ON (cwo.client_quote_id = cq.id)
		INNER JOIN client_quote_element cqe ON (
			cwoe.client_quote_element_id = cqe.id
		)
		LEFT JOIN client_inquiry_element cie ON (
			cie.id = cqe.CLIENT_INQUIRY_ELEMENT_ID
		)
		INNER JOIN supplier_quote_element sqe ON (
			cqe.supplier_quote_element_id = sqe.id
		)
		LEFT JOIN supplier_quote sq on (
			sq.ID = sqe.SUPPLIER_QUOTE_ID
		)
		LEFT JOIN supplier_inquiry si ON (
			si.ID = sq.SUPPLIER_INQUIRY_ID
		)
		LEFT JOIN supplier s on (s.ID = si.SUPPLIER_ID)
		INNER JOIN element e ON (sqe.element_id = e.id)
		INNER JOIN system_code cond ON (sqe.condition_id = cond.id)
		INNER JOIN system_code cert ON (
			sqe.certification_id = cert.id
		)
		INNER JOIN system_code cu ON (cq.currency_id = cu.id)
		WHERE
			oa.id in (${ids})
  		GROUP BY oa.client_order_element_id
  </select>
  
  <select id="SupplierWeatherOrderData" parameterType="com.naswork.model.ClientQuote" resultMap="clientOrderElementVo">
  		SELECT
			coe.id,
			coe.client_order_id,
			coe.client_quote_element_id,
			cqe.supplier_quote_element_id,
			co.order_date,
			co.source_number AS source_order_number,
			co.order_number,
			co.terms,
			cu.id AS currency_id,
			cu. CODE AS currency_code,
			cu.
		VALUE
			AS currency_value,
			co.exchange_rate,
			sqe.condition_id,
			cond. CODE AS condition_code,
			cond.
		VALUE
			AS condition_value,
			sqe.certification_id,
			cert. CODE AS certification_code,
			cert.
		VALUE
			AS certification_value,
			CONCAT(
				sqe.part_number,
				'
		',
				sqe.description,
				'
				',
				cert. CODE
			) AS detail,
			IFNULL(vcee.export_amount, 0) AS export_amount,
			IFNULL(vcos.storage_amount, 0) AS storage_amount,
			sqe.part_number AS quote_part_number,
			sqe.alter_part_number,
			e.part_number_code,
			sqe.unit AS quote_unit,
			cqe.amount AS quote_amount,
			sqe.description AS quote_description,
			sqe.location,
			cqe.remark AS quote_remark,
			sqe.price AS supplier_quote_price,
			cqe.price AS client_quote_price,
			coe.amount AS client_order_amount,
			coe.price AS client_order_price,
			coe.lead_time AS client_order_lead_time,
			coe.deadline AS client_order_deadline,
			cq.quote_number,
			coe.update_timestamp,
			cie.ITEM,
			cie.client_inquiry_id,
			cie.CSN,
			s.`CODE` AS supplier_code,
			cie.id client_inquiry_element_id,
			swoe.supplier_quote_element_id weather_supplier_quote_element_id,
			swoe.price weather_price,swoe.amount weather_amount
			
		FROM
			client_order_element coe
		INNER JOIN client_order co ON (coe.client_order_id = co.id)
		INNER JOIN supplier_weather_order_element swoe on swoe.CLIENT_ORDER_ELEMENT_ID=coe.ID
		INNER JOIN client_quote cq ON (co.client_quote_id = cq.id)
		INNER JOIN client_quote_element cqe ON (
			coe.client_quote_element_id = cqe.id
		)
		LEFT JOIN client_inquiry_element cie ON (
			cie.id = cqe.CLIENT_INQUIRY_ELEMENT_ID
		)
		INNER JOIN supplier_quote_element sqe ON (
			cqe.supplier_quote_element_id = sqe.id
		)
		LEFT JOIN supplier_quote sq on (
			sq.ID = sqe.SUPPLIER_QUOTE_ID
		)
		LEFT JOIN supplier_inquiry si ON (
			si.ID = sq.SUPPLIER_INQUIRY_ID
		)
		LEFT JOIN supplier s on (s.ID = si.SUPPLIER_ID)
		INNER JOIN element e ON (sqe.element_id = e.id)
		INNER JOIN system_code cond ON (sqe.condition_id = cond.id)
		INNER JOIN system_code cert ON (
			sqe.certification_id = cert.id
		)
		INNER JOIN system_code cu ON (cq.currency_id = cu.id)
		LEFT JOIN v_client_export_element vcee ON (
			vcee.client_order_element_id = coe.id
		)
		LEFT JOIN v_client_order_storage vcos ON (
			vcos.client_order_element_id = coe.id
		)
		WHERE
			swoe.id in (${ids})
  		
  </select>
  
  
   <select id="CompletedSupplierWeatherOrderData" parameterType="com.naswork.model.ClientQuote" resultMap="clientOrderElementVo">
  		SELECT
			cwoe.id,IFNULL(cwoe.bank_charges,0) bank_charges,
			cwoe.client_weather_order_id,IFNULL(cqe.bank_charges,0) cqe_bank_charges,
			cwoe.client_quote_element_id,
			cqe.supplier_quote_element_id,
			cwo.order_date,
			cwo.source_number AS source_order_number,
			cwo.order_number,
			cwo.currency_id co_currency_id,
			cwo.terms,
			cu.id AS currency_id,
			cu. CODE AS currency_code,
			cu.VALUE AS currency_value,sq.currency_id sq_currency_id,
			cwo.exchange_rate,sq.exchange_rate supplier_quote_exchange_rate,
			sqe.condition_id,cq.exchange_rate client_quote_exchange_rate,
			cond. CODE AS condition_code,
			cond.VALUE AS condition_value,
			sqe.certification_id,
			cert. CODE AS certification_code,
			cert.VALUE AS certification_value,
			sqe.part_number AS quote_part_number,
			sqe.alter_part_number,
			e.part_number_code,
			sqe.unit AS quote_unit,
			cqe.amount AS quote_amount,
			sqe.description AS quote_description,
			sqe.location,
			cqe.remark AS quote_remark,
			sqe.price AS supplier_quote_price,
			cqe.price AS client_quote_price,
			cwoe.amount AS client_order_amount,
			cwoe.price AS client_order_price,
			cwoe.lead_time AS client_order_lead_time,
			cwoe.deadline AS client_order_deadline,
			cq.quote_number,
			cwoe.update_timestamp,
			cie.ITEM,IFNULL(sqe.freight,0) freight,
			cie.client_inquiry_id,IFNULL(cqe.fixed_cost,0) cqe_fixed_cost,
			cie.CSN,IFNULL(cwoe.fixed_cost,0) fixed_cost,IFNULL(s.COUNTER_FEE,0) COUNTER_FEE,
			s.`CODE` AS supplier_code,oa.occupy,oa.price storage_price,oa.type storage_type,
			cie.id client_inquiry_element_id,oa.supplier_quote_element_id oa_supplier_quote_element_id,oa.import_package_element_id oa_import_package_element_id,
			ci.air_type_id,at.code air_type_code,swoe.remark weather_order_remark,swoe.amount weather_order_amount,oa.amount storage_amount,oa.supplier_order_element_id oa_supplier_order_element_id,
			cie.part_number,cie.description,cie.unit,swoe.supplier_quote_element_id weather_order_supplier_quote_element_id,swoe.price weather_order_price
		FROM
		client_weather_order_element cwoe
		INNER JOIN order_approval oa ON (oa.client_order_element_id=cwoe.id)
		INNER JOIN client_weather_order cwo ON (cwoe.client_weather_order_id = cwo.id)
	    LEFT JOIN  supplier_weather_order_element swoe on oa.supplier_weather_order_element_id=swoe.id
		INNER JOIN client_quote cq ON (cwo.client_quote_id = cq.id)
		INNER JOIN client_quote_element cqe ON (
			cwoe.client_quote_element_id = cqe.id
		)
		INNER JOIN client_inquiry_element cie ON (
			cie.id = cqe.CLIENT_INQUIRY_ELEMENT_ID
		)
		INNER JOIN client_inquiry ci ON (ci.id=cie.client_inquiry_id)
		INNER JOIN system_code at ON (ci.air_type_id = at.id)
		INNER JOIN supplier_quote_element sqe ON (
			cqe.supplier_quote_element_id = sqe.id
		)
		LEFT JOIN supplier_quote sq on (
			sq.ID = sqe.SUPPLIER_QUOTE_ID
		)
		LEFT JOIN supplier_inquiry si ON (
			si.ID = sq.SUPPLIER_INQUIRY_ID
		)
		LEFT JOIN supplier s on (s.ID = si.SUPPLIER_ID)
		INNER JOIN element e ON (sqe.element_id = e.id)
		INNER JOIN system_code cond ON (sqe.condition_id = cond.id)
		INNER JOIN system_code cert ON (
			sqe.certification_id = cert.id
		)
		INNER JOIN system_code cu ON (cq.currency_id = cu.id)
		
		WHERE
			cwo.id = #{client_order_id}
  		order by cie.item
  </select>
  
  <!-- 供应商列表 -->
  <select id="SupplierListPage" parameterType="page" resultMap="supplierListVo">
	SELECT DISTINCT
		sqe.id,
		si.client_inquiry_id,
		sqe.supplier_quote_id,
		sq.quote_date,
		ci.quote_number AS client_inquiry_quote_number,
		s.id AS supplier_id,
		s. CODE AS supplier_code,
		s. NAME AS supplier_name,
		sq.currency_id,
		cu. CODE AS currency_code,
		cu.
	VALUE
		AS currency_value,
		sq.exchange_rate,
		si.quote_number AS supplier_inquiry_quote_number,
		sqe.supplier_inquiry_element_id,
		sie.client_inquiry_element_id,
		cie.item,
		sqe.lead_time,
		sqe.price,
		sqe.price * sq.exchange_rate AS base_price,
		sqe.condition_id,
		cond. CODE AS condition_code,
		cond.
	VALUE
		AS condition_value,
		sqe.certification_id,
		cert. CODE AS certification_code,
		cert.
	VALUE
		AS certification_value,
		sqe.supplier_quote_status_id,
		sqs. CODE AS supplier_quote_status_code,
		sqs.
	VALUE
		AS supplier_quote_status_value,
		cie.element_id AS inquiry_element_id,
		sqe.element_id AS quote_element_id,
		cie.part_number AS inquiry_part_number,
		sqe.part_number AS quote_part_number,
		cie.unit AS inquiry_unit,
		sqe.unit AS quote_unit,
		cie.amount AS inquiry_amount,
		sqe.amount AS quote_amount,
		cie.description AS inquiry_description,
		sqe.description AS quote_description,
		cie.remark AS inquiry_remark,
		sqe.remark AS quote_remark,
		<!-- cq.quote_date AS client_quote_date,
		cqe.price AS client_quote_price,
		cq.exchange_rate AS client_quote_exchange_rate, -->
		sqe.update_timestamp,sqe.warranty,sqe.serial_number,sqe.trace,sqe.tag_date,sqe.tag_src
	FROM
		supplier_quote_element sqe
	INNER JOIN supplier_quote sq ON (
		sqe.supplier_quote_id = sq.id
	)
	INNER JOIN supplier_inquiry si ON (
		sq.supplier_inquiry_id = si.id
	)
	INNER JOIN client_inquiry ci ON (si.client_inquiry_id = ci.id)
	INNER JOIN supplier s ON (si.supplier_id = s.id)
	INNER JOIN supplier_inquiry_element sie ON (
		sqe.supplier_inquiry_element_id = sie.id
	)
	INNER JOIN client_inquiry_element cie ON (
		sie.client_inquiry_element_id = cie.id
	)
	LEFT JOIN client_inquiry_element ciie ON (ciie.ID = cie.MAIN_ID)
	INNER JOIN system_code cu ON (sq.currency_id = cu.id)
	INNER JOIN system_code cond ON (sqe.condition_id = cond.id)
	INNER JOIN system_code cert ON (
		sqe.certification_id = cert.id
	)
	INNER JOIN system_code sqs ON (
		sqe.supplier_quote_status_id = sqs.id
	)
	LEFT JOIN client_quote_element cqe ON (
		cqe.client_inquiry_element_id = cie.id
	)
	LEFT JOIN client_quote cq ON (
		cq.client_inquiry_id = ci.id
		AND cqe.client_quote_id = cq.id
	)
	WHERE
		sqe.supplier_quote_status_id = '70'
	AND sq.quote_status_id = 90
	AND (
	sqe.short_part_number = #{shortPartNumber}
	<!-- cie.short_part_number = #{shortPartNumber} -->
	<!-- OR cie.element_id = #{cieElementId}
	OR ciie.element_id = #{ciieElementId} -->
	)
	ORDER BY
	sq.quote_date DESC
  </select>
  
  <!-- 供应商列表 -->
  <select id="SupplierListData" parameterType="Integer" resultMap="supplierListVo">
	SELECT DISTINCT
	sqe.id,
	si.client_inquiry_id,
	sqe.supplier_quote_id,
	sq.quote_date,
	ci.quote_number AS client_inquiry_quote_number,
	s.id AS supplier_id,
	s. CODE AS supplier_code,
	s. NAME AS supplier_name,
	sq.currency_id,
	cu. CODE AS currency_code,
	cu.
	VALUE
	AS currency_value,
	sq.exchange_rate,
	si.quote_number AS supplier_inquiry_quote_number,
	sqe.supplier_inquiry_element_id,
	sie.client_inquiry_element_id,
	cie.item,
	sqe.lead_time,
	sqe.price,
	sqe.price * sq.exchange_rate AS base_price,
	sqe.condition_id,
	cond. CODE AS condition_code,
	cond.
	VALUE
	AS condition_value,
	sqe.certification_id,
	cert. CODE AS certification_code,
	cert.
	VALUE
	AS certification_value,
	sqe.supplier_quote_status_id,
	sqs. CODE AS supplier_quote_status_code,
	sqs.
	VALUE
	AS supplier_quote_status_value,
	cie.element_id AS inquiry_element_id,
	sqe.element_id AS quote_element_id,
	cie.part_number AS inquiry_part_number,
	sqe.part_number AS quote_part_number,
	cie.unit AS inquiry_unit,
	sqe.unit AS quote_unit,
	cie.amount AS inquiry_amount,
	sqe.amount AS quote_amount,
	cie.description AS inquiry_description,
	sqe.description AS quote_description,
	cie.remark AS inquiry_remark,
	sqe.remark AS quote_remark,
	cq.quote_date AS client_quote_date,
	cqe.price AS client_quote_price,
	cq.exchange_rate AS client_quote_exchange_rate,
	
	sqe.update_timestamp
	FROM
			supplier_quote_element sqe
		INNER JOIN supplier_quote sq ON (
			sqe.supplier_quote_id = sq.id
		)
		INNER JOIN supplier_inquiry si ON (
			sq.supplier_inquiry_id = si.id
		)
		INNER JOIN client_inquiry ci ON (si.client_inquiry_id = ci.id)
		INNER JOIN client c on c.ID=ci.CLIENT_ID
		INNER JOIN supplier s ON (si.supplier_id = s.id)
		INNER JOIN supplier_inquiry_element sie ON (
			sqe.supplier_inquiry_element_id = sie.id
		)
		INNER JOIN client_inquiry_element cie ON (
			sie.client_inquiry_element_id = cie.id
		)
		LEFT JOIN client_inquiry_element ciie ON (
			ciie.ID = cie.MAIN_ID
		)
		INNER JOIN element e ON (sqe.element_id = e.id)
		INNER JOIN system_code cu ON (sq.currency_id = cu.id)
		INNER JOIN system_code cond ON (sqe.condition_id = cond.id)
		INNER JOIN system_code cert ON (
			sqe.certification_id = cert.id
		)
		INNER JOIN system_code sqs ON (
			sqe.supplier_quote_status_id = sqs.id
		)
		LEFT JOIN client_quote_element cqe ON (
			cqe.client_inquiry_element_id = cie.id
		)
		LEFT JOIN client_quote cq ON (
			cq.client_inquiry_id = ci.id
			AND cqe.client_quote_id = cq.id
		)
		
	WHERE
	sqe.supplier_quote_status_id ='70'
	AND sq.quote_status_id = 90
	AND (
	sqe.element_id = #{0}
	OR cie.element_id = #{1}
	OR ciie.element_id = #{1}
	) and c.`CODE` not  in (199,197)
	AND  SQ.QUOTE_DATE between DATE_ADD(now(),INTERVAL -12 MONTH) and now()
	ORDER BY
	sq.quote_date DESC
  </select>
  
  <select id="findByElementIds" parameterType="Integer" resultMap="supplierListVo">
	SELECT
	sqe.id,
	si.client_inquiry_id,
	sqe.supplier_quote_id,
	sq.quote_date,
	ci.quote_number AS client_inquiry_quote_number,
	s.id AS supplier_id,
	s. CODE AS supplier_code,
	s. NAME AS supplier_name,
	sq.currency_id,
	cu. CODE AS currency_code,
	cu.
	VALUE
	AS currency_value,
	sq.exchange_rate,
	si.quote_number AS supplier_inquiry_quote_number,
	sqe.supplier_inquiry_element_id,
	sie.client_inquiry_element_id,
	cie.item,
	sqe.lead_time,
	sqe.price,
	sqe.price * sq.exchange_rate AS base_price,
	sqe.condition_id,
	cond. CODE AS condition_code,
	cond.
	VALUE
	AS condition_value,
	sqe.certification_id,
	cert. CODE AS certification_code,
	cert.
	VALUE
	AS certification_value,
	sqe.supplier_quote_status_id,
	sqs. CODE AS supplier_quote_status_code,
	sqs.
	VALUE
	AS supplier_quote_status_value,
	cie.element_id AS inquiry_element_id,
	sqe.element_id AS quote_element_id,
	cie.part_number AS inquiry_part_number,
	sqe.part_number AS quote_part_number,
	cie.unit AS inquiry_unit,
	sqe.unit AS quote_unit,
	cie.amount AS inquiry_amount,
	sqe.amount AS quote_amount,
	cie.description AS inquiry_description,
	sqe.description AS quote_description,
	cie.remark AS inquiry_remark,
	sqe.remark AS quote_remark,
	cq.quote_date AS client_quote_date,
	cqe.price AS client_quote_price,
	cq.exchange_rate AS client_quote_exchange_rate,
	co.id AS client_order_id,
	co.exchange_rate AS client_exchange_rate,
	co.order_date AS client_order_date,
	co.order_number AS client_order_number,
	coe.id AS client_order_element_id,
	coe.price AS client_order_price,
	sqe.update_timestamp
	FROM
			supplier_quote_element sqe
		INNER JOIN supplier_quote sq ON (
			sqe.supplier_quote_id = sq.id
		)
		INNER JOIN supplier_inquiry si ON (
			sq.supplier_inquiry_id = si.id
		)
		INNER JOIN client_inquiry ci ON (si.client_inquiry_id = ci.id)
		INNER JOIN supplier s ON (si.supplier_id = s.id)
		INNER JOIN supplier_inquiry_element sie ON (
			sqe.supplier_inquiry_element_id = sie.id
		)
		INNER JOIN client_inquiry_element cie ON (
			sie.client_inquiry_element_id = cie.id
		)
		INNER JOIN element e ON (sqe.element_id = e.id)
		INNER JOIN system_code cu ON (sq.currency_id = cu.id)
		INNER JOIN system_code cond ON (sqe.condition_id = cond.id)
		INNER JOIN system_code cert ON (
			sqe.certification_id = cert.id
		)
		INNER JOIN system_code sqs ON (
			sqe.supplier_quote_status_id = sqs.id
		)
		LEFT JOIN client_quote_element cqe ON (
			cqe.client_inquiry_element_id = cie.id
		)
		LEFT JOIN client_quote cq ON (
			cq.client_inquiry_id = ci.id
			AND cqe.client_quote_id = cq.id
		)
		LEFT JOIN client_order_element coe ON (
			coe.client_quote_element_id = cqe.id
		)
		LEFT JOIN client_order co ON (
			co.client_quote_id = cq.id
			AND coe.client_order_id = co.id
		)
	WHERE
	sqe.supplier_quote_status_id ='70'
	AND sq.quote_status_id = 90
	AND (
	sqe.element_id =#{0}
	OR cie.element_id =#{1}
	)
	ORDER BY
	sq.quote_date DESC
  </select>
  
   <select id="findByElementIdsAndCoeId" parameterType="Integer" resultMap="supplierListVo">
	SELECT
	sqe.id,
	si.client_inquiry_id,
	sqe.supplier_quote_id,
	sq.quote_date,
	ci.quote_number AS client_inquiry_quote_number,
	s.id AS supplier_id,
	s. CODE AS supplier_code,
	s. NAME AS supplier_name,
	sq.currency_id,
	cu. CODE AS currency_code,
	cu.
	VALUE
	AS currency_value,
	sq.exchange_rate,
	si.quote_number AS supplier_inquiry_quote_number,
	sqe.supplier_inquiry_element_id,
	sie.client_inquiry_element_id,
	cie.item,
	sqe.lead_time,
	sqe.price,
	sqe.price * sq.exchange_rate AS base_price,
	sqe.condition_id,
	cond. CODE AS condition_code,
	cond.
	VALUE
	AS condition_value,
	sqe.certification_id,
	cert. CODE AS certification_code,
	cert.
	VALUE
	AS certification_value,
	sqe.supplier_quote_status_id,
	sqs. CODE AS supplier_quote_status_code,
	sqs.
	VALUE
	AS supplier_quote_status_value,
	cie.element_id AS inquiry_element_id,
	sqe.element_id AS quote_element_id,
	cie.part_number AS inquiry_part_number,
	sqe.part_number AS quote_part_number,
	cie.unit AS inquiry_unit,
	sqe.unit AS quote_unit,
	cie.amount AS inquiry_amount,
	sqe.amount AS quote_amount,
	cie.description AS inquiry_description,
	sqe.description AS quote_description,
	cie.remark AS inquiry_remark,
	sqe.remark AS quote_remark,
	cq.quote_date AS client_quote_date,
	cqe.price AS client_quote_price,
	cq.exchange_rate AS client_quote_exchange_rate,
	co.id AS client_order_id,
	co.exchange_rate AS client_exchange_rate,
	co.order_date AS client_order_date,
	co.order_number AS client_order_number,
	coe.id AS client_order_element_id,
	coe.price AS client_order_price,
	sqe.update_timestamp
	FROM
			supplier_quote_element sqe
		INNER JOIN supplier_quote sq ON (
			sqe.supplier_quote_id = sq.id
		)
		INNER JOIN supplier_inquiry si ON (
			sq.supplier_inquiry_id = si.id
		)
		INNER JOIN client_inquiry ci ON (si.client_inquiry_id = ci.id)
		INNER JOIN supplier s ON (si.supplier_id = s.id)
		INNER JOIN supplier_inquiry_element sie ON (
			sqe.supplier_inquiry_element_id = sie.id
		)
		INNER JOIN client_inquiry_element cie ON (
			sie.client_inquiry_element_id = cie.id
		)
		INNER JOIN element e ON (sqe.element_id = e.id)
		INNER JOIN system_code cu ON (sq.currency_id = cu.id)
		INNER JOIN system_code cond ON (sqe.condition_id = cond.id)
		INNER JOIN system_code cert ON (
			sqe.certification_id = cert.id
		)
		INNER JOIN system_code sqs ON (
			sqe.supplier_quote_status_id = sqs.id
		)
		LEFT JOIN client_quote_element cqe ON (
			cqe.client_inquiry_element_id = cie.id
		)
		LEFT JOIN client_quote cq ON (
			cq.client_inquiry_id = ci.id
			AND cqe.client_quote_id = cq.id
		)
		LEFT JOIN client_order_element coe ON (
			coe.client_quote_element_id = cqe.id
		)
		LEFT JOIN client_order co ON (
			co.client_quote_id = cq.id
			AND coe.client_order_id = co.id
		)
	WHERE
	sqe.supplier_quote_status_id ='70'
	AND sq.quote_status_id = 90
	AND (
	sqe.element_id =#{0}
	OR cie.element_id =#{1}
	)
	and coe.id=#{2}
  </select>
  
  <!-- 获取ElementId -->
  <select id="getElementId" parameterType="Integer" resultType="Integer">
  	select cie.ELEMENT_ID from client_quote_element cqe LEFT JOIN client_inquiry_element cie on cqe.CLIENT_INQUIRY_ELEMENT_ID=cie.ID 
  	where cqe.id=#{clientQuoteElementId}
  </select>
  
  <select id="getSqeElementId" parameterType="Integer" resultType="Integer">
  	select DISTINCT sqe.ELEMENT_ID from client_quote_element cqe 
		LEFT JOIN supplier_quote_element sqe on cqe.SUPPLIER_QUOTE_ELEMENT_ID = sqe.id
		where cqe.id = #{clientQuoteElementId}
  </select>
  
  <!-- 客户订单信息 -->
  <select id="findById" parameterType="Integer" resultMap="clientOrderElementVo">
  		SELECT
			coe.id,
			coe.client_order_id,
			coe.client_quote_element_id,
			cqe.supplier_quote_element_id,
			co.order_date,
			co.source_number AS source_order_number,
			co.order_number,
			co.terms,
			cu.id AS currency_id,
			cu. CODE AS currency_code,
			cu.
		VALUE
			AS currency_value,
			co.exchange_rate,
			sqe.condition_id,
			cond. CODE AS condition_code,
			cond.
		VALUE
			AS condition_value,
			sqe.certification_id,
			cert. CODE AS certification_code,
			cert.
		VALUE
			AS certification_value,
			CONCAT(
				sqe.part_number,
				'
		',
				sqe.description,
				'
				',
				cert. CODE
			) AS detail,
			IFNULL(vcee.export_amount, 0) AS export_amount,
			IFNULL(vcos.storage_amount, 0) AS storage_amount,
			sqe.part_number AS quote_part_number,
			e.part_number_code,
			sqe.unit AS quote_unit,
			cqe.amount AS quote_amount,
			sqe.description AS quote_description,
			cqe.remark AS quote_remark,
			sqe.price AS supplier_quote_price,
			cqe.price AS client_quote_price,
			coe.amount AS client_order_amount,
			coe.price AS client_order_price,
			coe.lead_time AS client_order_lead_time,
			coe.deadline AS client_order_deadline,
			coe.update_timestamp,
			SUM(soe.AMOUNT) as supplier_order_amount
		FROM
			client_order_element coe
		INNER JOIN client_order co ON (coe.client_order_id = co.id)
		INNER JOIN client_quote cq ON (co.client_quote_id = cq.id)
		INNER JOIN client_quote_element cqe ON (
			coe.client_quote_element_id = cqe.id
		)
		INNER JOIN supplier_quote_element sqe ON (
			cqe.supplier_quote_element_id = sqe.id
		)
		INNER JOIN element e ON (sqe.element_id = e.id)
		INNER JOIN system_code cond ON (sqe.condition_id = cond.id)
		INNER JOIN system_code cert ON (
			sqe.certification_id = cert.id
		)
		INNER JOIN system_code cu ON (cq.currency_id = cu.id)
		LEFT JOIN v_client_export_element vcee ON (
			vcee.client_order_element_id = coe.id
		)
		LEFT JOIN v_client_order_storage vcos ON (
			vcos.client_order_element_id = coe.id
		)
		LEFT JOIN supplier_order_element soe ON (
			soe.CLIENT_ORDER_ELEMENT_ID = coe.ID
		)
		WHERE
			coe.id =#{id}
		group by coe.id
  		
  </select>
  
   <select id="findStorageByPn" parameterType="String" resultMap="BaseResultMap">
		   SELECT
			
				(
					`ipe`.`AMOUNT` - ifnull(`epe`.`export_amount`, 0)
				)
			 AS `storage_amount`,soe.CLIENT_ORDER_ELEMENT_ID
		FROM
			(
				`import_package_element` `ipe`
				LEFT JOIN `v_export_package_element` `epe` ON (
					(
						`epe`.`import_package_element_id` = `ipe`.`ID`
					)
				)
				LEFT JOIN supplier_import_element sie ON (
					sie.IMPORT_PACKAGE_ELEMENT_ID = ipe.ID
				)
				LEFT JOIN supplier_order_element soe ON (
					soe.ID = sie.SUPPLIER_ORDER_ELEMENT_ID
				)
				LEFT JOIN supplier_quote_element sqe ON (
					sqe.ID = soe.SUPPLIER_QUOTE_ELEMENT_ID
				)
				LEFT JOIN supplier_order so ON (
					soe.supplier_order_id = so.id
				)
				LEFT JOIN client_order co ON (so.client_order_id = co.id)
				LEFT JOIN client_quote cq ON (co.client_quote_id = cq.id)
				LEFT JOIN client_inquiry ci ON (cq.client_inquiry_id = ci.id)
				LEFT JOIN client c ON (ci.client_id = c.id)
			)
		WHERE
			(
				`ipe`.`AMOUNT` != ifnull(`epe`.`export_amount`, 0)
			)
		AND sqe.PART_NUMBER = #{partNumber}
		AND c.`CODE` = 199 AND ipe.LOCATION NOT LIKE '%YC%'
		ORDER BY ipe.UPDATE_TIMESTAMP asc
   </select>
  
   <select id="findByClientOrderElementId" parameterType="Integer" resultMap="clientOrderElementVo">
  SELECT so.SUPPLIER_ID,ip.IMPORT_DATE,ip.CURRENCY_ID,ip.EXCHANGE_RATE,ipe.id import_package_element_id,
			coe.id,ipe.ELEMENT_ID,ipe.PART_NUMBER,ipe.DESCRIPTION,ipe.UNIT,ipe.PRICE,ipe.CERTIFICATION_ID,
			coe.client_order_id,ipe.CONDITION_ID,ipe.REMARK,ipe.SERIAL_NUMBER,ipe.CERTIFICATION_DATE,
			coe.client_quote_element_id,ipe.LOCATION,ipe.BATCH_NUMBER,soe.ID soe_id,
			cqe.supplier_quote_element_id,cqe.CLIENT_INQUIRY_ELEMENT_ID,  
			co.order_date,cqe.id client_quote_element_id,ip.IMPORT_NUMBER,
			sqe.id supplier_quote_element_id,
			co.source_number AS source_order_number,
			co.order_number, IFNULL(ipe.price, 0) * ip.EXCHANGE_RATE AS storage_price,
			co.terms,ipe.AMOUNT import_package_amount,
			IFNULL(vcee.export_amount, 0) AS export_amount,
				IFNULL(vs.storage_amount, 0) AS storage_amount,
			sqe.part_number AS quote_part_number,
			e.part_number_code,
			sqe.unit AS quote_unit,
			cqe.amount AS quote_amount,
			sqe.description AS quote_description,
			cqe.remark AS quote_remark,
			sqe.price AS supplier_quote_price,
			cqe.price AS client_quote_price,
			coe.amount AS client_order_amount,
			coe.price AS client_order_price,
			coe.lead_time AS client_order_lead_time,
			coe.deadline AS client_order_deadline,
			coe.update_timestamp
		FROM
			client_order_element coe
		INNER JOIN client_order co ON (coe.client_order_id = co.id)
		INNER JOIN client_quote cq ON (co.client_quote_id = cq.id)
		INNER JOIN client_quote_element cqe ON (
			coe.client_quote_element_id = cqe.id
		)
		INNER JOIN supplier_quote_element sqe ON (
			cqe.supplier_quote_element_id = sqe.id
		)
		INNER JOIN element e ON (sqe.element_id = e.id)
		INNER JOIN system_code cond ON (sqe.condition_id = cond.id)
		INNER JOIN system_code cert ON (
			sqe.certification_id = cert.id
		)
		INNER JOIN system_code cu ON (cq.currency_id = cu.id)
		LEFT JOIN v_client_export_element vcee ON (
			vcee.client_order_element_id = coe.id
		)
		INNER JOIN supplier_order_element soe on (coe.id=soe.CLIENT_ORDER_ELEMENT_ID)
		INNER JOIN supplier_order so on (so.ID=soe.SUPPLIER_ORDER_ID)
		INNER JOIN supplier_import_element sie on (sie.SUPPLIER_ORDER_ELEMENT_ID=soe.ID)
		INNER JOIN import_package_element ipe on (ipe.ID=sie.IMPORT_PACKAGE_ELEMENT_ID)
		INNER JOIN import_package ip on (ip.ID=ipe.IMPORT_PACKAGE_ID)
		INNER JOIN v_storage vs on vs.id=ipe.ID 
		WHERE
		coe.id=#{clientOrderElementId} and so.ORDER_STATUS_ID=63
		</select>
  

  <!-- <select id="SupplierOrderElementPage" parameterType="page" resultMap="addSupplierOrderElementVo">
  	SELECT
		soe.id,
		soe.lead_time,
		soe.deadline,
		soe.supplier_order_id,
		soe.client_order_element_id,
		soe.supplier_quote_element_id,
		sw.value as ship_way_value,
		destination.`VALUE` AS destination,
		so.order_date,
		so.terms,
		so.remark,
		si.quote_number AS supplier_quote_number,
		c.id AS client_id,
		c. CODE AS client_code,
		c. NAME AS client_name,
		so.supplier_id,
		s. CODE AS supplier_code,
		s. NAME AS supplier_name,
		cu.id AS currency_id,
		cu. CODE AS currency_code,
		cu.
	VALUE
		AS currency_value,
		co.exchange_rate AS client_exchange_rate,
		so.exchange_rate,
		co.order_number AS client_order_number,
		so.order_number AS supplier_order_number,
		sqe.condition_id,
		cond. CODE AS condition_code,
		cond.
	VALUE
		AS condition_value,
		sqe.certification_id,
		cert. CODE AS certification_code,
		cert.
	VALUE
		AS certification_value,
		CONCAT(
			sqe.part_number,
			'
	',
			sqe.description,
			'
			',
			cert. CODE
		) AS detail,
		sqe.element_id,
		sqe.part_number AS quote_part_number,
		sqe.alter_part_number,
		e.part_number_code, 
		sqe.unit AS quote_unit,
		cqe.amount AS quote_amount,
		sqe.description AS quote_description,
		sqe.location,
		cqe.remark AS quote_remark,
		sqe.price AS supplier_quote_price,
		cqe.price AS client_quote_price,
		coe.amount AS client_order_amount,
		coe.price AS client_order_price,
		coe.lead_time AS client_order_lead_time,
		coe.deadline AS client_order_deadline,
		soe.amount AS supplier_order_amount,
		soe.price AS supplier_order_price,
		soe.amount * soe.price AS supplier_order_total_price,
		IFNULL(vsie.import_amount, 0) AS import_amount,
		soe.lead_time AS supplier_order_lead_time,
		soe.deadline AS supplier_order_deadline,
		soe.update_timestamp,
		soe.awb
	FROM
		supplier_order_element soe
	LEFT JOIN v_supplier_import_element vsie ON (
		soe.id = vsie.supplier_order_element_id
	)
	INNER JOIN supplier_order so ON (
		soe.supplier_order_id = so.id
	)
	INNER JOIN client_order co ON (so.client_order_id = co.id)
	INNER JOIN client_quote cq ON (co.client_quote_id = cq.id)
	INNER JOIN client_inquiry ci ON (cq.client_inquiry_id = ci.id)
	INNER JOIN client c ON (ci.client_id = c.id)
	INNER JOIN supplier s ON (so.supplier_id = s.id)
	INNER JOIN client_order_element coe ON (
		soe.client_order_element_id = coe.id
	)
	INNER JOIN client_quote_element cqe ON (
		coe.client_quote_element_id = cqe.id
	)
	INNER JOIN supplier_quote_element sqe ON (
		soe.supplier_quote_element_id = sqe.id
	)
	INNER JOIN supplier_quote sq ON (
		sqe.supplier_quote_id = sq.id
	)
	INNER JOIN supplier_inquiry si ON (
		sq.supplier_inquiry_id = si.id
	)
	INNER JOIN element e ON (sqe.element_id = e.id)
	INNER JOIN system_code cu ON (so.currency_id = cu.id)
	LEFT JOIN system_code sw ON (soe.SHIP_WAY_ID = sw.id)
	INNER JOIN system_code cond ON (sqe.condition_id = cond.id)
	INNER JOIN system_code cert ON (
		sqe.certification_id = cert.id
	)
	INNER JOIN system_code bt ON (ci.biz_type_id = bt.id)
	INNER JOIN system_code AT ON (ci.air_type_id = AT .id)
	LEFT JOIN system_code destination ON (destination.ID = soe.DESTINATION)
	WHERE
		so.id =#{id}
  </select> -->
  
  <select id="SupplierOrderElementPage" parameterType="page" resultMap="addSupplierOrderElementVo">
  	SELECT 
		soe.id,
		soe.lead_time,
		soe.deadline,
		soe.supplier_order_id,
		soe.client_order_element_id,
		soe.supplier_quote_element_id,
		coe.ELEMENT_STATUS_ID AS order_status_id,
		soe.invoice_date,
		soe.ship_lead_time,
		sta.value order_status_value,
		IF(sw.id IS NOT NULL,sw.id,mm.ID) as ship_way_id,
		IF(sw.value IS NOT NULL,sw.value,mm.`CODE`) as ship_way_value,
		<!-- destination.ID AS destination_id,
		destination.`VALUE` AS destination, -->
		IF(destination.id IS NOT NULL,destination.id,mmd.ID) as destination_id,
		IF(destination.value IS NOT NULL,destination.value,mmd.`CODE`) as destination,
		so.order_date,
		so.terms,
		so.remark,
		si.quote_number AS supplier_quote_number,
		c.id AS client_id,
		c. CODE AS client_code,
		c. NAME AS client_name,
		so.supplier_id,
		s. CODE AS supplier_code,
		s. NAME AS supplier_name,
		cu.id AS currency_id,
		cu. CODE AS currency_code,
		cu.
	VALUE
		AS currency_value,
		co.exchange_rate AS client_exchange_rate,
		so.exchange_rate,
		co.order_number AS client_order_number,
		so.order_number AS supplier_order_number,
		sqe.condition_id,
		cond. CODE AS condition_code,
		cond.
	VALUE
		AS condition_value,
		sqe.certification_id,
		cert. CODE AS certification_code,
		cert.
	VALUE
		AS certification_value,
		CONCAT(
			sqe.part_number,
			'
	',
			sqe.description,
			'
			',
			cert. CODE
		) AS detail,
		sqe.element_id,
		sqe.part_number AS quote_part_number,
		sqe.alter_part_number,
		e.part_number_code, 
		IF(soe.unit IS NOT NULL,soe.unit,sqe.unit) AS quote_unit,
		cqe.amount AS quote_amount,
		sqe.description AS quote_description,
		sqe.location,
		cqe.remark AS quote_remark,
		sqe.price AS supplier_quote_price,
		cqe.price AS client_quote_price,
		coe.amount AS client_order_amount,
		coe.price AS client_order_price,
		coe.lead_time AS client_order_lead_time,
		coe.deadline AS client_order_deadline,
		soe.amount AS supplier_order_amount,
		soe.price AS supplier_order_price,
		soe.amount * soe.price AS supplier_order_total_price,
		soe.lead_time AS supplier_order_lead_time,
		soe.deadline AS supplier_order_deadline,
		soe.update_timestamp,
		soe.awb,
		tax.`VALUE` AS tax_return_value,
		soe.BANK_COST
	FROM
		supplier_order_element soe
	LEFT JOIN v_supplier_import_element vsie ON (
		soe.id = vsie.supplier_order_element_id
	)
	INNER JOIN supplier_order so ON (
		soe.supplier_order_id = so.id
	)
	INNER JOIN client_order co ON (so.client_order_id = co.id)
	INNER JOIN client_quote cq ON (co.client_quote_id = cq.id)
	INNER JOIN client_inquiry ci ON (cq.client_inquiry_id = ci.id)
	INNER JOIN client c ON (ci.client_id = c.id)
	INNER JOIN supplier s ON (so.supplier_id = s.id)
	INNER JOIN client_order_element coe ON (
		soe.client_order_element_id = coe.id
	)
	INNER JOIN client_quote_element cqe ON (
		coe.client_quote_element_id = cqe.id
	)
	INNER JOIN client_inquiry_element cie ON (
		cie.ID = cqe.CLIENT_INQUIRY_ELEMENT_ID
	)
	LEFT JOIN system_code sta ON (
		soe.ELEMENT_STATUS_ID = sta.ID
	)
	INNER JOIN supplier_quote_element sqe ON (
		soe.supplier_quote_element_id = sqe.id
	)
	INNER JOIN supplier_quote sq ON (
		sqe.supplier_quote_id = sq.id
	)
	INNER JOIN supplier_inquiry si ON (
		sq.supplier_inquiry_id = si.id
	)
	INNER JOIN element e ON (sqe.element_id = e.id)
	INNER JOIN system_code cu ON (so.currency_id = cu.id)
	LEFT JOIN system_code sw ON (soe.SHIP_WAY_ID = sw.id and sw.TYPE = 'LOGISTICS_WAY')
	LEFT JOIN mpi_message mm ON (mm.ID = soe.SHIP_WAY_ID)
	INNER JOIN system_code cond ON (sqe.condition_id = cond.id)
	INNER JOIN system_code cert ON (
		sqe.certification_id = cert.id
	)
	INNER JOIN system_code os ON (soe.order_status_id = os.id)
	INNER JOIN system_code bt ON (ci.biz_type_id = bt.id)
	INNER JOIN system_code AT ON (ci.air_type_id = AT .id)
	LEFT JOIN system_code destination ON (destination.ID = soe.DESTINATION and destination.TYPE = 'STORE_LOCATION')
	LEFT JOIN mpi_message mmd ON (mmd.ID = soe.DESTINATION)
	LEFT JOIN supplier_import_element sie ON sie.SUPPLIER_ORDER_ELEMENT_ID = soe.ID
	LEFT JOIN import_package_element ipe ON ipe.ID = sie.IMPORT_PACKAGE_ELEMENT_ID
	LEFT JOIN import_package ip ON ip.id = ipe.IMPORT_PACKAGE_ID
	LEFT JOIN system_code tax ON tax.ID = s.TAX_REIMBURSEMENT_ID
	WHERE
		so.id =#{id}
	GROUP BY soe.ID
	ORDER BY soe.item
  </select>
  
  <select id="SupplierOrderElement" parameterType="Integer" resultMap="addSupplierOrderElementVo">
  	SELECT
		soe.id,
		soe.lead_time,
		soe.deadline,
		soe.supplier_order_id,
		soe.client_order_element_id,
		soe.supplier_quote_element_id,
		so.order_date,
		so.terms,
		so.remark,
		si.quote_number AS supplier_quote_number,
		c.id AS client_id,
		c. CODE AS client_code,
		c. NAME AS client_name,
		so.supplier_id,
		s. CODE AS supplier_code,
		s. NAME AS supplier_name,
		cu.id AS currency_id,
		cu. CODE AS currency_code,
		cu.
	VALUE
		AS currency_value,
		co.exchange_rate AS client_exchange_rate,
		so.exchange_rate,
		co.order_number AS client_order_number,
		so.order_number AS supplier_order_number,
		sqe.condition_id,
		cond. CODE AS condition_code,
		cond.
	VALUE
		AS condition_value,
		sqe.certification_id,
		cert. CODE AS certification_code,
		cert.
	VALUE
		AS certification_value,
		CONCAT(
			sqe.part_number,
			'\r\n',
			sqe.description,
			'\r\n',
			cert. CODE
		) AS detail,
		sqe.element_id,
		sqe.part_number AS quote_part_number,
		sqe.alter_part_number,
		e.part_number_code, 
		sqe.unit AS quote_unit,
		cqe.amount AS quote_amount,
		sqe.description AS quote_description,
		cqe.remark AS quote_remark,
		sqe.price AS supplier_quote_price,
		cqe.price AS client_quote_price,
		coe.amount AS client_order_amount,
		coe.price AS client_order_price,
		coe.lead_time AS client_order_lead_time,
		coe.deadline AS client_order_deadline,
		soe.amount AS supplier_order_amount,
		soe.price AS supplier_order_price,
		soe.amount * soe.price AS supplier_order_total_price,
		IFNULL(vsie.import_amount, 0) AS import_amount,
		soe.lead_time AS supplier_order_lead_time,
		soe.deadline AS supplier_order_deadline,
		soe.update_timestamp,
		soe.item
	FROM
		supplier_order_element soe
	LEFT JOIN v_supplier_import_element vsie ON (
		soe.id = vsie.supplier_order_element_id
	)
	INNER JOIN supplier_order so ON (
		soe.supplier_order_id = so.id
	)
	INNER JOIN client_order co ON (so.client_order_id = co.id)
	INNER JOIN client_quote cq ON (co.client_quote_id = cq.id)
	INNER JOIN client_inquiry ci ON (cq.client_inquiry_id = ci.id)
	INNER JOIN client c ON (ci.client_id = c.id)
	INNER JOIN supplier s ON (so.supplier_id = s.id)
	INNER JOIN client_order_element coe ON (
		soe.client_order_element_id = coe.id
	)
	INNER JOIN client_quote_element cqe ON (
		coe.client_quote_element_id = cqe.id
	)
	INNER JOIN supplier_quote_element sqe ON (
		soe.supplier_quote_element_id = sqe.id
	)
	INNER JOIN supplier_quote sq ON (
		sqe.supplier_quote_id = sq.id
	)
	INNER JOIN supplier_inquiry si ON (
		sq.supplier_inquiry_id = si.id
	)
	INNER JOIN element e ON (sqe.element_id = e.id)
	INNER JOIN system_code cu ON (so.currency_id = cu.id)
	INNER JOIN system_code cond ON (sqe.condition_id = cond.id)
	INNER JOIN system_code cert ON (
		sqe.certification_id = cert.id
	)
	INNER JOIN system_code bt ON (ci.biz_type_id = bt.id)
	INNER JOIN system_code AT ON (ci.air_type_id = AT .id)
	WHERE
		so.id =#{id}
		and soe.order_status_id=60
	ORDER BY soe.item
  </select>
  
  <!-- 根据ID查询 -->
  <select id="findByElementId" parameterType="Integer" resultMap="addSupplierOrderElementVo">
  	SELECT
		soe.id,
		soe.lead_time,
		soe.deadline,
		soe.supplier_order_id,
		soe.client_order_element_id,
		soe.supplier_quote_element_id,
		so.order_date,
		so.terms,
		so.remark,
		si.quote_number AS supplier_quote_number,
		c.id AS client_id,
		c. CODE AS client_code,
		c. NAME AS client_name,
		so.supplier_id,
		s. CODE AS supplier_code,
		s. NAME AS supplier_name,
		cu.id AS currency_id,
		cu. CODE AS currency_code,
		cu.
	VALUE
		AS currency_value,
		co.exchange_rate AS client_exchange_rate,
		so.exchange_rate,so.CURRENCY_ID,
		co.order_number AS client_order_number,
		so.order_number AS supplier_order_number,
		sqe.condition_id,
		cond. CODE AS condition_code,
		cond.
	VALUE
		AS condition_value,
		sqe.certification_id,
		cert. CODE AS certification_code,
		cert.
	VALUE
		AS certification_value,
		CONCAT(
			sqe.part_number,
			'
	',
			sqe.description,
			'
			',
			cert. CODE
		) AS detail,
		sqe.element_id,
		sqe.part_number AS quote_part_number,
		e.part_number_code,
		sqe.unit AS quote_unit,
		cqe.amount AS quote_amount,
		sqe.description AS quote_description,
		cqe.remark AS quote_remark,
		sqe.price AS supplier_quote_price,
		cqe.price AS client_quote_price,
		cie.ITEM,
		coe.amount AS client_order_amount,
		coe.price AS client_order_price,
		coe.lead_time AS client_order_lead_time,
		coe.deadline AS client_order_deadline,
		soe.amount AS supplier_order_amount,
		soe.price AS supplier_order_price,
		soe.amount * soe.price AS supplier_order_total_price,
		IFNULL(vsie.import_amount, 0) AS import_amount,
		soe.lead_time AS supplier_order_lead_time,
		soe.deadline AS supplier_order_deadline,
		soe.update_timestamp
	FROM
		supplier_order_element soe
	LEFT JOIN v_supplier_import_element vsie ON (
		soe.id = vsie.supplier_order_element_id
	)
	INNER JOIN supplier_order so ON (
		soe.supplier_order_id = so.id
	)
	INNER JOIN client_order co ON (so.client_order_id = co.id)
	INNER JOIN client_quote cq ON (co.client_quote_id = cq.id)
	INNER JOIN client_inquiry ci ON (cq.client_inquiry_id = ci.id)
	INNER JOIN client c ON (ci.client_id = c.id)
	INNER JOIN supplier s ON (so.supplier_id = s.id)
	INNER JOIN client_order_element coe ON (
		soe.client_order_element_id = coe.id
	)
	INNER JOIN client_quote_element cqe ON (
		coe.client_quote_element_id = cqe.id
	)
	LEFT JOIN client_inquiry_element cie ON (
		cie.ID=cqe.CLIENT_INQUIRY_ELEMENT_ID
	)
	INNER JOIN supplier_quote_element sqe ON (
		soe.supplier_quote_element_id = sqe.id
	)
	INNER JOIN supplier_quote sq ON (
		sqe.supplier_quote_id = sq.id
	)
	INNER JOIN supplier_inquiry si ON (
		sq.supplier_inquiry_id = si.id
	)
	INNER JOIN element e ON (sqe.element_id = e.id)
	INNER JOIN system_code cu ON (so.currency_id = cu.id)
	INNER JOIN system_code cond ON (sqe.condition_id = cond.id)
	INNER JOIN system_code cert ON (
		sqe.certification_id = cert.id
	)
	INNER JOIN system_code bt ON (ci.biz_type_id = bt.id)
	INNER JOIN system_code AT ON (ci.air_type_id = AT .id)
	WHERE
		soe.id = #{id}
  </select>

  
  <!-- 未完成工作 -->
  <select id="unFinishWorkPage" parameterType="page" resultMap="addSupplierOrderElementVo">
  	SELECT
		soe.id,
		soe.lead_time,
		soe.deadline,
		soe.supplier_order_id,
		soe.client_order_element_id,
		soe.supplier_quote_element_id,
		so.order_date,
		so.terms,
		so.remark,
		si.quote_number AS supplier_quote_number,
		c.id AS client_id,
		c. CODE AS client_code,
		c. NAME AS client_name,
		so.supplier_id,
		s. CODE AS supplier_code,
		s. NAME AS supplier_name,
		cu.id AS currency_id,
		cu. CODE AS currency_code,
		cu.
	VALUE
		AS currency_value,
		co.exchange_rate AS client_exchange_rate,
		so.exchange_rate,
		co.order_number AS client_order_number,
		so.order_number AS supplier_order_number,
		sqe.condition_id,
		cond. CODE AS condition_code,
		cond.
	VALUE
		AS condition_value,
		sqe.certification_id,
		cert. CODE AS certification_code,
		cert.
	VALUE
		AS certification_value,
		CONCAT(
			sqe.part_number,
			'
	',
			sqe.description,
			'
			',
			cert. CODE
		) AS detail,
		sqe.element_id,
		sqe.part_number AS quote_part_number,
		sqe.alter_part_number,
		e.part_number_code, 
		sqe.unit AS quote_unit,
		cqe.amount AS quote_amount,
		sqe.description AS quote_description,
		cqe.remark AS quote_remark,
		sqe.price AS supplier_quote_price,
		cqe.price AS client_quote_price,
		coe.amount AS client_order_amount,
		coe.price AS client_order_price,
		coe.lead_time AS client_order_lead_time,
		coe.deadline AS client_order_deadline,
		soe.amount AS supplier_order_amount,
		soe.price AS supplier_order_price,
		soe.amount * soe.price AS supplier_order_total_price,
		IFNULL(vsie.import_amount, 0) AS import_amount,
		soe.update_timestamp
	FROM
		supplier_order_element soe
	LEFT JOIN v_supplier_import_element vsie ON (
		soe.id = vsie.supplier_order_element_id
	)
	INNER JOIN supplier_order so ON (
		soe.supplier_order_id = so.id
	)
	INNER JOIN client_order co ON (so.client_order_id = co.id)
	INNER JOIN client_quote cq ON (co.client_quote_id = cq.id)
	INNER JOIN client_inquiry ci ON (cq.client_inquiry_id = ci.id)
	INNER JOIN client c ON (ci.client_id = c.id)
	INNER JOIN supplier s ON (so.supplier_id = s.id)
	INNER JOIN client_order_element coe ON (
		soe.client_order_element_id = coe.id
	)
	INNER JOIN client_quote_element cqe ON (
		coe.client_quote_element_id = cqe.id
	)
	INNER JOIN supplier_quote_element sqe ON (
		soe.supplier_quote_element_id = sqe.id
	)
	INNER JOIN supplier_quote sq ON (
		sqe.supplier_quote_id = sq.id
	)
	INNER JOIN supplier_inquiry si ON (
		sq.supplier_inquiry_id = si.id
	)
	INNER JOIN element e ON (sqe.element_id = e.id)
	INNER JOIN system_code cu ON (so.currency_id = cu.id)
	INNER JOIN system_code cond ON (sqe.condition_id = cond.id)
	INNER JOIN system_code cert ON (
		sqe.certification_id = cert.id
	)
	INNER JOIN system_code bt ON (ci.biz_type_id = bt.id)
	INNER JOIN system_code AT ON (ci.air_type_id = AT .id)
	INNER JOIN system_code sta ON (so.order_status_id = sta.id)
	WHERE IFNULL(vsie.import_amount, 0) != soe.amount and so.order_status_id != '64'
    <if test="partNumber != null">
       and sqe.SHORT_PART_NUMBER LIKE ${partNumber}
    </if>
	<if test="where != null">
		${where}
	</if>
	<if test="orderby != null">
		${orderby}
	</if>
  </select>
  
  <select id="getMinPrice" parameterType="page" resultType="Double">
  	SELECT
	ifnull(min(sqe.price),0)
	FROM
	 client_quote_element cqe 
	LEFT JOIN supplier_quote_element sqe
	ON (
	cqe.SUPPLIER_QUOTE_ELEMENT_ID = sqe.id
	)
	LEFT JOIN supplier_quote sq ON (
	sqe.supplier_quote_id = sq.id
	)
	LEFT JOIN client_inquiry_element cie
	ON (cie.ID = cqe.CLIENT_INQUIRY_ELEMENT_ID)
	LEFT JOIN client_inquiry ci 
	on (ci.id = cie.CLIENT_INQUIRY_ID)
	WHERE
	sqe.supplier_quote_status_id ='70'
	AND sq.quote_status_id = 90
	AND (
	sqe.SHORT_PART_NUMBER =#{shortPartNumber}
	OR cie.SHORT_PART_NUMBER =#{shortPartNumber}
	)
	<!-- and ci.quote_number=#{quoteNumber} -->
	ORDER BY
	sq.quote_date DESC
  </select>
  
  <select id="getStorageAmount" parameterType="String" resultType="Double">
  		SELECT
			SUM((
				`ipe`.`AMOUNT` - ifnull(`epe`.`export_amount`, 0)
			)) AS `storage_amount`
		FROM
			(
				`import_package_element` `ipe`
				LEFT JOIN `v_export_package_element` `epe` ON (
					(
						`epe`.`import_package_element_id` = `ipe`.`ID`
					)
				)
				LEFT JOIN supplier_import_element sie ON (
					sie.IMPORT_PACKAGE_ELEMENT_ID = ipe.ID
				)
				LEFT JOIN supplier_order_element soe ON (
					soe.ID = sie.SUPPLIER_ORDER_ELEMENT_ID
				)
				LEFT JOIN supplier_quote_element sqe ON (
					sqe.ID = soe.SUPPLIER_QUOTE_ELEMENT_ID
				)
				LEFT JOIN supplier_order so ON (
				soe.supplier_order_id = so.id
			)
			LEFT JOIN client_order co ON (so.client_order_id = co.id)
			LEFT JOIN client_quote cq ON (co.client_quote_id = cq.id)
			LEFT JOIN client_inquiry ci ON (cq.client_inquiry_id = ci.id)
			LEFT JOIN client c ON (ci.client_id = c.id)
			)
		WHERE
			(
				`ipe`.`AMOUNT` != ifnull(`epe`.`export_amount`, 0)
			) AND sqe.PART_NUMBER = #{partNumber} and c.name = 'KC'
			and ipe.LOCATION NOT LIKE '%YC%'
			
  </select>
  
  <select id="getSupplierElement" parameterType="String" resultMap="BaseResultMap">
  		SELECT * from supplier_order_element soe where soe.AWB = #{awb}
  </select>
  
  <select id="getImportPreparePage" parameterType="page" resultMap="BaseResultMap">
  		SELECT
  			soe.ID,
			sqe.PART_NUMBER,
			soe.AWB,
			soe.AMOUNT,
			so.ORDER_NUMBER,
			soe.UPDATE_TIMESTAMP,
			sw.`VALUE` AS ship_way_value,
			soe.DESTINATION
		FROM
			supplier_order_element soe
		LEFT JOIN supplier_quote_element sqe ON (
			sqe.ID = soe.SUPPLIER_QUOTE_ELEMENT_ID
		)
		LEFT JOIN supplier_order so ON (
			so.ID = soe.SUPPLIER_ORDER_ID
		)
		LEFT JOIN system_code sw ON (
			sw.ID = soe.SHIP_WAY_ID
		)
		WHERE
			soe.IMPORT_STATUS = 0
		<if test="where != null">
			and ${where}
		</if>
  </select>
  
  <select id="getAmountBySupplierOrderId" parameterType="Integer" resultType="Double">
  		SELECT SUM(soe.AMOUNT) FROM supplier_order so 
			LEFT JOIN supplier_order_element soe on so.ID = soe.SUPPLIER_ORDER_ID
			WHERE so.ID = #{supplierOrderId}
			GROUP BY so.ID
  </select>
  
  <select id="selectBySupplierOrderId" parameterType="Integer" resultMap="BaseResultMap">
  		SELECT soe.*,so.ORDER_NUMBER,sqe.PART_NUMBER FROM supplier_order_element soe 
			LEFT JOIN supplier_order so on so.ID = soe.SUPPLIER_ORDER_ID
			LEFT JOIN supplier_quote_element sqe on sqe.ID = soe.SUPPLIER_QUOTE_ELEMENT_ID
			where soe.SUPPLIER_ORDER_ID = #{supplierOrderId} and soe.order_status_id=60
  </select>
  
  <select id="getPaymentMessage" parameterType="Integer" resultMap="BaseResultMap">
  		SELECT soe.ID,MAX(ipp.PAYMENT_DATE) AS PAYMENT_DATE,SUM(ifnull(ippe.PAYMENT_SUM,0)) AS PRICE,SUM(ifnull(ippe.AMOUNT,0)) AS AMOUNT FROM import_package_payment_element ippe
			LEFT JOIN import_package_payment ipp on ipp.ID = ippe.IMPORT_PACKAGE_PAYMENT_ID 
			LEFT JOIN supplier_order_element soe on soe.ID = ippe.SUPPLIER_ORDER_ELEMENT_ID
			WHERE ippe.SUPPLIER_ORDER_ELEMENT_ID = #{supplierOrderElementId}
			GROUP BY ippe.SUPPLIER_ORDER_ELEMENT_ID
			
  </select>
  
  <select id="getSupplierId" parameterType="Integer" resultType="Integer">
  		SELECT DISTINCT so.SUPPLIER_ID FROM supplier_order_element soe 
			LEFT JOIN supplier_order so on so.ID = soe.SUPPLIER_ORDER_ID
			WHERE soe.ID = #{supplierOrderElementId}
  </select>
  
  <select id="getOnPassagePartNumber" parameterType="Integer" resultMap="supplierListVo">
  		SELECT
	*
FROM
	(
		SELECT DISTINCT
			sqe.id,
			si.client_inquiry_id,
			sqe.supplier_quote_id,
			sq.quote_date,
			ci.quote_number AS client_inquiry_quote_number,
			s.id AS supplier_id,
			s. CODE AS supplier_code,
			s. NAME AS supplier_name,
			sq.currency_id,
			cu. CODE AS currency_code,
			cu.
		VALUE
			AS currency_value,
			sq.exchange_rate,
			si.quote_number AS supplier_inquiry_quote_number,
			sqe.supplier_inquiry_element_id,
			sie.client_inquiry_element_id,
			cie.item,
			sqe.lead_time,
			sqe.price,
			sqe.price * sq.exchange_rate AS base_price,
			sqe.condition_id,
			cond. CODE AS condition_code,
			cond.
		VALUE
			AS condition_value,
			sqe.certification_id,
			cert. CODE AS certification_code,
			cert.
		VALUE
			AS certification_value,
			sqe.supplier_quote_status_id,
			sqs. CODE AS supplier_quote_status_code,
			sqs.
		VALUE
			AS supplier_quote_status_value,
			cie.element_id AS inquiry_element_id,
			sqe.element_id AS quote_element_id,
			cie.part_number AS inquiry_part_number,
			sqe.part_number AS quote_part_number,
			cie.unit AS inquiry_unit,
			sqe.unit AS quote_unit,
			cie.amount AS inquiry_amount,
			sqe.amount AS quote_amount,
			cie.description AS inquiry_description,
			sqe.description AS quote_description,
			cie.remark AS inquiry_remark,
			sqe.remark AS quote_remark,
			cq.quote_date AS client_quote_date,
			cqe.price AS client_quote_price,
			cq.exchange_rate AS client_quote_exchange_rate,
			sqe.update_timestamp,
			soe.AMOUNT - SUM(ops.AMOUNT) AS on_passage_amount
		FROM
			supplier_quote_element sqe
		INNER JOIN supplier_quote sq ON (
			sqe.supplier_quote_id = sq.id
		)
		INNER JOIN supplier_inquiry si ON (
			sq.supplier_inquiry_id = si.id
		)
		INNER JOIN client_inquiry ci ON (si.client_inquiry_id = ci.id)
		INNER JOIN supplier s ON (si.supplier_id = s.id)
		INNER JOIN supplier_inquiry_element sie ON (
			sqe.supplier_inquiry_element_id = sie.id
		)
		INNER JOIN client_inquiry_element cie ON (
			sie.client_inquiry_element_id = cie.id
		)
		LEFT JOIN client_inquiry_element ciie ON (ciie.ID = cie.MAIN_ID)
		INNER JOIN element e ON (sqe.element_id = e.id)
		INNER JOIN system_code cu ON (sq.currency_id = cu.id)
		INNER JOIN system_code cond ON (sqe.condition_id = cond.id)
		INNER JOIN system_code cert ON (
			sqe.certification_id = cert.id
		)
		INNER JOIN system_code sqs ON (
			sqe.supplier_quote_status_id = sqs.id
		)
		LEFT JOIN client_quote_element cqe ON (
			cqe.client_inquiry_element_id = cie.id
		)
		LEFT JOIN client_quote cq ON (
			cq.client_inquiry_id = ci.id
			AND cqe.client_quote_id = cq.id
		)
		LEFT JOIN supplier_order_element soe ON (
			soe.SUPPLIER_QUOTE_ELEMENT_ID = sqe.ID
		)
		LEFT JOIN on_passage_storage ops ON (
			soe.ID = ops.SUPPLIER_ORDER_ELEMENT_ID
		)
		WHERE
			sqe.supplier_quote_status_id = '70'
		AND sq.quote_status_id = 90
		AND sqe.element_id = #{0}
		GROUP BY ops.SUPPLIER_ORDER_ELEMENT_ID
	union
		SELECT DISTINCT
			sqe.id,
			si.client_inquiry_id,
			sqe.supplier_quote_id,
			sq.quote_date,
			ci.quote_number AS client_inquiry_quote_number,
			s.id AS supplier_id,
			s. CODE AS supplier_code,
			s. NAME AS supplier_name,
			sq.currency_id,
			cu. CODE AS currency_code,
			cu.
		VALUE
			AS currency_value,
			sq.exchange_rate,
			si.quote_number AS supplier_inquiry_quote_number,
			sqe.supplier_inquiry_element_id,
			sie.client_inquiry_element_id,
			cie.item,
			sqe.lead_time,
			sqe.price,
			sqe.price * sq.exchange_rate AS base_price,
			sqe.condition_id,
			cond. CODE AS condition_code,
			cond.
		VALUE
			AS condition_value,
			sqe.certification_id,
			cert. CODE AS certification_code,
			cert.
		VALUE
			AS certification_value,
			sqe.supplier_quote_status_id,
			sqs. CODE AS supplier_quote_status_code,
			sqs.
		VALUE
			AS supplier_quote_status_value,
			cie.element_id AS inquiry_element_id,
			sqe.element_id AS quote_element_id,
			cie.part_number AS inquiry_part_number,
			sqe.part_number AS quote_part_number,
			cie.unit AS inquiry_unit,
			sqe.unit AS quote_unit,
			cie.amount AS inquiry_amount,
			sqe.amount AS quote_amount,
			cie.description AS inquiry_description,
			sqe.description AS quote_description,
			cie.remark AS inquiry_remark,
			sqe.remark AS quote_remark,
			cq.quote_date AS client_quote_date,
			cqe.price AS client_quote_price,
			cq.exchange_rate AS client_quote_exchange_rate,
			sqe.update_timestamp,
			soe.AMOUNT - SUM(ops.AMOUNT) AS on_passage_amount
		FROM
			supplier_quote_element sqe
		INNER JOIN supplier_quote sq ON (
			sqe.supplier_quote_id = sq.id
		)
		INNER JOIN supplier_inquiry si ON (
			sq.supplier_inquiry_id = si.id
		)
		INNER JOIN client_inquiry ci ON (si.client_inquiry_id = ci.id)
		INNER JOIN supplier s ON (si.supplier_id = s.id)
		INNER JOIN supplier_inquiry_element sie ON (
			sqe.supplier_inquiry_element_id = sie.id
		)
		INNER JOIN client_inquiry_element cie ON (
			sie.client_inquiry_element_id = cie.id
		)
		LEFT JOIN client_inquiry_element ciie ON (ciie.ID = cie.MAIN_ID)
		INNER JOIN element e ON (sqe.element_id = e.id)
		INNER JOIN system_code cu ON (sq.currency_id = cu.id)
		INNER JOIN system_code cond ON (sqe.condition_id = cond.id)
		INNER JOIN system_code cert ON (
			sqe.certification_id = cert.id
		)
		INNER JOIN system_code sqs ON (
			sqe.supplier_quote_status_id = sqs.id
		)
		LEFT JOIN client_quote_element cqe ON (
			cqe.client_inquiry_element_id = cie.id
		)
		LEFT JOIN client_quote cq ON (
			cq.client_inquiry_id = ci.id
			AND cqe.client_quote_id = cq.id
		)
		LEFT JOIN supplier_order_element soe ON (
			soe.SUPPLIER_QUOTE_ELEMENT_ID = sqe.ID
		)
		LEFT JOIN on_passage_storage ops ON (
			soe.ID = ops.SUPPLIER_ORDER_ELEMENT_ID
		)
		WHERE
			sqe.supplier_quote_status_id = '70'
		AND sq.quote_status_id = 90
		AND  cie.element_id = #{1}
		
		GROUP BY ops.SUPPLIER_ORDER_ELEMENT_ID
		
	) a
WHERE a.on_passage_amount > 0
  </select>
  
   <select id="findBsnBySoeId" parameterType="Integer" resultType="String">
  select cie.BSN from supplier_order_element soe INNER JOIN
		client_order_element coe on coe.ID=soe.CLIENT_ORDER_ELEMENT_ID
		INNER JOIN client_quote_element cqe on cqe.ID=coe.CLIENT_QUOTE_ELEMENT_ID
		INNER JOIN client_inquiry_element cie on cie.ID=cqe.CLIENT_INQUIRY_ELEMENT_ID
		where soe.ID=#{id}
  </select>
  
  
  <select id="getImportDateBySoeId" parameterType="Integer" resultMap="addSupplierOrderElementVo">
		SELECT
			soe.ID,
			MAX(ip.IMPORT_DATE)
		FROM
			supplier_order_element soe
		LEFT JOIN supplier_import_element sie ON sie.SUPPLIER_ORDER_ELEMENT_ID = soe.ID
		LEFT JOIN import_package_element ipe ON ipe.ID = sie.IMPORT_PACKAGE_ELEMENT_ID
		LEFT JOIN import_package ip ON ip.ID = ipe.IMPORT_PACKAGE_ID
		WHERE soe.ID = #{supplierOrderElementId}
  </select>
  
   <!-- <select id="getImportAmount" parameterType="Integer" resultType="DOUBLE">
		select IFNULL(SUM(amount),0) import_amount   from (
		select ipe.ID,ipe.AMOUNT from import_package_element ipe where ipe.SUPPLIER_ORDER_ELEMENT_ID=#{id}
		union
		select sie.IMPORT_PACKAGE_ELEMENT_ID,sie.AMOUNT from supplier_import_element sie where sie.SUPPLIER_ORDER_ELEMENT_ID=#{id}
		)a
  </select> -->
  
    <select id="getSupplierOrderELementId" parameterType="Integer" resultType="Integer">
 	 select IFNULL(ipe.supplier_order_element_id,0) from
 	 	 supplier_order_element soe INNER  JOIN
		supplier_import_element sie on sie.SUPPLIER_ORDER_ELEMENT_ID=soe.ID
		INNER JOIN  import_package_element ipe on
		ipe.ID=sie.IMPORT_PACKAGE_ELEMENT_ID 
		where soe.ID=#{id}
		GROUP BY soe.id
  </select>
  
  <select id="getOtherOrderAmount" parameterType="Integer" resultType="Double">
  		SELECT IFNULL(SUM(soe.AMOUNT),0) from supplier_order_element soe WHERE soe.CLIENT_ORDER_ELEMENT_ID = #{0} and soe.ID != #{1} and soe.ORDER_STATUS_ID != 64
  </select>
  
  <select id="selectBySupplierOrderIdAll" parameterType="Integer" resultMap="BaseResultMap">
  		SELECT
			ID,
			SUPPLIER_ORDER_ID,
			CLIENT_ORDER_ELEMENT_ID,
			SUPPLIER_QUOTE_ELEMENT_ID,
			AMOUNT,
			PRICE,
			LEAD_TIME,
			DEADLINE,
			UPDATE_TIMESTAMP,
			SHIP_WAY_ID,
			DESTINATION,
			INVOICE_DATE,
			SHIP_LEAD_TIME,
			TAX_REIMBURSEMENT_ID
		FROM
			supplier_order_element soe
		WHERE
			soe.SUPPLIER_ORDER_ID = #{supplierOrderId}
  </select>
  
  <select id="getOrdersAmount" parameterType="Integer" resultMap="BaseResultMap">
  		SELECT
			SUM(soe.AMOUNT) AS supplier_order_amount,
			coe.AMOUNT AS client_order_amount
		FROM
			supplier_order_element soe
		LEFT JOIN client_order_element coe ON coe.ID = soe.CLIENT_ORDER_ELEMENT_ID
		LEFT JOIN supplier_order so ON so.ID = soe.SUPPLIER_ORDER_ID
		WHERE
			soe.CLIENT_ORDER_ELEMENT_ID = #{clientOrderElementId} AND so.ORDER_STATUS_ID != 64
		GROUP BY
			coe.ID
  </select>
  
  <select id="getOrderCount" parameterType="Integer" resultType="Integer">
  		SELECT
			COUNT(*)
		FROM
			supplier_order_element soe
		WHERE
			soe.SUPPLIER_ORDER_ID = #{supplierOrderId}
  </select>
  
  <select id="getAmountByCLientElementId" parameterType="Integer" resultType="Double">
  		SELECT
			SUM(soe.AMOUNT)
		FROM
			supplier_order_element soe
		LEFT JOIN supplier_order so ON (
			so.ID = soe.SUPPLIER_ORDER_ID
		)
		WHERE
			soe.CLIENT_ORDER_ELEMENT_ID = #{clientOrderElementId}
			AND soe.ORDER_STATUS_ID != 64 AND so.ORDER_STATUS_ID != 64
		GROUP BY soe.CLIENT_ORDER_ELEMENT_ID
  </select>
  
    
  <select id="findOrderPrice" parameterType="Integer" resultMap="BaseResultMap">
  SELECT s.`CODE`,soe.PRICE,soe.AMOUNT,so.ORDER_DATE 
	FROM supplier_quote_element sqe
	INNER JOIN supplier_order_element soe on soe.SUPPLIER_QUOTE_ELEMENT_ID=sqe.ID
	INNER JOIN supplier_order so on so.ID=soe.SUPPLIER_ORDER_ID
	INNER JOIN supplier s on s.ID=so.SUPPLIER_ID
	INNER JOIN client_order_element coe on coe.ID=soe.CLIENT_ORDER_ELEMENT_ID
	where so.ORDER_STATUS_ID=60  AND sqe.ELEMENT_ID=#{elementId} 
	ORDER BY so.ORDER_DATE DESC LIMIT 1
  </select>
  
  <select id="getImportNumberById" parameterType="Integer" resultType="String">
  		SELECT DISTINCT
			ip.IMPORT_NUMBER
		FROM
			supplier_import_element sie
		LEFT JOIN import_package_element ipe ON ipe.ID = sie.IMPORT_PACKAGE_ELEMENT_ID
		LEFT JOIN import_package ip ON ip.ID = ipe.IMPORT_PACKAGE_ID
		WHERE
			sie.SUPPLIER_ORDER_ELEMENT_ID = #{id} or ipe.SUPPLIER_ORDER_ELEMENT_ID = #{id};
  </select>
  
  <select id="getShelfLifeBySoeId" parameterType="String" resultType="Integer">
  		SELECT
			tp.SHELF_LIFE
		FROM
			supplier_order_element soe
		LEFT JOIN client_order_element coe ON coe.ID = soe.CLIENT_ORDER_ELEMENT_ID
		LEFT JOIN client_quote_element cqe ON cqe.ID = coe.CLIENT_QUOTE_ELEMENT_ID
		LEFT JOIN client_inquiry_element cie ON cie.ID = cqe.CLIENT_INQUIRY_ELEMENT_ID
		LEFT JOIN crmstock.t_part tp ON tp.BSN = cie.BSN
		WHERE soe.ID = #{soeId}
  </select>
  
  <select id="getImportAmount" parameterType="Integer" resultType="Double">
  	SELECT
		SUM(sie.AMOUNT)
	FROM
		supplier_import_element sie
	LEFT JOIN import_package_element ipe ON ipe.ID = sie.IMPORT_PACKAGE_ELEMENT_ID
	WHERE
		sie.SUPPLIER_ORDER_ELEMENT_ID = #{id} or ipe.SUPPLIER_ORDER_ELEMENT_ID = #{id}
  </select>
  
  <select id="getShipByOrderNumber" parameterType="String" resultType="Integer">
  	SELECT DISTINCT
		soe.SHIP_WAY_ID
	FROM
		supplier_order so
	LEFT JOIN supplier_order_element soe ON soe.SUPPLIER_ORDER_ID = so.ID
	WHERE
		so.ORDER_NUMBER = #{orderNumber}
  </select>
  
  <select id="selectByImportPackageId" parameterType="Integer" resultMap="BaseResultMap">
  	SELECT DISTINCT soe.ID,soe.ELEMENT_STATUS_ID,soe.CLIENT_ORDER_ELEMENT_ID  FROM import_package ip
		LEFT JOIN import_package_element ipe ON ipe.IMPORT_PACKAGE_ID = ip.ID
		LEFT JOIN supplier_import_element sie ON sie.IMPORT_PACKAGE_ELEMENT_ID = ipe.ID
		LEFT JOIN supplier_order_element soe ON soe.ID = sie.SUPPLIER_ORDER_ELEMENT_ID
		WHERE ip.ID = #{importPackageId}
  </select>
  
  <select id="getTotalByOrder" parameterType="Integer" resultType="Double">
  	SELECT
		SUM(
			IFNULL(soe.PRICE, 0) * IFNULL(soe.AMOUNT, 0)
		)
	FROM
		supplier_order_element soe
	WHERE
		soe.SUPPLIER_ORDER_ID = #{supplierOrderId}
	GROUP BY
		soe.SUPPLIER_ORDER_ID
  </select>
  
</mapper>