<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.naswork.dao.SupplierInquiryElementDao" >
  <resultMap id="BaseResultMap" type="com.naswork.model.SupplierInquiryElement" >
    <result column="ID" property="id" jdbcType="INTEGER" />
    <result column="SUPPLIER_INQUIRY_ID" property="supplierInquiryId" jdbcType="INTEGER" />
    <result column="CLIENT_INQUIRY_ELEMENT_ID" property="clientInquiryElementId" jdbcType="INTEGER" />
    <result column="UPDATE_TIMESTAMP" property="updateTimestamp" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <resultMap id="factoryVo" type="com.naswork.module.system.controller.suppliermanage.FactoryVo" >
    <result column="BSN" property="bsn" jdbcType="INTEGER" />
    <result column="PART_NUM" property="partNum" jdbcType="VARCHAR" />
    <result column="PART_NAME" property="partName" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    ID, SUPPLIER_INQUIRY_ID, CLIENT_INQUIRY_ELEMENT_ID, UPDATE_TIMESTAMP
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from supplier_inquiry_element
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from supplier_inquiry_element
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.naswork.model.SupplierInquiryElement" >
    insert into supplier_inquiry_element (ID, SUPPLIER_INQUIRY_ID, CLIENT_INQUIRY_ELEMENT_ID, 
      UPDATE_TIMESTAMP)
    values (#{id,jdbcType=INTEGER}, #{supplierInquiryId,jdbcType=INTEGER}, #{clientInquiryElementId,jdbcType=INTEGER}, 
      #{updateTimestamp,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.naswork.model.SupplierInquiryElement" >
     	<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
		SELECT LAST_INSERT_ID() AS id
		</selectKey>
    insert into supplier_inquiry_element
    <trim prefix="(" suffix=")" suffixOverrides="," >
      
      <if test="supplierInquiryId != null" >
        SUPPLIER_INQUIRY_ID,
      </if>
      <if test="clientInquiryElementId != null" >
        CLIENT_INQUIRY_ELEMENT_ID,
      </if>
      <if test="updateTimestamp != null" >
        UPDATE_TIMESTAMP,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
     
      <if test="supplierInquiryId != null" >
        #{supplierInquiryId,jdbcType=INTEGER},
      </if>
      <if test="clientInquiryElementId != null" >
        #{clientInquiryElementId,jdbcType=INTEGER},
      </if>
      <if test="updateTimestamp != null" >
        #{updateTimestamp,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.naswork.model.SupplierInquiryElement" >
    update supplier_inquiry_element
    <set >
      <if test="supplierInquiryId != null" >
        SUPPLIER_INQUIRY_ID = #{supplierInquiryId,jdbcType=INTEGER},
      </if>
      <if test="clientInquiryElementId != null" >
        CLIENT_INQUIRY_ELEMENT_ID = #{clientInquiryElementId,jdbcType=INTEGER},
      </if>
      <if test="updateTimestamp != null" >
        UPDATE_TIMESTAMP = #{updateTimestamp,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.naswork.model.SupplierInquiryElement" >
    update supplier_inquiry_element
    set SUPPLIER_INQUIRY_ID = #{supplierInquiryId,jdbcType=INTEGER},
      CLIENT_INQUIRY_ELEMENT_ID = #{clientInquiryElementId,jdbcType=INTEGER},
      UPDATE_TIMESTAMP = #{updateTimestamp,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
   <select id="selectInquiryByElementId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
	 select * from client_inquiry_element cie 
	INNER JOIN client_inquiry ci on cie.CLIENT_INQUIRY_ID=ci.ID
	INNER JOIN supplier_inquiry_element sie on sie.CLIENT_INQUIRY_ELEMENT_ID=cie.ID
	INNER JOIN supplier_inquiry si on si.ID=sie.SUPPLIER_INQUIRY_ID
	where cie.ELEMENT_ID=#{0} and cie.REMARK='STORAGE' and cie.AMOUNT=0 and si.SUPPLIER_ID=#{1} and si.client_inquiry_id=#{2}
  </select>
   <select id="findSupplierInquiryElement" resultMap="BaseResultMap" parameterType="com.naswork.model.SupplierInquiryElement" >
    select 
    <include refid="Base_Column_List" />
    from supplier_inquiry_element
    where  CLIENT_INQUIRY_ELEMENT_ID = ${clientInquiryElementId} AND SUPPLIER_INQUIRY_ID = ${supplierInquiryId}
  </select>
  
     <select id="findByElementIdAndMian" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
	 select sie.* from client_inquiry_element cie 
	INNER JOIN supplier_inquiry_element sie on sie.CLIENT_INQUIRY_ELEMENT_ID=cie.ID
	where cie.ELEMENT_ID=#{0}  and sie.supplier_inquiry_id=#{1} and cie.IS_MAIN=1  LIMIT 1
  </select>
  
  <select id="getList" parameterType="Integer" resultMap="BaseResultMap">
  		SELECT * FROM supplier_inquiry_element sie WHERE sie.CLIENT_INQUIRY_ELEMENT_ID = #{0} AND sie.SUPPLIER_INQUIRY_ID = #{1}
  </select>
  
  <select id="getListByInquiryElementId" parameterType="Integer" resultMap="BaseResultMap">
  	SELECT * FROM supplier_inquiry_element sie WHERE sie.CLIENT_INQUIRY_ELEMENT_ID = #{clientInquiryElementId} ORDER BY sie.UPDATE_TIMESTAMP DESC;
  </select>
  
</mapper>