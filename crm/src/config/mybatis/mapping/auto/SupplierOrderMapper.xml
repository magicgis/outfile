<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.naswork.dao.SupplierOrderDao" >
  <resultMap id="BaseResultMap" type="com.naswork.model.SupplierOrder" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="CLIENT_ORDER_ID" property="clientOrderId" jdbcType="INTEGER" />
    <result column="SUPPLIER_ID" property="supplierId" jdbcType="INTEGER" />
    <result column="CURRENCY_ID" property="currencyId" jdbcType="INTEGER" />
    <result column="EXCHANGE_RATE" property="exchangeRate" jdbcType="DOUBLE" />
    <result column="ORDER_DATE" property="orderDate" jdbcType="DATE" />
    <result column="ORDER_NUMBER" property="orderNumber" jdbcType="VARCHAR" />
    <result column="TERMS" property="terms" jdbcType="INTEGER" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="UPDATE_TIMESTAMP" property="updateTimestamp" jdbcType="TIMESTAMP" />
    <result column="ORDER_STATUS_ID" property="orderStatusId" jdbcType="INTEGER" />
    <result column="PREPAY_RATE" property="prepayRate" jdbcType="DOUBLE" />
    <result column="SHIP_PAY_RATE" property="shipPayRate" jdbcType="DOUBLE" />
    <result column="RECEIVE_PAY_RATE" property="receivePayRate" jdbcType="DOUBLE" />
    <result column="DEADLINE" property="deadline" jdbcType="DATE" />
    <result column="ALL_PREPAY_NOT_IMPORT_STATUS" property="allPrepayNotImportStatus" jdbcType="INTEGER" />
    <result column="PART_NUMBER" property="partNumber" jdbcType="VARCHAR" />
    <result column="SHIP_LEAD_TIME" property="shipLeadTime" jdbcType="INTEGER" />
    <result column="ORDER_TYPE" property="orderType" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap type="com.naswork.module.purchase.controller.supplierorder.SupplierOrderManageVo" id="supplierOrderManageVo">
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="order_type" property="orderType" jdbcType="INTEGER" />
    <result column="PREPAY_RATE" property="prepayRate" jdbcType="DOUBLE" />
    <result column="SHIP_PAY_RATE" property="shipPayRate" jdbcType="DOUBLE" />
    <result column="RECEIVE_PAY_RATE" property="receivePayRate" jdbcType="DOUBLE" />
    <result column="RECEIVE_PAY_PERIOD" property="receivePayPeriod" jdbcType="INTEGER" />
  	<result column="id" property="id" jdbcType="INTEGER" />
  	<result column="currency_id" property="currencyId" jdbcType="INTEGER" />
    <result column="supplier_code" property="supplierCode" jdbcType="VARCHAR" />
    <result column="contact_name" property="contactName" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="fax" property="fax" jdbcType="VARCHAR" />
    <result column="bank" property="bank" jdbcType="VARCHAR" />
    <result column="payment_rule" property="paymentRule" jdbcType="VARCHAR" />
    <result column="bank_account_number" property="bankAccountNumber" jdbcType="VARCHAR" />
    <result column="tax_payer_number" property="taxPayerNumber" jdbcType="VARCHAR" />
    <result column="supplier_name" property="supplierName" jdbcType="VARCHAR" />
    <result column="client_order_number" property="clientOrderNumber" jdbcType="VARCHAR" />
    <result column="supplier_order_number" property="supplierOrderNumber" jdbcType="VARCHAR" />
    <result column="order_date" property="orderDate" jdbcType="DATE" />
    <result column="currency_value" property="currencyValue" jdbcType="VARCHAR" />
    <result column="currency_code" property="currencyCode" jdbcType="VARCHAR" />
    <result column="exchange_rate" property="exchangeRate" jdbcType="DOUBLE" />
    <result column="order_status_value" property="orderStatusValue" jdbcType="VARCHAR" />
    <result column="terms" property="terms" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="update_timestamp" property="updateTimestamp" jdbcType="TIMESTAMP" />
    <result column="supplier_id" property="supplierId" jdbcType="INTEGER" />
    <result column="payment_amount" property="paymentAmount" jdbcType="DOUBLE" />
    <result column="order_amount" property="orderAmount" jdbcType="DOUBLE" />
    <result column="payment_total" property="paymentTotal" jdbcType="DOUBLE" />
    <result column="order_total" property="orderTotal" jdbcType="DOUBLE" />
    <result column="URGENT_LEVEL_VALUE" property="urgentLevelValue" jdbcType="VARCHAR" />
    <result column="URGENT_LEVEL_ID" property="urgentLevelId" jdbcType="INTEGER" />
    <result column="supplier_status" property="supplierStatus" jdbcType="VARCHAR"></result>
  </resultMap>
  
  <resultMap id="clientOrder" type="com.naswork.model.ClientOrder" >
    <result column="ID" property="id" jdbcType="INTEGER" />
    <result column="CLIENT_QUOTE_ID" property="clientQuoteId" jdbcType="INTEGER" />
    <result column="CURRENCY_ID" property="currencyId" jdbcType="INTEGER" />
    <result column="EXCHANGE_RATE" property="exchangeRate" jdbcType="DOUBLE" />
    <result column="SOURCE_NUMBER" property="sourceNumber" jdbcType="VARCHAR" />
    <result column="ORDER_NUMBER" property="orderNumber" jdbcType="VARCHAR" />
    <result column="SEQ" property="seq" jdbcType="INTEGER" />
    <result column="ORDER_DATE" property="orderDate" jdbcType="DATE" />
    <result column="TERMS" property="terms" jdbcType="INTEGER" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="ORDER_STATUS_ID" property="orderStatusId" jdbcType="INTEGER" />
    <result column="UPDATE_TIMESTAMP" property="updateTimestamp" jdbcType="TIMESTAMP" />
    <result column="PREPAY_RATE" property="prepayRate" jdbcType="DOUBLE" />
    <result column="SHIP_PAY_RATE" property="shipPayRate" jdbcType="DOUBLE" />
    <result column="SHIP_PAY_PERIOD" property="shipPayPeriod" jdbcType="INTEGER" />
    <result column="RECEIVE_PAY_RATE" property="receivePayRate" jdbcType="DOUBLE" />
    <result column="RECEIVE_PAY_PERIOD" property="receivePayPeriod" jdbcType="INTEGER" />
    <result column="client_code" property="clientCode" jdbcType="VARCHAR" />
    <result column="air_code" property="airCode" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap type="com.naswork.module.purchase.controller.supplierinquirystatistic.SupplierInquiryStatistic" id="SupplierInquiryStattistic">
  <result column="supplier_code" property="supplierCode" jdbcType="VARCHAR"/>
  <result column="air_type_code" property="airTypeCode" jdbcType="VARCHAR"/>
  <result column="biz_type_code" property="bizTypeCode" jdbcType="VARCHAR"/>
  <result column="supplier_id" property="supplierId" jdbcType="INTEGER"/>
  <result column="air_type_id" property="airTypeId" jdbcType="INTEGER"/>
   <result column="biz_type_id" property="bizTypeId" jdbcType="INTEGER"/>
  <result column="supplier_inquiry_count" property="supplierInquiryCount" jdbcType="INTEGER"/>
  <result column="supplier_quote_count" property="supplierQuoteCount" jdbcType="INTEGER"/>
  <result column="supplier_quote_sum" property="supplierQuoteSum" jdbcType="DOUBLE"/>
  <result column="supplier_order_count" property="supplierOrderCount" jdbcType="INTEGER"/>
  <result column="supplier_order_sum" property="supplierOrderSum" jdbcType="DOUBLE"/>
  <result column="supplier_import_count" property="supplierImportCount" jdbcType="INTEGER"/>
  <result column="supplier_import_sum" property="supplierImportSum" jdbcType="DOUBLE"/>
  </resultMap>
  
   <resultMap id="clientOrderElement" type="com.naswork.model.ClientOrderElement" >
    <result column="ID" property="id" jdbcType="INTEGER" />
    <result column="CLIENT_ORDER_ID" property="clientOrderId" jdbcType="INTEGER" />
    <result column="CLIENT_QUOTE_ELEMENT_ID" property="clientQuoteElementId" jdbcType="INTEGER" />
    <result column="AMOUNT" property="amount" jdbcType="DOUBLE" />
    <result column="PRICE" property="price" jdbcType="DOUBLE" />
    <result column="LEAD_TIME" property="leadTime" jdbcType="VARCHAR" />
    <result column="DEADLINE" property="deadline" jdbcType="DATE" />
    <result column="UPDATE_TIMESTAMP" property="updateTimestamp" jdbcType="TIMESTAMP" />
    <result column="part_number" property="partNumber" jdbcType="VARCHAR" />
    <result column="item" property="item" jdbcType="INTEGER" />
    <result column="csn" property="csn" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="unit" property="unit" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="QUOTE_NUMBER" property="quoteNumber" jdbcType="VARCHAR" />
    <result column="ORDER_DATE" property="orderDate" jdbcType="DATE" />
    <result column="order_number" property="orderNumber" jdbcType="VARCHAR" />
    <result column="source_number" property="sourceNumber" jdbcType="VARCHAR" />
    <result column="client_code" property="clientCode" jdbcType="VARCHAR" />
    <result column="air_code" property="airCode" jdbcType="VARCHAR" />
    <result column="client_order_amount" property="clientOrderAmount" jdbcType="DOUBLE" />
  </resultMap>
  
  <resultMap id="storageOrderVo" type="com.naswork.module.purchase.controller.supplierorder.StorageOrderVo" >
    <result column="client_order_id" property="clientOrderId" jdbcType="INTEGER" />
    <result column="client_quote_id" property="clientQuoteId" jdbcType="INTEGER" />
    <result column="client_inquiry_id" property="clientInquiryId" jdbcType="INTEGER" />
    <result column="supplier_inquiry_id" property="supplierInquiryId" jdbcType="INTEGER" />
    <result column="supplier_quote_id" property="supplierQuoteId" jdbcType="INTEGER" />
    <result column="SUPPLIER_ID" property="supplierId" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap id="address" type="com.naswork.module.purchase.controller.supplierorder.Address" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="line_one" property="lineOne" jdbcType="INTEGER" />
    <result column="line_two" property="lineTwo" jdbcType="INTEGER" />
    <result column="line_three" property="lineThree" jdbcType="INTEGER" />
    <result column="line_four" property="lineFour" jdbcType="INTEGER" />
    <result column="line_five" property="lineFive" jdbcType="INTEGER" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    ID, CLIENT_ORDER_ID, SUPPLIER_ID, CURRENCY_ID, EXCHANGE_RATE, ORDER_DATE, ORDER_NUMBER, 
    TERMS, REMARK, UPDATE_TIMESTAMP, ORDER_STATUS_ID,PREPAY_RATE,SHIP_PAY_RATE,RECEIVE_PAY_RATE
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from supplier_order
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from supplier_order
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.naswork.model.SupplierOrder" >
    insert into supplier_order (ID, CLIENT_ORDER_ID, SUPPLIER_ID, 
      CURRENCY_ID, EXCHANGE_RATE, ORDER_DATE, 
      ORDER_NUMBER, TERMS, REMARK, 
      UPDATE_TIMESTAMP, ORDER_STATUS_ID)
    values (#{id,jdbcType=INTEGER}, #{clientOrderId,jdbcType=INTEGER}, #{supplierId,jdbcType=INTEGER}, 
      #{currencyId,jdbcType=INTEGER}, #{exchangeRate,jdbcType=DOUBLE}, #{orderDate,jdbcType=DATE}, 
      #{orderNumber,jdbcType=VARCHAR}, #{terms,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{updateTimestamp,jdbcType=TIMESTAMP}, #{orderStatusId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.naswork.model.SupplierOrder" >
  	<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
		SELECT LAST_INSERT_ID() AS id
	</selectKey>
    insert into supplier_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="clientOrderId != null" >
        CLIENT_ORDER_ID,
      </if>
      <if test="supplierId != null" >
        SUPPLIER_ID,
      </if>
      <if test="currencyId != null" >
        CURRENCY_ID,
      </if>
      <if test="exchangeRate != null" >
        EXCHANGE_RATE,
      </if>
      <if test="orderDate != null" >
        ORDER_DATE,
      </if>
      <if test="orderNumber != null" >
        ORDER_NUMBER,
      </if>
      <if test="terms != null" >
        TERMS,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="updateTimestamp != null" >
        UPDATE_TIMESTAMP,
      </if>
      <if test="orderStatusId != null" >
        ORDER_STATUS_ID,
      </if>
       <if test="prepayRate != null" >
        PREPAY_RATE,
      </if>
      <if test="shipPayRate != null" >
        SHIP_PAY_RATE,
      </if>
      <if test="receivePayRate != null" >
        RECEIVE_PAY_RATE,
      </if>
      <if test="receivePayPeriod != null" >
        RECEIVE_PAY_PERIOD,
      </if>
        <if test="orderType != null" >
        ORDER_TYPE,
      </if>
      <if test="createUserId != null" >
        CREATE_USER_ID,
      </if>
      <if test="bankCost != null" >
        BANK_COST,
      </if>
      <if test="feeForExchangeBill != null" >
        FEE_FOR_EXCHANGE_BILL,
      </if>
      <if test="otherFee != null" >
        OTHER_FEE,
      </if>
      <if test="urgentLevelId != null" >
        URGENT_LEVEL_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="clientOrderId != null" >
        #{clientOrderId,jdbcType=INTEGER},
      </if>
      <if test="supplierId != null" >
        #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="currencyId != null" >
        #{currencyId,jdbcType=INTEGER},
      </if>
      <if test="exchangeRate != null" >
        #{exchangeRate,jdbcType=DOUBLE},
      </if>
      <if test="orderDate != null" >
        #{orderDate,jdbcType=DATE},
      </if>
      <if test="orderNumber != null" >
        #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="terms != null" >
        #{terms,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updateTimestamp != null" >
        #{updateTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="orderStatusId != null" >
        #{orderStatusId,jdbcType=INTEGER},
      </if>
       <if test="prepayRate != null" >
        #{prepayRate,jdbcType=DOUBLE},
      </if>
      <if test="shipPayRate != null" >
        #{shipPayRate,jdbcType=DOUBLE},
      </if>
      <if test="receivePayRate != null" >
        #{receivePayRate,jdbcType=DOUBLE},
      </if>
      <if test="receivePayPeriod != null" >
        #{receivePayPeriod,jdbcType=INTEGER},
      </if>
       <if test="orderType != null" >
        #{orderType,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null" >
     	#{createUserId,jdbcType=INTEGER},
      </if>
      <if test="bankCost != null" >
        #{bankCost,jdbcType=DOUBLE},
      </if>
      <if test="feeForExchangeBill != null" >
        #{feeForExchangeBill,jdbcType=DOUBLE},
      </if>
      <if test="otherFee != null" >
        #{otherFee,jdbcType=DOUBLE}
      </if>
      <if test="urgentLevelId != null" >
        #{urgentLevelId,jdbcType=INTEGER}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.naswork.model.SupplierOrder" >
    update supplier_order
    <set >
      <if test="clientOrderId != null" >
        CLIENT_ORDER_ID = #{clientOrderId,jdbcType=INTEGER},
      </if>
      <if test="supplierId != null" >
        SUPPLIER_ID = #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="currencyId != null" >
        CURRENCY_ID = #{currencyId,jdbcType=INTEGER},
      </if>
      <if test="exchangeRate != null" >
        EXCHANGE_RATE = #{exchangeRate,jdbcType=DOUBLE},
      </if>
      <if test="orderDate != null" >
        ORDER_DATE = #{orderDate,jdbcType=DATE},
      </if>
      <if test="orderNumber != null" >
        ORDER_NUMBER = #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="terms != null" >
        TERMS = #{terms,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updateTimestamp != null" >
        UPDATE_TIMESTAMP = #{updateTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="orderStatusId != null" >
        ORDER_STATUS_ID = #{orderStatusId,jdbcType=INTEGER},
      </if>
      <if test="prepayRate != null" >
       	PREPAY_RATE = #{prepayRate,jdbcType=DOUBLE},
      </if>
      <if test="shipPayRate != null" >
     	SHIP_PAY_RATE = #{shipPayRate,jdbcType=DOUBLE},
      </if>
      <if test="receivePayRate != null" >
    	RECEIVE_PAY_RATE = #{receivePayRate,jdbcType=DOUBLE},
      </if>
      <if test="receivePayPeriod != null" >
     	RECEIVE_PAY_PERIOD = #{receivePayPeriod,jdbcType=INTEGER},
      </if>
      <if test="allPrepayNotImportStatus != null" >
     	ALL_PREPAY_NOT_IMPORT_STATUS = #{allPrepayNotImportStatus,jdbcType=INTEGER},
      </if>
      <if test="bankCost != null" >
        BANK_COST = #{bankCost,jdbcType=DOUBLE},
      </if>
      <if test="feeForExchangeBill != null" >
        FEE_FOR_EXCHANGE_BILL = #{feeForExchangeBill,jdbcType=DOUBLE},
      </if>
      <if test="otherFee != null" >
        OTHER_FEE = #{otherFee,jdbcType=DOUBLE}
      </if>
      <if test="urgentLevelId != null" >
        URGENT_LEVEL_ID = #{urgentLevelId,jdbcType=INTEGER}
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.naswork.model.SupplierOrder" >
    update supplier_order
    set CLIENT_ORDER_ID = #{clientOrderId,jdbcType=INTEGER},
      SUPPLIER_ID = #{supplierId,jdbcType=INTEGER},
      CURRENCY_ID = #{currencyId,jdbcType=INTEGER},
      EXCHANGE_RATE = #{exchangeRate,jdbcType=DOUBLE},
      ORDER_DATE = #{orderDate,jdbcType=DATE},
      ORDER_NUMBER = #{orderNumber,jdbcType=VARCHAR},
      TERMS = #{terms,jdbcType=INTEGER},
      REMARK = #{remark,jdbcType=VARCHAR},
      UPDATE_TIMESTAMP = #{updateTimestamp,jdbcType=TIMESTAMP},
      ORDER_STATUS_ID = #{orderStatusId,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
 
  <!-- 供应商订单管理 --> 
  <select id="SupplierOrderManagePage" parameterType="page" resultMap="supplierOrderManageVo">
  	SELECT
  	    DISTINCT
		so.id,
		so.client_order_id,
		c.id AS client_id,
		c. CODE AS client_code,
		c. NAME AS client_name,
		so.supplier_id,
		s. CODE AS supplier_code,
		s. NAME AS supplier_name,
		s.contact_name,
		s.address,
		s.phone,
		s.fax,
		s.bank,
		s.bank_account_number,
		s.tax_payer_number,
        sc1.value AS supplier_status,
		so.PREPAY_RATE,so.SHIP_PAY_RATE,so.RECEIVE_PAY_PERIOD,so.RECEIVE_PAY_RATE,
		cu.id AS currency_id,
		cu. CODE AS currency_code,
		cu.
	VALUE
		AS currency_value,
		ci.air_type_id,
		AT . CODE AS air_type_code,
		AT .
	VALUE
		AS air_type_value,
		sta.id AS order_status_id,
		sta. CODE AS order_status_code,
		sta.
	VALUE
		AS order_status_value,
		co.exchange_rate AS client_exchange_rate,
		so.exchange_rate,
		co.order_number AS client_order_number,
		so.order_number AS supplier_order_number,
		so.order_date,
		so.terms,
		so.remark,
		so.update_timestamp,
		so.order_type,tu.user_name,
		so.URGENT_LEVEL_ID,
		sc.`VALUE` AS URGENT_LEVEL_VALUE
	FROM
		supplier_order so
	INNER JOIN client_order co ON (so.client_order_id = co.id)
	INNER JOIN client_quote cq ON (co.client_quote_id = cq.id)
	INNER JOIN client_inquiry ci ON (cq.client_inquiry_id = ci.id)
	INNER JOIN client c ON (ci.client_id = c.id)
	INNER JOIN supplier s ON (so.supplier_id = s.id)
    INNER JOIN system_code sc1 ON sc1.id = s.SUPPLIER_STATUS_ID
	LEFT JOIN t_user tu ON tu.user_id=so.create_user_id 
	<if test="userId != null">
	LEFT JOIN authority_relation ar on (ar.SUPPLIER_ID = so.SUPPLIER_ID)
	</if>
	INNER JOIN system_code cu ON (so.currency_id = cu.id)
	INNER JOIN system_code bt ON (ci.biz_type_id = bt.id)
	INNER JOIN system_code AT ON (ci.air_type_id = AT .id)
	INNER JOIN system_code sta ON (so.order_status_id = sta.id)
	LEFT JOIN system_code sc ON sc.ID = so.URGENT_LEVEL_ID
	<if test="partNumber != null">
	LEFT JOIN supplier_order_element soe ON (soe.SUPPLIER_ORDER_ID = so.ID)
	LEFT JOIN supplier_quote_element sqe ON (sqe.ID = soe.SUPPLIER_QUOTE_ELEMENT_ID)
	</if>
	where 1=1 
	<if test="where != null">
		and ${where}
	</if>
	<if test="userId != null">
		and ar.USER_ID = #{userId}
	</if>
	<if test="partNumber != null">
		and sqe.PART_NUMBER = #{partNumber}
	</if>
	<if test="orderby != null">
		${orderby}
	</if>
  </select>
  
  <select id="dueRemindSupplierOrderManagePage" parameterType="page" resultMap="supplierOrderManageVo">
  	SELECT
		DISTINCT so.ID,so.order_number AS supplier_order_number,so.order_date,so.update_timestamp,	sta.VALUE
		AS order_status_value,	s. CODE AS supplier_code,co.order_number AS client_order_number
	FROM
		supplier_order_element soe
	LEFT JOIN v_supplier_import_element vsie ON (
		soe.id = vsie.supplier_order_element_id
	)
	INNER JOIN supplier_order so ON (
		soe.supplier_order_id = so.id
	)
	INNER JOIN client_order co ON (so.client_order_id = co.id)
	INNER JOIN client_quote cq ON (co.client_quote_id = cq.id)
	INNER JOIN client_inquiry ci ON (cq.client_inquiry_id = ci.id)
	INNER JOIN client c ON (ci.client_id = c.id)
	INNER JOIN supplier s ON (so.supplier_id = s.id)
	INNER JOIN client_order_element coe ON (
		soe.client_order_element_id = coe.id
	)
	INNER JOIN client_quote_element cqe ON (
		coe.client_quote_element_id = cqe.id
	)
	INNER JOIN supplier_quote_element sqe ON (
		soe.supplier_quote_element_id = sqe.id
	)
	INNER JOIN supplier_quote sq ON (
		sqe.supplier_quote_id = sq.id
	)
	INNER JOIN supplier_inquiry si ON (
		sq.supplier_inquiry_id = si.id
	)
	INNER JOIN element e ON (sqe.element_id = e.id)
	INNER JOIN system_code cu ON (so.currency_id = cu.id)
	INNER JOIN system_code cond ON (sqe.condition_id = cond.id)
	INNER JOIN system_code cert ON (
		sqe.certification_id = cert.id
	)INNER JOIN system_code sta ON (so.order_status_id = sta.id)
	INNER JOIN system_code bt ON (ci.biz_type_id = bt.id)
	INNER JOIN system_code AT ON (ci.air_type_id = AT .id)
	<if test="userId != null">
	  INNER JOIN authority_relation ar on (ar.SUPPLIER_ID=s.ID)
	</if>
	WHERE 1=1 and 
	<if test="where !=null">
		${where} and
	</if>
	<if test="userId != null">
		ar.USER_ID =${userId} AND
	</if>
	 IFNULL(vsie.import_amount, 0) != soe.amount and so.order_status_id = '60'
	<if test="orderby != null">
		${orderby}
	</if>
	</select>
  
  <select id="findById" parameterType="Integer" resultMap="supplierOrderManageVo">
  		SELECT
		so.id,so.PREPAY_RATE,so.SHIP_PAY_RATE,so.RECEIVE_PAY_PERIOD,so.RECEIVE_PAY_RATE,
		so.client_order_id,
		c.id AS client_id,
		c. CODE AS client_code,
		c. NAME AS client_name,
		so.supplier_id,
		s. CODE AS supplier_code,
		s. NAME AS supplier_name,
		s.contact_name,
		s.address,
		s.phone,
		s.fax,
		s.bank,
		s.payment_rule,
		s.bank_account_number,
		s.tax_payer_number,
		cu.id AS currency_id,
		cu. CODE AS currency_code,
		cu.
	VALUE
		AS currency_value,
		ci.air_type_id,
		AT . CODE AS air_type_code,
		AT .
	VALUE
		AS air_type_value,
		sta.id AS order_status_id,
		sta. CODE AS order_status_code,
		sta.
	VALUE
		AS order_status_value,
		co.exchange_rate AS client_exchange_rate,
		so.exchange_rate,
		co.order_number AS client_order_number,
		so.order_number AS supplier_order_number,
		so.order_date,
		so.terms,
		so.remark,
		so.update_timestamp,
		so.URGENT_LEVEL_ID
	FROM
		supplier_order so
	INNER JOIN client_order co ON (so.client_order_id = co.id)
	INNER JOIN client_quote cq ON (co.client_quote_id = cq.id)
	INNER JOIN client_inquiry ci ON (cq.client_inquiry_id = ci.id)
	INNER JOIN client c ON (ci.client_id = c.id)
	INNER JOIN supplier s ON (so.supplier_id = s.id)
	INNER JOIN system_code cu ON (so.currency_id = cu.id)
	INNER JOIN system_code bt ON (ci.biz_type_id = bt.id)
	INNER JOIN system_code AT ON (ci.air_type_id = AT .id)
	INNER JOIN system_code sta ON (so.order_status_id = sta.id)
	where so.id = #{id}
  </select>
  
  <select id="findByClientOrderId" parameterType="com.naswork.model.SupplierOrder" resultMap="BaseResultMap">
  		select * from supplier_order so where so.CLIENT_ORDER_ID=${clientOrderId} and so.SUPPLIER_ID = ${supplierId} and so.ORDER_STATUS_ID != 64
  		<if test="orderType != null">
			 and so.order_type=${orderType}
		</if>
		<if test="orderType == null">
			 and so.order_type is NULL
		</if>
  		 ORDER BY so.UPDATE_TIMESTAMP DESC limit 1
  </select>
  
  <select id="getQuoteNumber" parameterType="Integer" resultType="String">
  		select DISTINCT sq.id from supplier_quote sq 
			LEFT JOIN supplier_quote_element sqe on sq.ID=sqe.SUPPLIER_QUOTE_ID
			LEFT JOIN supplier_order_element soe on soe.SUPPLIER_QUOTE_ELEMENT_ID=sqe.ID
			LEFT JOIN supplier_order so on so.ID=soe.SUPPLIER_ORDER_ID
			where so.id=#{supplierOrderId}
  </select>
  
  <select id="findSupplierOrder" parameterType="Integer" resultMap="BaseResultMap">
  SELECT
		so.id,
		so.client_order_id,
		c.id AS client_id,
		c. CODE AS client_code,
		c. NAME AS client_name,
		so.supplier_id,
		s. CODE AS supplier_code,
		s. NAME AS supplier_name,
		s.contact_name,
		s.address,
		s.phone,
		s.fax,
		s.bank,
		s.bank_account_number,
		s.tax_payer_number,
		cu.id AS currency_id,
		cu. CODE AS currency_code,
		cu.
	VALUE
		AS currency_value,
		ci.air_type_id,
		AT . CODE AS air_type_code,
		AT .
	VALUE
		AS air_type_value,
		sta.id AS order_status_id,
		sta. CODE AS order_status_code,
		sta.
	VALUE
		AS order_status_value,
		co.exchange_rate AS client_exchange_rate,
		so.exchange_rate,
		co.order_number AS client_order_number,
		so.order_number AS supplier_order_number,
		so.order_date,
		so.terms,
		so.remark,
		so.update_timestamp
	FROM
		 supplier_order so
	INNER JOIN client_order co ON (so.client_order_id = co.id)
	INNER JOIN client_quote cq ON (co.client_quote_id = cq.id)
	INNER JOIN client_inquiry ci ON (cq.client_inquiry_id = ci.id)
	INNER JOIN client c ON (ci.client_id = c.id)
	INNER JOIN supplier s ON (so.supplier_id = s.id)
	INNER JOIN system_code cu ON (so.currency_id = cu.id)
	INNER JOIN system_code bt ON (ci.biz_type_id = bt.id)
	INNER JOIN system_code AT ON (ci.air_type_id = AT .id)
	INNER JOIN system_code sta ON (so.order_status_id = sta.id)
  WHERE co.id=#{0} AND s.id=#{1} AND so.order_status_id=#{2}
  </select>
  
  <select id="NoOrderPage" parameterType="page" resultMap="clientOrder">
		SELECT DISTINCT
			co.id,
			co.ORDER_NUMBER,
			co.SOURCE_NUMBER,
			co.ORDER_DATE,
			c.`CODE` AS client_code,
			sc.`CODE` AS air_code
		FROM
			client_order co
		LEFT JOIN client_order_element coe ON (coe.CLIENT_ORDER_ID = co.id)
		LEFT JOIN supplier_order_element soe ON (
			soe.CLIENT_ORDER_ELEMENT_ID = coe.ID
			AND soe.ORDER_STATUS_ID != 64
		)
		LEFT JOIN supplier_order so ON (
			so.ID = soe.SUPPLIER_ORDER_ID
			AND so.ORDER_STATUS_ID != 64
		)
		LEFT JOIN v_supplier_order_amount vsoa ON (
			vsoa.client_order_element_id = coe.ID
		)
		LEFT JOIN client_quote cq ON (cq.ID = co.CLIENT_QUOTE_ID)
		LEFT JOIN client_inquiry ci ON (ci.id = cq.CLIENT_INQUIRY_ID)
		LEFT JOIN client c ON (c.id = ci.CLIENT_ID)
		LEFT JOIN system_code sc ON (sc.ID = ci.AIR_TYPE_ID)
		WHERE
			(vsoa.client_order_element_id IS NULL OR vsoa.supplier_order_amount_sum  &lt; coe.AMOUNT)
		AND co.ORDER_STATUS_ID = '60'
		<if test="where != null">
			and ${where}
		</if>
		<if test="orderby != null">
			${orderby}
		</if>
  </select>
  
  <select id="NoOrderELementPage" parameterType="page" resultMap="clientOrderElement">
  			SELECT DISTINCT
				IFNULL(
					coe.DESCRIPTION,
					cie.DESCRIPTION
				) DESCRIPTION,
				cie.part_number,
				cie.ITEM,
				cie.CSN,
				cie.UNIT,
				c.`CODE`,
				ci.QUOTE_NUMBER,
				co.ORDER_DATE,
				(coe.AMOUNT - IFNULL(vsoa.supplier_order_amount_sum,0)) AS AMOUNT,
				coe.LEAD_TIME,
				coe.amount AS client_order_amount
			FROM
				client_order_element coe
			LEFT JOIN client_order co ON (co.ID = coe.CLIENT_ORDER_ID)
			LEFT JOIN supplier_order_element soe ON (
				soe.CLIENT_ORDER_ELEMENT_ID = coe.ID
				AND soe.ORDER_STATUS_ID != 64
			)
			LEFT JOIN supplier_order so ON (
				so.ID = soe.SUPPLIER_ORDER_ID
				AND so.ORDER_STATUS_ID != 64
			)
			LEFT JOIN client_quote_element cqe ON (
				cqe.ID = coe.CLIENT_QUOTE_ELEMENT_ID
			)
			LEFT JOIN client_inquiry_element cie ON (
				cie.id = cqe.CLIENT_INQUIRY_ELEMENT_ID
			)
			LEFT JOIN client_inquiry ci ON (
				ci.ID = cie.CLIENT_INQUIRY_ID
			)
			LEFT JOIN client c ON (c.ID = ci.CLIENT_ID)
			LEFT JOIN v_supplier_order_amount vsoa ON (
				vsoa.client_order_element_id = coe.ID
			)
			where coe.CLIENT_ORDER_ID = #{clientOrderId}
			AND (vsoa.client_order_element_id IS NULL OR vsoa.supplier_order_amount_sum &lt; coe.AMOUNT)
			and coe.AMOUNT != 0
  </select>
  
    <select id="NoOrderELementDataPage" parameterType="page" resultMap="clientOrderElement">
		SELECT DISTINCT
			IFNULL(
				coe.DESCRIPTION,
				cie.DESCRIPTION
			) DESCRIPTION,
			cie.part_number,
			cie.ITEM,
			cie.CSN,
			cie.UNIT,
			c.`CODE`,
			(coe.AMOUNT - IFNULL(vsoa.supplier_order_amount_sum,0)) AS AMOUNT,
			coe.LEAD_TIME,
			coe.DEADLINE,
			ci.QUOTE_NUMBER,
			co.ORDER_DATE,
			co.order_number,
			co.source_number,
			c. CODE client_code,
			sc.`CODE` AS air_code,
			coe.amount AS client_order_amount
		FROM
			client_order_element coe
		LEFT JOIN client_order co ON (co.ID = coe.CLIENT_ORDER_ID)
		LEFT JOIN supplier_order_element soe ON (
			soe.CLIENT_ORDER_ELEMENT_ID = coe.ID
		)
		LEFT JOIN supplier_order so ON (
			so.ID = soe.SUPPLIER_ORDER_ID
			AND so.ORDER_STATUS_ID != 64
		)
		LEFT JOIN client_quote_element cqe ON (
			cqe.ID = coe.CLIENT_QUOTE_ELEMENT_ID
		)
		LEFT JOIN client_inquiry_element cie ON (
			cie.id = cqe.CLIENT_INQUIRY_ELEMENT_ID
		)
		LEFT JOIN client_inquiry ci ON (
			ci.ID = cie.CLIENT_INQUIRY_ID
		)
		LEFT JOIN client c ON (c.ID = ci.CLIENT_ID)
		LEFT JOIN system_code sc ON (sc.ID = ci.AIR_TYPE_ID)
		LEFT JOIN v_supplier_order_amount vsoa ON (
			vsoa.client_order_element_id = coe.ID
		)
		where coe.CLIENT_ORDER_ID in (${clientOrderId})
		AND (vsoa.client_order_element_id IS NULL OR vsoa.supplier_order_amount_sum &lt; coe.AMOUNT)
		and coe.AMOUNT != 0
		order by CO.ORDER_DATE desc	
  </select>
  
  <select id="supplierOrderStat" resultMap="SupplierInquiryStattistic">
  			 SELECT s.id AS supplier_id, s.code AS supplier_code, s.name AS supplier_name,  
			   at.id AS air_type_id, at.code AS air_type_code, at.value AS air_type_value,  
			   bt.id AS biz_type_id, bt.code AS biz_type_code, bt.value AS biz_type_value,  
			   COUNT(DISTINCT so.id) AS supplier_order_count,  
			   SUM(sob.supplier_order_price*so.exchange_rate/er_usd.rate) AS supplier_order_sum  
			   FROM supplier_order so  
			   INNER JOIN client_order co ON (so.client_order_id=co.id)  
			   INNER JOIN client_quote cq ON (co.client_quote_id=cq.id)  
			   INNER JOIN client_inquiry ci ON (cq.client_inquiry_id=ci.id)  
			   INNER JOIN supplier s ON (so.supplier_id=s.id)  
			   INNER JOIN system_code at ON (ci.air_type_id=at.id)  
			   INNER JOIN system_code bt ON (ci.biz_type_id=bt.id)  
			   INNER JOIN exchange_rate er_usd ON (er_usd.currency_id=11)  
			   LEFT OUTER JOIN v_supplier_order_bill sob ON (so.id=sob.supplier_order_id)  
			  		 INNER JOIN authority_relation ar on (ar.SUPPLIER_ID=s.ID)
			   WHERE
				1 = 1
				 <if test="userId != null">
				AND ar.USER_ID=${userId}
				</if>
				
					<if test="supplierId!=null">
				AND s.id=${supplierId}					
				</if>
				<if test="airTypeId!=null">
				AND AT.id=${airTypeId}
				</if>
				<if test="bizTypeId!=null">
				AND  BT.id=${bizTypeId}
				</if>
				<if test="startDate!=null">
			AND so.order_date >=#{startDate}
				</if>
				<if test="endDate!=null">
		<![CDATA[	AND so.order_date <=#{endDate}]]>
				</if>
			GROUP BY
				s.id,
				s. CODE,
				s. NAME,
				AT .id,
				AT . CODE,
				AT .
			VALUE
				,
				bt.id,
				bt. CODE,
				bt.
			VALUE
  </select>
  
  <select id="getIds" parameterType="Integer" resultMap="storageOrderVo">
  		SELECT
			co.ID AS client_order_id,
			cq.ID AS client_quote_id,
			ci.ID AS client_inquiry_id,
			si.ID AS supplier_inquiry_id,
			sq.ID AS supplier_quote_id,
			si.SUPPLIER_ID
		FROM
			client_order co
		LEFT JOIN client_quote cq ON cq.ID = co.CLIENT_QUOTE_ID
		LEFT JOIN client_inquiry ci ON ci.ID = cq.CLIENT_INQUIRY_ID
		LEFT JOIN supplier_inquiry si ON si.CLIENT_INQUIRY_ID = ci.ID
		LEFT JOIN supplier_quote sq ON sq.SUPPLIER_INQUIRY_ID = si.ID
		where co.ID = #{clientOrderId}
  </select>
  
  <select id="getPaymentPercent" parameterType="Integer" resultMap="supplierOrderManageVo">
  		SELECT
			so.ID,
			SUM(IFNULL(vpeb.AMOUNT,0)) AS payment_amount,
			SUM(IFNULL(soe.AMOUNT,0)) AS order_amount,
			SUM(IFNULL(vpeb.PAYMENT_SUM,0)) AS payment_total,
			SUM(IFNULL(soe.PRICE * soe.AMOUNT,0)) AS order_total
		FROM
			v_payment_element_bill vpeb
		LEFT JOIN supplier_order_element soe ON soe.ID = vpeb.SUPPLIER_ORDER_ELEMENT_ID
		LEFT JOIN supplier_order so ON so.ID = soe.SUPPLIER_ORDER_ID
		WHERE
			so.ID = #{supplierOrderId}
		GROUP BY
			so.ID
  </select>
  
  <select id="selectBySupplierOrderElementId" parameterType="Integer" resultMap="BaseResultMap">
  		SELECT DISTINCT so.* FROM supplier_order so
			LEFT JOIN supplier_order_element soe on so.ID = soe.SUPPLIER_ORDER_ID
			WHERE soe.ID = #{supplierOrderElementId}
  </select>
  
  <select id="getIdByLeadTime" parameterType="Integer" resultMap="BaseResultMap">
		SELECT DISTINCT
			so.ID,
			so.CLIENT_ORDER_ID,
			so.SUPPLIER_ID,
			so.CURRENCY_ID,
			so.EXCHANGE_RATE,
			so.ORDER_DATE,
			so.ORDER_NUMBER,
			so.TERMS,
			so.REMARK,
			so.UPDATE_TIMESTAMP,
			so.ORDER_STATUS_ID,
			so.ALL_PREPAY_NOT_IMPORT_STATUS
		FROM
		supplier_order so
		LEFT JOIN authority_relation ar ON ar.SUPPLIER_ID = so.SUPPLIER_ID
		LEFT JOIN supplier_order_element soe ON soe.SUPPLIER_ORDER_ID = so.ID
		LEFT JOIN supplier_import_element sie ON sie.SUPPLIER_ORDER_ELEMENT_ID = soe.ID
		WHERE
			DATE_ADD(soe.DEADLINE,INTERVAL soe.SHIP_LEAD_TIME DAY) = curdate() AND sie.IMPORT_PACKAGE_ELEMENT_ID IS NULL AND so.ALL_PREPAY_NOT_IMPORT_STATUS = 0 
			AND ar.USER_ID = #{userId}
  </select>
  
  <select id="getEmailTextList" parameterType="Integer" resultMap="BaseResultMap">
  		SELECT DISTINCT
			sqe.PART_NUMBER,
			so.ID,
			so.CLIENT_ORDER_ID,
			so.SUPPLIER_ID,
			so.CURRENCY_ID,
			so.EXCHANGE_RATE,
			so.ORDER_DATE,
			so.ORDER_NUMBER,
			so.TERMS,
			so.REMARK,
			so.UPDATE_TIMESTAMP,
			so.ORDER_STATUS_ID,
			so.ALL_PREPAY_NOT_IMPORT_STATUS,
			soe.DEADLINE,
			soe.SHIP_LEAD_TIME
		FROM
		supplier_order so
		LEFT JOIN supplier_order_element soe ON soe.SUPPLIER_ORDER_ID = so.ID
		LEFT JOIN supplier_quote_element sqe ON sqe.ID = soe.SUPPLIER_QUOTE_ELEMENT_ID
		LEFT JOIN supplier_import_element sie ON sie.SUPPLIER_ORDER_ELEMENT_ID = soe.ID
		WHERE
			DATE_ADD(soe.DEADLINE,INTERVAL soe.SHIP_LEAD_TIME DAY) = curdate() AND sie.IMPORT_PACKAGE_ELEMENT_ID IS NULL AND so.ALL_PREPAY_NOT_IMPORT_STATUS = 0
			AND so.ID = #{supplierOrderId} 
			AND soe.ORDER_STATUS_ID != 64 AND so.ORDER_STATUS_ID != 64
  </select>
  
  <select id="getAddress" parameterType="Integer" resultMap="address">
  		SELECT * FROM storage_address_for_order safo WHERE safo.ID = #{id}
  </select>
  
  <select id="getDestination" parameterType="Integer" resultType="Integer">
  		SELECT DISTINCT
			soe.DESTINATION
		FROM
			supplier_order so
		LEFT JOIN supplier_order_element soe ON so.ID = soe.SUPPLIER_ORDER_ID
		WHERE
			so.ID = #{id} AND soe.DESTINATION IS NOT NULL limit 0,1
  </select>
  
  <select id="selectByOrderNumber" parameterType="String" resultMap="BaseResultMap">
  	SELECT
		so.ID,
		so.CLIENT_ORDER_ID,
		so.SUPPLIER_ID,
		so.CURRENCY_ID,
		so.EXCHANGE_RATE,
		so.ORDER_DATE,
		so.ORDER_NUMBER,
		so.TERMS,
		so.REMARK,
		so.UPDATE_TIMESTAMP,
		so.ORDER_STATUS_ID,
		so.PREPAY_RATE,
		so.SHIP_PAY_RATE,
		so.RECEIVE_PAY_RATE
	FROM
		supplier_order so
	WHERE
		so.ORDER_NUMBER = #{orderNumber}
  </select>


</mapper>