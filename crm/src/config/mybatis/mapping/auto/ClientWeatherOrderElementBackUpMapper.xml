<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.naswork.dao.ClientWeatherOrderElementBackUpDao">
  <resultMap id="BaseResultMap" type="com.naswork.model.ClientWeatherOrderElementBackUp">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="ITEM" jdbcType="INTEGER" property="item" />
    <result column="PART_NUMBER" jdbcType="VARCHAR" property="partNumber" />
    <result column="ERROR" jdbcType="VARCHAR" property="error" />
    <result column="LINE" jdbcType="INTEGER" property="line" />
    <result column="CLIENT_WEATHER_ORDER_ID" jdbcType="INTEGER" property="clientWeatherOrderId" />
    <result column="CLIENT_QUOTE_ELEMENT_ID" jdbcType="INTEGER" property="clientQuoteElementId" />
    <result column="AMOUNT" jdbcType="DOUBLE" property="amount" />
    <result column="PRICE" jdbcType="DOUBLE" property="price" />
    <result column="LEAD_TIME" jdbcType="VARCHAR" property="leadTime" />
    <result column="DEADLINE" jdbcType="DATE" property="deadline" />
    <result column="UPDATE_TIMESTAMP" jdbcType="TIMESTAMP" property="updateTimestamp" />
    <result column="CERTIFICATION_ID" jdbcType="INTEGER" property="certificationId" />
    <result column="FIXED_COST" jdbcType="DOUBLE" property="fixedCost" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <result column="BANK_CHARGES" jdbcType="DOUBLE" property="bankCharges" />
    <result column="DESCRIPTION" jdbcType="VARCHAR" property="description" />
    <result column="UNIT" jdbcType="VARCHAR" property="unit" />
    <result column="ERROR_FLAG" jdbcType="INTEGER" property="errorFlag" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, USER_ID, ITEM, PART_NUMBER, ERROR, LINE, CLIENT_WEATHER_ORDER_ID, CLIENT_QUOTE_ELEMENT_ID, 
    AMOUNT, PRICE, LEAD_TIME, DEADLINE, UPDATE_TIMESTAMP, CERTIFICATION_ID, FIXED_COST, 
    REMARK, BANK_CHARGES, DESCRIPTION, UNIT, ERROR_FLAG
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from client_weather_order_element_back_up
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from client_weather_order_element_back_up
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.naswork.model.ClientWeatherOrderElementBackUp">
    insert into client_weather_order_element_back_up (ID, USER_ID, ITEM, 
      PART_NUMBER, ERROR, LINE, 
      CLIENT_WEATHER_ORDER_ID, CLIENT_QUOTE_ELEMENT_ID, 
      AMOUNT, PRICE, LEAD_TIME, 
      DEADLINE, UPDATE_TIMESTAMP, CERTIFICATION_ID, 
      FIXED_COST, REMARK, BANK_CHARGES, 
      DESCRIPTION, UNIT, ERROR_FLAG
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{item,jdbcType=INTEGER}, 
      #{partNumber,jdbcType=VARCHAR}, #{error,jdbcType=VARCHAR}, #{line,jdbcType=INTEGER}, 
      #{clientWeatherOrderId,jdbcType=INTEGER}, #{clientQuoteElementId,jdbcType=INTEGER}, 
      #{amount,jdbcType=DOUBLE}, #{price,jdbcType=DOUBLE}, #{leadTime,jdbcType=VARCHAR}, 
      #{deadline,jdbcType=DATE}, #{updateTimestamp,jdbcType=TIMESTAMP}, #{certificationId,jdbcType=INTEGER}, 
      #{fixedCost,jdbcType=DOUBLE}, #{remark,jdbcType=VARCHAR}, #{bankCharges,jdbcType=DOUBLE}, 
      #{description,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, #{errorFlag,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.naswork.model.ClientWeatherOrderElementBackUp">
    insert into client_weather_order_element_back_up
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="item != null">
        ITEM,
      </if>
      <if test="partNumber != null">
        PART_NUMBER,
      </if>
      <if test="error != null">
        ERROR,
      </if>
      <if test="line != null">
        LINE,
      </if>
      <if test="clientWeatherOrderId != null">
        CLIENT_WEATHER_ORDER_ID,
      </if>
      <if test="clientQuoteElementId != null">
        CLIENT_QUOTE_ELEMENT_ID,
      </if>
      <if test="amount != null">
        AMOUNT,
      </if>
      <if test="price != null">
        PRICE,
      </if>
      <if test="leadTime != null">
        LEAD_TIME,
      </if>
      <if test="deadline != null">
        DEADLINE,
      </if>
      <if test="updateTimestamp != null">
        UPDATE_TIMESTAMP,
      </if>
      <if test="certificationId != null">
        CERTIFICATION_ID,
      </if>
      <if test="fixedCost != null">
        FIXED_COST,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
      <if test="bankCharges != null">
        BANK_CHARGES,
      </if>
      <if test="description != null">
        DESCRIPTION,
      </if>
      <if test="unit != null">
        UNIT,
      </if>
      <if test="errorFlag != null">
        ERROR_FLAG,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="item != null">
        #{item,jdbcType=INTEGER},
      </if>
      <if test="partNumber != null">
        #{partNumber,jdbcType=VARCHAR},
      </if>
      <if test="error != null">
        #{error,jdbcType=VARCHAR},
      </if>
      <if test="line != null">
        #{line,jdbcType=INTEGER},
      </if>
      <if test="clientWeatherOrderId != null">
        #{clientWeatherOrderId,jdbcType=INTEGER},
      </if>
      <if test="clientQuoteElementId != null">
        #{clientQuoteElementId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="leadTime != null">
        #{leadTime,jdbcType=VARCHAR},
      </if>
      <if test="deadline != null">
        #{deadline,jdbcType=DATE},
      </if>
      <if test="updateTimestamp != null">
        #{updateTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="certificationId != null">
        #{certificationId,jdbcType=INTEGER},
      </if>
      <if test="fixedCost != null">
        #{fixedCost,jdbcType=DOUBLE},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="bankCharges != null">
        #{bankCharges,jdbcType=DOUBLE},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="errorFlag != null">
        #{errorFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.naswork.model.ClientWeatherOrderElementBackUp">
    update client_weather_order_element_back_up
    <set>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="item != null">
        ITEM = #{item,jdbcType=INTEGER},
      </if>
      <if test="partNumber != null">
        PART_NUMBER = #{partNumber,jdbcType=VARCHAR},
      </if>
      <if test="error != null">
        ERROR = #{error,jdbcType=VARCHAR},
      </if>
      <if test="line != null">
        LINE = #{line,jdbcType=INTEGER},
      </if>
      <if test="clientWeatherOrderId != null">
        CLIENT_WEATHER_ORDER_ID = #{clientWeatherOrderId,jdbcType=INTEGER},
      </if>
      <if test="clientQuoteElementId != null">
        CLIENT_QUOTE_ELEMENT_ID = #{clientQuoteElementId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        AMOUNT = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="price != null">
        PRICE = #{price,jdbcType=DOUBLE},
      </if>
      <if test="leadTime != null">
        LEAD_TIME = #{leadTime,jdbcType=VARCHAR},
      </if>
      <if test="deadline != null">
        DEADLINE = #{deadline,jdbcType=DATE},
      </if>
      <if test="updateTimestamp != null">
        UPDATE_TIMESTAMP = #{updateTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="certificationId != null">
        CERTIFICATION_ID = #{certificationId,jdbcType=INTEGER},
      </if>
      <if test="fixedCost != null">
        FIXED_COST = #{fixedCost,jdbcType=DOUBLE},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="bankCharges != null">
        BANK_CHARGES = #{bankCharges,jdbcType=DOUBLE},
      </if>
      <if test="description != null">
        DESCRIPTION = #{description,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        UNIT = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="errorFlag != null">
        ERROR_FLAG = #{errorFlag,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.naswork.model.ClientWeatherOrderElementBackUp">
    update client_weather_order_element_back_up
    set USER_ID = #{userId,jdbcType=INTEGER},
      ITEM = #{item,jdbcType=INTEGER},
      PART_NUMBER = #{partNumber,jdbcType=VARCHAR},
      ERROR = #{error,jdbcType=VARCHAR},
      LINE = #{line,jdbcType=INTEGER},
      CLIENT_WEATHER_ORDER_ID = #{clientWeatherOrderId,jdbcType=INTEGER},
      CLIENT_QUOTE_ELEMENT_ID = #{clientQuoteElementId,jdbcType=INTEGER},
      AMOUNT = #{amount,jdbcType=DOUBLE},
      PRICE = #{price,jdbcType=DOUBLE},
      LEAD_TIME = #{leadTime,jdbcType=VARCHAR},
      DEADLINE = #{deadline,jdbcType=DATE},
      UPDATE_TIMESTAMP = #{updateTimestamp,jdbcType=TIMESTAMP},
      CERTIFICATION_ID = #{certificationId,jdbcType=INTEGER},
      FIXED_COST = #{fixedCost,jdbcType=DOUBLE},
      REMARK = #{remark,jdbcType=VARCHAR},
      BANK_CHARGES = #{bankCharges,jdbcType=DOUBLE},
      DESCRIPTION = #{description,jdbcType=VARCHAR},
      UNIT = #{unit,jdbcType=VARCHAR},
      ERROR_FLAG = #{errorFlag,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getErrorListPage" parameterType="page" resultMap="BaseResultMap">
  	SELECT
		cwoebu.ID,
		cwoebu.ITEM,
		cwoebu.PART_NUMBER,
		cwoebu.ERROR
	FROM
		client_weather_order_element_back_up cwoebu
	WHERE
		cwoebu.ERROR_FLAG = 1 AND cwoebu.USER_ID = #{userId}
  </select>
  
  <select id="checkErrorRecord" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  	SELECT * FROM client_weather_order_element_back_up cwoeb WHERE cwoeb.CLIENT_WEATHER_ORDER_ID = #{id} AND cwoeb.ERROR_FLAG = 1
  </select>
  
  <delete id="deleteMessage" parameterType="java.lang.Integer">
  	DELETE from client_weather_order_element_back_up where CLIENT_WEATHER_ORDER_ID = #{id}
  </delete>
  
  <select id="selectByOrderId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  	SELECT * FROM client_weather_order_element_back_up cwoeb  WHERE cwoeb.CLIENT_WEATHER_ORDER_ID =  #{id} and cwoeb.ERROR_FLAG = 0
  </select>
  
</mapper>