package com.asiainfo.httpsws.eaopbase;

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;

import javax.xml.bind.JAXBContext;
import javax.xml.namespace.QName;
import javax.xml.ws.Dispatch;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;

import com.asiainfo.util.StringUtil;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.3-hudson-390-
 * Generated source version: 2.0
 * <p>
 * An example of how this class may be used:
 * 
 * <pre>
 * EaopServer service = new EaopServer();
 * EaopServer portType = service.getEaopServerPort();
 * portType.handle(...);
 * </pre>
 * 
 * </p>
 */
@WebServiceClient(name = "EaopServer", targetNamespace = "http://eaop.gd.chinamobile.com", wsdlLocation = "https://221.179.11.204:9090/eaop/EaopServerPort?wsdl")
public class EaopServer_Service extends Service {
	private final static URL EAOPSERVER_WSDL_LOCATION;
	private final static Logger logger = Logger.getLogger(EaopServer_Service.class.getName());
	static {
		URL url = null;
		//String wsdlUrl = ClientConfig.getValue("eaopWsdlUrl");
		String eaopWsdlUrl =StringUtil.getProperty(
				"config.properties", "EAOPWS_URL");
		String wsdlUrl = null;
		if (eaopWsdlUrl.indexOf("http") != -1) {
			wsdlUrl = eaopWsdlUrl;
		} else {
			wsdlUrl = new File(eaopWsdlUrl).toURI().toString();
		}
		try {
			URL baseUrl;
			baseUrl = EaopServer_Service.class.getResource(".");
			//			url = new URL(baseUrl, "https://172.20.33.175:9443/eaop/EaopServerPort?wsdl");

			url = new URL(baseUrl, wsdlUrl);
		} catch (MalformedURLException e) {
			logger.warning("Failed to create URL for the wsdl Location: '" + wsdlUrl + "', retrying as a local file");
			logger.warning(e.getMessage());
		}
		EAOPSERVER_WSDL_LOCATION = url;
	}

	public EaopServer_Service(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public EaopServer_Service() {
		super(EAOPSERVER_WSDL_LOCATION, new QName("http://eaop.gd.chinamobile.com", "EaopServer"));
	}

	final static QName PORT_QNAME = new QName("http://eaop.gd.chinamobile.com", "EaopServerPort");

	/**
	 * @return
	 *         returns EaopServer
	 */
	@WebEndpoint(name = "EaopServerPort")
	public EaopServer getEaopServerPort() {
		return super.getPort(PORT_QNAME, EaopServer.class);
	}

	public String handle(String msg) throws Exception {
		JAXBContext ctxt = JAXBContext.newInstance(Handle.class, HandleResponse.class);
		Dispatch<Object> dis = createDispatch(PORT_QNAME, ctxt, Mode.PAYLOAD);

		//请求超时（单位:毫秒）
		int requestTO = 20000;
		//连接超时（单位:毫秒）
		int connectTO = 10000;

		//jdk1.6自带
		//com.sun.xml.internal.ws.client.BindingProviderProperties
		dis.getRequestContext().put("com.sun.xml.internal.ws.request.timeout", requestTO);
		dis.getRequestContext().put("com.sun.xml.internal.ws.connect.timeout", connectTO);
		//jdk1.5引用webservices-rt.jar
		//com.sun.xml.ws.client.BindingProviderProperties
		dis.getRequestContext().put("com.sun.xml.ws.request.timeout", requestTO);
		dis.getRequestContext().put("com.sun.xml.ws.connect.timeout", connectTO);

		Handle handle = new Handle(msg);
		return ((HandleResponse) dis.invoke(handle)).getReturn();
	}
}
